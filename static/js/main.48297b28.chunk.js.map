{"version":3,"sources":["panels/events.js","panels/messages.js","hooks/useShortText.js","panels/profile.js","panels/chat.js","App.js","index.js"],"names":["Events","style","height","icon","width","Messages","onChatOpen","map","e","before","gradientColor","calcInitialsAvatarColor","onClick","caption","str","length","substring","Profile","Chat","chatID","onClose","size","Date","now","status","App","useState","scheme","React","activeStory","setActiveStory","messagesActivePanel","setMessagesActivePanel","setChatID","onStoryChange","currentTarget","dataset","story","header","separator","justifyContent","animate","spaced","maxWidth","tabbar","selected","text","id","activePanel","chat_id","bridge","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48297b28.chunk.js","sourcesContent":["import { Icon56NewsfeedOutline } from \"@vkontakte/icons\"\r\nimport { Group, PanelHeader, PanelHeaderBack, Placeholder } from \"@vkontakte/vkui\"\r\n\r\nexport const Events = () => {\r\n    return (\r\n        <>\r\n            <PanelHeader>События</PanelHeader>\r\n            <Group style={{ height: \"1000px\" }}>\r\n                <Placeholder\r\n                    icon={<Icon56NewsfeedOutline width={56} height={56} />}\r\n                />\r\n            </Group>\r\n        </>\r\n    )\r\n}\r\n","import { calcInitialsAvatarColor, Group, InitialsAvatar, List, PanelHeader, RichCell, Text } from \"@vkontakte/vkui\"\r\nimport { useShortText } from \"../hooks/useShortText\"\r\n\r\nexport const Messages = ({onChatOpen}) => {\r\n    return (\r\n        <>\r\n            <PanelHeader>Сообщения</PanelHeader>\r\n            <Group>\r\n                <List>\r\n                    {\r\n                        [1, 2, 3, 4].map(e => {\r\n                            return (\r\n                                <RichCell\r\n                                    before={\r\n                                        <InitialsAvatar gradientColor={calcInitialsAvatarColor(e)}>\r\n                                            C{e}\r\n                                        </InitialsAvatar>}\r\n                                    key={e}\r\n                                    onClick={() => onChatOpen(`Chat ${e}`)}\r\n                                    caption={\r\n                                        <Text>{useShortText(\"FirstName: last message very long text\", 30)} &#183; 2h</Text>\r\n                                    }\r\n                                >\r\n                                    Chat {e}\r\n                                </RichCell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </Group>\r\n        </>\r\n    )\r\n}","export const useShortText = (str, length) => {\r\n    return str.length > length ? str.substring(0, length) + \"...\" : str\r\n}","import { Icon28UserCircleOutline } from \"@vkontakte/icons\"\r\nimport { Group, PanelHeader, PanelHeaderBack, Placeholder } from \"@vkontakte/vkui\"\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <>\r\n            <PanelHeader>Профиль</PanelHeader>\r\n            <Group style={{ height: \"1000px\" }}>\r\n                <Placeholder\r\n                    icon={<Icon28UserCircleOutline width={56} height={56} />}\r\n                ></Placeholder>\r\n            </Group>\r\n        </>\r\n    )\r\n}","import { calcInitialsAvatarColor, Group, InitialsAvatar, PanelHeader, PanelHeaderBack, PanelHeaderContent } from \"@vkontakte/vkui\"\r\n\r\nexport const Chat = ({\r\n    chatID,\r\n    onClose\r\n}) => {\r\n    return (\r\n        <>\r\n            <PanelHeader before={<PanelHeaderBack onClick={() => onClose()}/>}>\r\n                <PanelHeaderContent\r\n                    before={\r\n                        <InitialsAvatar size={36} gradientColor={calcInitialsAvatarColor(Date.now())}>\r\n                            Ch\r\n                        </InitialsAvatar>\r\n                    }\r\n                    status=\"10 участников\"\r\n                >\r\n                    {chatID}\r\n                </PanelHeaderContent>\r\n            </PanelHeader>\r\n            <Group>\r\n                \r\n            </Group>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\nimport { View, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol, PanelHeader, Epic, Tabbar, TabbarItem, Panel } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './styles/index.css'\nimport { Icon28MessageOutline, Icon28NewsfeedOutline, Icon28UserCircleOutline } from '@vkontakte/icons';\nimport { Events } from './panels/events';\nimport { Messages } from './panels/messages';\nimport { Profile } from './panels/profile';\nimport { Chat } from './panels/chat';\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activeStory, setActiveStory] = React.useState(\"events\")\n\tconst [messagesActivePanel, setMessagesActivePanel] = useState(\"messages\")\n\tconst [chatID, setChatID] = useState(null)\n\tconst onStoryChange = (e) => setActiveStory(e.currentTarget.dataset.story)\n\n\tconst openChatHandler = (chat_id) => {\n\t\tsetMessagesActivePanel(\"chat\")\n\t\tsetChatID(chat_id)\n\t}\n\n\tconst closeChatHanler = () => {\n\t\tsetMessagesActivePanel(\"messages\")\n\t\tsetChatID(null)\n\t}\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout\n\t\t\t\t\t\theader={<PanelHeader separator={false} />}\n\t\t\t\t\t\tstyle={{ justifyContent: \"center\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SplitCol\n\t\t\t\t\t\t\tanimate={true}\n\t\t\t\t\t\t\tspaced={false}\n\t\t\t\t\t\t\twidth={\"100%\"}\n\t\t\t\t\t\t\tmaxWidth={\"100%\"}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Epic\n\t\t\t\t\t\t\t\tactiveStory={activeStory}\n\t\t\t\t\t\t\t\ttabbar={\n\t\t\t\t\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"events\"}\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"events\"\n\t\t\t\t\t\t\t\t\t\t\ttext=\"События\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Icon28NewsfeedOutline />\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"messages\"}\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"messages\"\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Сообщения\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Icon28MessageOutline />\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"profile\"}\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"profile\"\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Профиль\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Icon28UserCircleOutline />\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\n\t\t\t\t\t\t\t\t\t</Tabbar>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<View id=\"events\" activePanel=\"events\">\n\t\t\t\t\t\t\t\t\t<Panel id=\"events\">\n\t\t\t\t\t\t\t\t\t\t<Events />\n\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t<View id=\"messages\" activePanel={messagesActivePanel}>\n\t\t\t\t\t\t\t\t\t<Panel id=\"messages\">\n\t\t\t\t\t\t\t\t\t \t<Messages\n\t\t\t\t\t\t\t\t\t\t\tonChatOpen={openChatHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t<Panel id=\"chat\">\n\t\t\t\t\t\t\t\t\t\t<Chat chatID={chatID} onClose={closeChatHanler}/>\n\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t<View id=\"profile\" activePanel=\"profile\">\n\t\t\t\t\t\t\t\t\t<Panel id=\"profile\">\n\t\t\t\t\t\t\t\t\t\t<Profile/>\n\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</Epic>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n"],"sourceRoot":""}