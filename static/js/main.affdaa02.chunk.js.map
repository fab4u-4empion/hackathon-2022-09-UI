{"version":3,"sources":["panels/events.js","panels/messages.js","hooks/useShortText.js","panels/profile.js","App.js","index.js"],"names":["Events","style","height","icon","width","Messages","map","e","before","gradientColor","calcInitialsAvatarColor","caption","str","length","substring","Profile","App","useState","scheme","React","activeStory","setActiveStory","onStoryChange","currentTarget","dataset","story","header","separator","justifyContent","animate","spaced","maxWidth","tabbar","onClick","selected","text","id","activePanel","bridge","send","ReactDOM","render","document","getElementById"],"mappings":"wQAGaA,EAAS,WAClB,OACI,qCACI,cAAC,IAAD,yDACA,cAAC,IAAD,CAAOC,MAAO,CAAEC,OAAQ,UAAxB,SACI,cAAC,IAAD,CACIC,KAAM,cAAC,IAAD,CAAuBC,MAAO,GAAIF,OAAQ,WAKnE,ECVYG,EAAW,WACpB,OACI,qCACI,cAAC,IAAD,qEACA,cAAC,IAAD,UACI,cAAC,IAAD,UAEQ,CAAC,EAAG,EAAG,EAAG,GAAGC,KAAI,SAAAC,GACb,OACI,eAAC,IAAD,CACIC,OAAQ,eAAC,IAAD,CAAgBC,cAAeC,YAAwBH,GAAvD,cAA6DA,KAErEI,QACI,eAAC,IAAD,YCjBXC,EDiB+B,yCCjB1BC,EDiBoE,GChB3FD,EAAIC,OAASA,EAASD,EAAIE,UAAU,EAAGD,GAAU,MAAQD,GDgB5B,cAJR,kBAOUL,IALDA,GCfb,IAACK,EAAKC,CDuBT,UAMxB,EE1BYE,EAAU,WACnB,OACI,qCACI,cAAC,IAAD,yDACA,cAAC,IAAD,CAAOd,MAAO,CAAEC,OAAQ,UAAxB,SACI,cAAC,IAAD,CACIC,KAAM,cAAC,IAAD,CAAyBC,MAAO,GAAIF,OAAQ,WAKrE,ECqEcc,EA1EH,WACX,MAA4BC,mBAAS,gBAArC,mBAAOC,EAAP,KACA,GADA,KACsCC,IAAMF,SAAS,WAArD,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EAAgB,SAACf,GAAD,OAAOc,EAAed,EAAEgB,cAAcC,QAAQC,MAA9C,EAEtB,OACC,cAAC,IAAD,CAAgBP,OAAQA,EAAxB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CACCQ,OAAQ,cAAC,IAAD,CAAaC,WAAW,IAChC1B,MAAO,CAAE2B,eAAgB,UAF1B,SAIC,cAAC,IAAD,CACCC,SAAS,EACTC,QAAQ,EACR1B,MAAO,OACP2B,SAAU,OAJX,SAMC,eAAC,IAAD,CACCX,YAAaA,EACbY,OACC,eAAC,IAAD,WACC,cAAC,IAAD,CACCC,QAASX,EACTY,SAA0B,WAAhBd,EACV,aAAW,SACXe,KAAK,6CAJN,SAMC,cAAC,IAAD,MAED,cAAC,IAAD,CACCF,QAASX,EACTY,SAA0B,aAAhBd,EACV,aAAW,WACXe,KAAK,yDAJN,SAMC,cAAC,IAAD,MAED,cAAC,IAAD,CACCF,QAASX,EACTY,SAA0B,YAAhBd,EACV,aAAW,UACXe,KAAK,6CAJN,SAMC,cAAC,IAAD,SA1BJ,UA+BC,cAAC,IAAD,CAAMC,GAAG,SAASC,YAAY,SAA9B,SACC,cAAC,IAAD,CAAOD,GAAG,SAAV,SACC,cAAC,EAAD,QAGF,cAAC,IAAD,CAAMA,GAAG,WAAWC,YAAY,WAAhC,SACC,cAAC,IAAD,CAAOD,GAAG,WAAV,SACE,cAAC,EAAD,QAGH,cAAC,IAAD,CAAMA,GAAG,UAAUC,YAAY,UAA/B,SACC,cAAC,IAAD,CAAOD,GAAG,UAAV,SACC,cAAC,EAAD,oBAUT,EC3EDE,IAAOC,KAAK,gBAEZC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.affdaa02.chunk.js","sourcesContent":["import { Icon56NewsfeedOutline } from \"@vkontakte/icons\"\r\nimport { Group, PanelHeader, PanelHeaderBack, Placeholder } from \"@vkontakte/vkui\"\r\n\r\nexport const Events = () => {\r\n    return (\r\n        <>\r\n            <PanelHeader>События</PanelHeader>\r\n            <Group style={{ height: \"1000px\" }}>\r\n                <Placeholder\r\n                    icon={<Icon56NewsfeedOutline width={56} height={56} />}\r\n                />\r\n            </Group>\r\n        </>\r\n    )\r\n}\r\n","import { Icon28MessageOutline } from \"@vkontakte/icons\"\r\nimport { Avatar, calcInitialsAvatarColor, Caption, Group, InitialsAvatar, List, PanelHeader, PanelHeaderBack, Placeholder, RichCell, SimpleCell, Text } from \"@vkontakte/vkui\"\r\nimport { useShortText } from \"../hooks/useShortText\"\r\n\r\nexport const Messages = () => {\r\n    return (\r\n        <>\r\n            <PanelHeader>Сообщения</PanelHeader>\r\n            <Group>\r\n                <List>\r\n                    {\r\n                        [1, 2, 3, 4].map(e => {\r\n                            return (\r\n                                <RichCell\r\n                                    before={<InitialsAvatar gradientColor={calcInitialsAvatarColor(e)}>C{e}</InitialsAvatar>}\r\n                                    key={e}\r\n                                    caption={\r\n                                        <Text>{useShortText(\"FirstName: last message very long text\", 30)} &#183; 2h</Text>\r\n                                    }\r\n                                >\r\n                                    Chat {e}\r\n                                </RichCell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </Group>\r\n        </>\r\n    )\r\n}","export const useShortText = (str, length) => {\r\n    return str.length > length ? str.substring(0, length) + \"...\" : str\r\n}","import { Icon28UserCircleOutline } from \"@vkontakte/icons\"\r\nimport { Group, PanelHeader, PanelHeaderBack, Placeholder } from \"@vkontakte/vkui\"\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <>\r\n            <PanelHeader>Профиль</PanelHeader>\r\n            <Group style={{ height: \"1000px\" }}>\r\n                <Placeholder\r\n                    icon={<Icon28UserCircleOutline width={56} height={56} />}\r\n                ></Placeholder>\r\n            </Group>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\nimport { View, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol, PanelHeader, Epic, Tabbar, TabbarItem, Panel } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './styles/index.css'\nimport { Icon28MessageOutline, Icon28NewsfeedOutline, Icon28UserCircleOutline } from '@vkontakte/icons';\nimport { Events } from './panels/events';\nimport { Messages } from './panels/messages';\nimport { Profile } from './panels/profile';\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activeStory, setActiveStory] = React.useState(\"events\")\n\tconst onStoryChange = (e) => setActiveStory(e.currentTarget.dataset.story)\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout\n\t\t\t\t\t\theader={<PanelHeader separator={false} />}\n\t\t\t\t\t\tstyle={{ justifyContent: \"center\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SplitCol\n\t\t\t\t\t\t\tanimate={true}\n\t\t\t\t\t\t\tspaced={false}\n\t\t\t\t\t\t\twidth={\"100%\"}\n\t\t\t\t\t\t\tmaxWidth={\"100%\"}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Epic\n\t\t\t\t\t\t\t\tactiveStory={activeStory}\n\t\t\t\t\t\t\t\ttabbar={\n\t\t\t\t\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"events\"}\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"events\"\n\t\t\t\t\t\t\t\t\t\t\ttext=\"События\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Icon28NewsfeedOutline />\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"messages\"}\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"messages\"\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Сообщения\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Icon28MessageOutline />\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"profile\"}\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"profile\"\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Профиль\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Icon28UserCircleOutline />\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\n\t\t\t\t\t\t\t\t\t</Tabbar>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<View id=\"events\" activePanel=\"events\">\n\t\t\t\t\t\t\t\t\t<Panel id=\"events\">\n\t\t\t\t\t\t\t\t\t\t<Events />\n\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t<View id=\"messages\" activePanel=\"messages\">\n\t\t\t\t\t\t\t\t\t<Panel id=\"messages\">\n\t\t\t\t\t\t\t\t\t \t<Messages/>\n\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t<View id=\"profile\" activePanel=\"profile\">\n\t\t\t\t\t\t\t\t\t<Panel id=\"profile\">\n\t\t\t\t\t\t\t\t\t\t<Profile/>\n\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</Epic>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n"],"sourceRoot":""}