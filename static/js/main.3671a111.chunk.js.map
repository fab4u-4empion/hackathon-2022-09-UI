{"version":3,"sources":["panels/events.js","context/chatListContext.js","panels/messages.js","hooks/useShortText.js","panels/profile.js","context/chatContext.js","components/textSeparator.js","messageComponents/message.js","messageComponents/messageList.js","panels/chat.js","App.js","index.js"],"names":["Events","style","height","icon","width","axios","require","Context","createContext","ChatListContextProvider","children","useState","chats","setChats","currentPage","setCurrentPage","totalCount","setTotalCount","limit","fetching","setFetching","endOfPage","setEndOfPage","useEffect","get","then","response","data","filter","e","findIndex","c","id","prev","headers","finally","window","addEventListener","scrollHandler","removeEventListener","length","target","documentElement","scrollHeight","scrollTop","innerHeight","Provider","value","Messages","onChatOpen","useContext","className","separator","map","before","gradientColor","calcInitialsAvatarColor","title","substring","onClick","subtitle","str","indicator","mode","Profile","disabled","size","src","caption","actions","margin","header","showArrows","getScrollToLeft","i","getScrollToRight","display","description","useChatContextProvider","ChatContextProvider","chat","messages","setMessages","members","setMembers","needScroll","setNeedScroll","newMessageCount","setNewMessageCount","a","setTimeout","getMessages","scrollTo","scrollX","document","body","sendMessage","text","TextSeparator","Message","self","hasAvatar","avatar","MessageList","isPublic","setScrollHeight","windowHeight","setWindowHeight","didResize","setDidResize","bottomRef","useRef","useLayoutEffect","current","scrollIntoView","behavior","console","log","scrollY","resizeHandler","marginTop","m","index","arr","Fragment","email","ref","Chat","onClose","writeBarText","setWriteBarText","bottomPadding","setBottomPadding","fixedLayoutInnerElRef","status","vertical","paddingBottom","wide","onChange","onHeightChange","el","offsetHeight","updateBottomPadding","placeholder","after","App","scheme","React","activeStory","setActiveStory","messagesActivePanel","setMessagesActivePanel","setChat","hasTabbar","setHasTabbar","onStoryChange","currentTarget","dataset","story","justifyContent","animate","spaced","maxWidth","tabbar","selected","activePanel","bridge","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3671a111.chunk.js","sourcesContent":["import { Icon56NewsfeedOutline } from \"@vkontakte/icons\"\r\nimport { Group, PanelHeader, PanelHeaderBack, Placeholder } from \"@vkontakte/vkui\"\r\n\r\nexport const Events = () => {\r\n    return (\r\n        <>\r\n            <PanelHeader>События</PanelHeader>\r\n            <Group style={{ height: \"1000px\" }}>\r\n                <Placeholder\r\n                    icon={<Icon56NewsfeedOutline width={56} height={56} />}\r\n                />\r\n            </Group>\r\n        </>\r\n    )\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nconst axios = require('axios');\r\n\r\nconst Context = createContext()\r\n\r\nexport const useChatListContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nexport const ChatListContextProvider = ({children}) => {\r\n\r\n    const [chats, setChats] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [totalCount, setTotalCount] = useState(0)\r\n    const [limit] = useState(15)\r\n    const [fetching, setFetching] = useState(true)\r\n    const [endOfPage, setEndOfPage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (fetching) {\r\n            axios\r\n                .get(`https://jsonplaceholder.typicode.com/posts?_limit=${limit}&_page=${currentPage}`)\r\n                .then(response => {\r\n                    setChats([...chats, ...response.data.filter(e => chats.findIndex(c => c.id == e.id) < 0)])\r\n                    setCurrentPage(prev => prev + 1)\r\n                    setTotalCount(response.headers[\"x-total-count\"])\r\n                })\r\n                .finally(() => {\r\n                    setEndOfPage(false)\r\n                    setFetching(false)\r\n                })\r\n        }\r\n    }, [fetching])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (endOfPage && chats.length < totalCount) {\r\n            setFetching(true)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    const scrollHandler = (e) => {\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            setEndOfPage(true)\r\n        }\r\n    }\r\n\r\n    const newMessageHandler = (message) => {\r\n        const index = chats.findIndex(e => e.id == message.id)\r\n        if (index > -1) {\r\n            const temp = [...chats]\r\n            temp.splice(index, 1)\r\n            setChats([message, ...temp])\r\n        } else {\r\n            setChats([message, ...chats])\r\n        };\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            chats,\r\n            fetching\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}","import { calcInitialsAvatarColor, Counter, Group, InitialsAvatar, List, PanelHeader, RichCell, SimpleCell, Spinner, Text, Title } from \"@vkontakte/vkui\"\r\nimport { useEffect } from \"react\"\r\nimport { useChatListContextProvider } from \"../context/chatListContext\"\r\nimport { useShortText } from \"../hooks/useShortText\"\r\n\r\nexport const Messages = ({onChatOpen}) => {\r\n\r\n    const { chats, fetching } = useChatListContextProvider()\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader className=\"shadowPanelHeader\" separator={false}>Сообщения</PanelHeader>\r\n            <Group>\r\n                <List>\r\n                    {\r\n                        chats.map(e => {\r\n                            return (\r\n                                <SimpleCell\r\n                                    before={\r\n                                        <InitialsAvatar gradientColor={calcInitialsAvatarColor(e.id)}>\r\n                                            {e.title.substring(0, 2)}\r\n                                        </InitialsAvatar>}\r\n                                    key={e.id}\r\n                                    onClick={() => onChatOpen(e)}\r\n                                    subtitle={\r\n                                        <>{useShortText(\"Алексей: стикер cnbrth cnbrth cnbrth cnbrt\", 25)} &#183; 2h</>\r\n                                    }\r\n                                    indicator={<Counter mode=\"primary\">10</Counter>}\r\n                                >\r\n                                    {e.title.substring(0, 10)}\r\n                                </SimpleCell>\r\n                            )\r\n                        })\r\n                    }\r\n                    {fetching && <Spinner />}\r\n                </List>\r\n            </Group>\r\n        </>\r\n    )\r\n}","export const useShortText = (str, length) => {\r\n    return str.length > length ? str.substring(0, length) + \"...\" : str\r\n}","import {Icon28UserCircleOutline} from \"@vkontakte/icons\"\r\nimport {Group, PanelHeader, Root, View, Panel, CellButton, SimpleCell, RichCell, Button} from \"@vkontakte/vkui\"\r\nimport {useState} from \"react\";\r\nimport {Header, Avatar, Title, HorizontalScroll, Cell, List, HorizontalCell} from \"@vkontakte/vkui\";\r\nimport {UsersStack} from \"@vkontakte/vkui\";\r\n\r\n//Test commit\r\n// const [activeView, setActiveView] = useState(\"view1\")\r\n\r\nexport const Profile = () => {\r\n    let recentFriends;\r\n    return (\r\n        <Group>\r\n            <PanelHeader>Профиль</PanelHeader>\r\n            {/*<Group>*/}\r\n            {/*    <Header mode=\"secondary\">Был в сети 21.12.2012</Header>*/}\r\n            {/*    <div*/}\r\n            {/*        style={{display: \"flex\", padding: 12, gap: 8, flexFlow: \"column\", alignItems: \"center\"}}*/}\r\n            {/*    >*/}\r\n            {/*        <Avatar size={280}*/}\r\n            {/*                src={\"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\"}/>*/}\r\n            {/*        <SimpleCell*/}\r\n            {/*            subtitle=\"Люблю играть в танки\"*/}\r\n            {/*        >*/}\r\n            {/*            Ваня Сакун*/}\r\n            {/*        </SimpleCell>*/}\r\n            {/*    </div>*/}\r\n            {/*</Group>*/}\r\n            <RichCell\r\n                disabled\r\n                before={<Avatar size={100}\r\n                                src={\"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\"}/>}\r\n                caption=\"Lesta Games(Техподдержка)\"\r\n                actions={\r\n                    <Group>\r\n                        <Button style={{margin: \"5px\"}}>Добавить</Button>\r\n                        <Button style={{margin: \"5px\"}}>Написать</Button>\r\n                    </Group>\r\n                }\r\n            >\r\n                Ваня Сакун\r\n            </RichCell>\r\n                <Group header={<Header mode=\"secondary\">Друзья</Header>}>\r\n                    <HorizontalScroll\r\n                        showArrows\r\n                        getScrollToLeft={(i) => i - 120}\r\n                        getScrollToRight={(i) => i + 120}\r\n                    >\r\n                        <div style={{display: \"flex\"}}>\r\n                            <HorizontalCell key={1} header={\"ABOBA\"}>\r\n                                <Avatar size={56}\r\n                                        src={\"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\"}/>\r\n                            </HorizontalCell>\r\n                            <HorizontalCell key={2} header={\"ABOBA\"}>\r\n                                <Avatar size={56}\r\n                                        src={\"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\"}/>\r\n                            </HorizontalCell>\r\n                            <HorizontalCell key={3} header={\"ABOBA\"}>\r\n                                <Avatar size={56}\r\n                                        src={\"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\"}/>\r\n                            </HorizontalCell>\r\n                            <HorizontalCell key={4} header={\"ABOBA\"}>\r\n                                <Avatar size={56}\r\n                                        src={\"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\"}/>\r\n                            </HorizontalCell>\r\n                            <HorizontalCell key={5} header={\"ABOBA\"}>\r\n                                <Avatar size={56}\r\n                                        src={\"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\"}/>\r\n                            </HorizontalCell>\r\n                            <HorizontalCell key={6} header={\"ABOBA\"}>\r\n                                <Avatar size={56}\r\n                                        src={\"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\"}/>\r\n                            </HorizontalCell>\r\n                        </div>\r\n                    </HorizontalScroll>\r\n                </Group>\r\n            <Group header={<Header mode=\"secondary\">Любимые игры</Header>}>\r\n                <List>\r\n                    <Cell before={<Avatar src={\"https://s2-goods.ozstatic.by/2000/42/893/10/10893042_0.jpg\"}/>}\r\n                          description=\"Carcassonne\">\r\n                        Каркассон\r\n                    </Cell>\r\n                    <Cell before={<Avatar\r\n                        src={\"https://avatars.mds.yandex.net/get-mpic/6382710/img_id8546741754982085445.jpeg/orig\"}/>}\r\n                          description=\"Monopoly\">\r\n                        Монополия\r\n                    </Cell>\r\n                    <Cell before={<Avatar\r\n                        src={\"https://igromaster.by/upload/iblock/972/972ee18fcf89183f221bab04bcff0668.jpg\"}/>}\r\n                          description=\"Uno\">\r\n                        У́но\r\n                    </Cell>\r\n                </List>\r\n            </Group>\r\n        </Group>)\r\n}","import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\n\r\nconst Context = createContext()\r\n\r\nexport const useChatContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nexport const ChatContextProvider = ({children, chat}) => {\r\n    const [messages, setMessages] = useState([])\r\n    const [members, setMembers] = useState([]);\r\n    const [fetching, setFetching] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [totalCount, setTotalCount] = useState(0)\r\n    const [limit] = useState(30)\r\n    const [endOfPage, setEndOfPage] = useState(false)\r\n    const [needScroll, setNeedScroll] = useState(true)\r\n    const [newMessageCount, setNewMessageCount] = useState(2)\r\n\r\n    useEffect(async () => {\r\n        // const membersResponse = await axios.get(\"https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Users\")\r\n        // setMembers([...membersResponse.data.value])\r\n        setMembers([1])\r\n        setTimeout(() => {\r\n            getMessages()\r\n        }, 500)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (fetching && members.length > 0) {\r\n            getMessages()\r\n        }\r\n    }, [fetching])\r\n\r\n    const getMessages = () => {\r\n        axios\r\n            .get(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${currentPage}`)\r\n            .then(response => {\r\n                setMessages([...response.data, ...messages])\r\n                setCurrentPage(prev => prev + 1)\r\n                setTotalCount(response.headers[\"x-total-count\"])\r\n            })\r\n            .finally(() => {\r\n                setEndOfPage(false)\r\n                setFetching(false)\r\n                currentPage == 1 && window.scrollTo(window.scrollX, document.body.scrollHeight)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (endOfPage && messages.length < totalCount) {\r\n            setFetching(true)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    const scrollHandler = (e) => {\r\n        setNeedScroll(false)\r\n        if (e.target.documentElement.scrollTop < 100) {\r\n            setEndOfPage(true)\r\n        }\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            setNeedScroll(true)\r\n        }\r\n    }\r\n\r\n    const sendMessage = (text) => {\r\n        setNeedScroll(true)\r\n        setMessages([...messages, {\r\n            \"userId\": 1,\r\n            \"id\": 2,\r\n            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r\n            \"email\": \"test@test.test\",\r\n            \"body\": text\r\n        },])\r\n        setNewMessageCount(prev => prev + 1)\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            messages,\r\n            fetching,\r\n            members, \r\n            chat,\r\n            needScroll,\r\n            limit,\r\n            currentPage,\r\n            sendMessage,\r\n            endOfPage,\r\n            newMessageCount\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}","import { Header } from \"@vkontakte/vkui\";\r\n\r\nexport const TextSeparator = ({text}) => {\r\n    return ( \r\n        <div className=\"textSeparator\">\r\n            <div className=\"line\"></div>\r\n            <div className=\"text\">\r\n                {text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n ","import { Avatar, calcInitialsAvatarColor, InitialsAvatar } from \"@vkontakte/vkui\"\r\n\r\nexport const Message = ({\r\n    self = false, \r\n    text,\r\n    caption = \"\",\r\n    hasAvatar = false,\r\n    avatar,\r\n    title,\r\n    id\r\n\r\n}) => {\r\n    return (\r\n        <div className={`messageBox ${self ? \"self\" : \"\"}`}>\r\n            {hasAvatar && avatar && <Avatar size={25}/>}\r\n            {hasAvatar && !avatar && \r\n                <InitialsAvatar size={25} gradientColor={calcInitialsAvatarColor(id)}>\r\n                    {title.substring(0, 2)}\r\n                </InitialsAvatar>\r\n            }\r\n            <div className={`messageTextBox ${self ? \"self\" : \"\"}`}>\r\n                {!self && <div className=\"messageTitle\">{title}</div>}\r\n                <div>{text}</div>\r\n                {caption && <div className=\"messageCaption\">{caption}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Separator, Spinner } from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\"\r\nimport { TextSeparator } from \"../components/textSeparator\";\r\nimport { useChatContextProvider } from \"../context/chatContext\";\r\nimport { Message } from \"./message\"\r\n\r\nexport const MessageList = ({ isPublic = true}) => {\r\n    const [scrollHeight, setScrollHeight] = useState(0)\r\n    const { messages, fetching, needScroll, newMessageCount, endOfPage } = useChatContextProvider()\r\n    const [windowHeight, setWindowHeight] = useState(window.innerHeight)\r\n    const [didResize, setDidResize] = useState(false)\r\n\r\n    const bottomRef = useRef(null)\r\n\r\n    useLayoutEffect(() => {\r\n        if (endOfPage) {\r\n            window.scrollTo(\r\n                window.scrollX,\r\n                document.body.scrollTop + document.documentElement.scrollHeight - scrollHeight\r\n            )\r\n        }\r\n        if(needScroll) {\r\n            bottomRef.current.scrollIntoView({ behavior: \"smooth\"})\r\n        }\r\n    }, [messages]);\r\n\r\n    useLayoutEffect(() => {\r\n        if (endOfPage) {\r\n            setScrollHeight(document.documentElement.scrollHeight)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    useEffect(() => {\r\n        if (didResize) {\r\n            console.log(window.scrollY);\r\n            console.log(windowHeight - window.innerHeight);\r\n            window.scrollTo(window.scrollX, window.scrollY + windowHeight - window.innerHeight + 1)\r\n            setWindowHeight(window.innerHeight)\r\n            setDidResize(false)\r\n        }\r\n    }, [didResize])\r\n\r\n    const resizeHandler = () => {\r\n        setDidResize(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", resizeHandler)\r\n        return () => window.removeEventListener(\"resize\", resizeHandler)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {fetching && <Spinner style={{marginTop: 10}} />} \r\n           \r\n            <div className=\"messageList\">\r\n                {messages.map(((m, index, arr) => {\r\n                    return ( \r\n                        <React.Fragment key={index}>\r\n                            {arr.length - index == newMessageCount && <TextSeparator text=\"Новые сообщения\" />}\r\n                            <Message\r\n                                text={m.body}\r\n                                caption={m.id}\r\n                                hasAvatar={m.id % 2 == 1 && isPublic}\r\n                                self={m.id % 2 == 0}\r\n                                title={isPublic && m.email}\r\n                                avatar={m.avatar}\r\n                                id={m.id}\r\n                            />\r\n                            {/* {arr[index + 1] ? m.id - arr[index + 1].id == 59 && <TextSeparator text={`${m.id - 59}-${m.id - 60 + 30}`} /> : <></>} */}\r\n                        </React.Fragment>\r\n                    )\r\n                }))}\r\n            </div>\r\n            <div ref={bottomRef}></div>\r\n        </>\r\n    )\r\n}","import { calcInitialsAvatarColor, Card, Cell, FixedLayout, Group, InitialsAvatar, PanelHeader, PanelHeaderBack, PanelHeaderContent, Separator, WriteBar, WriteBarIcon } from \"@vkontakte/vkui\"\r\nimport { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { useChatContextProvider } from \"../context/chatContext\";\r\nimport { MessageList } from \"../messageComponents/messageList\";\r\n\r\nexport const Chat = ({\r\n    onClose\r\n}) => {\r\n    const [writeBarText, setWriteBarText] = useState(\"\")\r\n    const [bottomPadding, setBottomPadding] = useState(0);\r\n\r\n    const fixedLayoutInnerElRef = useRef();\r\n\r\n    const { members, chat, sendMessage } = useChatContextProvider()\r\n\r\n    const updateBottomPadding = () => {\r\n        const el = fixedLayoutInnerElRef.current;\r\n        if (el) {\r\n            const height = el.offsetHeight;\r\n            if (height !== bottomPadding) {\r\n                setBottomPadding(height);\r\n            }\r\n        }\r\n    };\r\n\r\n    const sendMessageHandler = () => {\r\n        sendMessage(writeBarText)\r\n        setWriteBarText(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader\r\n                className=\"shadowPanelHeader\" \r\n                separator={false} \r\n                before={\r\n                    <PanelHeaderBack \r\n                        onClick={() => onClose()}\r\n                    />}\r\n            >\r\n                <PanelHeaderContent\r\n                    before={\r\n                        <InitialsAvatar size={36} gradientColor={calcInitialsAvatarColor(chat.id)}>\r\n                            {chat.title.substring(0, 2)}\r\n                        </InitialsAvatar>\r\n                    }\r\n                    status={`${members.length} участников`}\r\n                >\r\n                    {chat.title.substring(0, 10)}\r\n                </PanelHeaderContent>\r\n            </PanelHeader>\r\n            <MessageList/>\r\n            <FixedLayout\r\n                vertical=\"bottom\"\r\n                style={{paddingBottom: 0}}\r\n            >\r\n                <div ref={fixedLayoutInnerElRef}>\r\n                    <Separator wide />\r\n                    <WriteBar\r\n                        value={writeBarText}\r\n                        onChange={(e) => setWriteBarText(e.target.value)}\r\n                        onHeightChange={() => updateBottomPadding()}\r\n                        placeholder=\"Сообщение\"\r\n                        after={\r\n                            <Fragment>\r\n                                <WriteBarIcon \r\n                                    mode=\"send\" \r\n                                    disabled={writeBarText.length === 0}\r\n                                    onClick={() => sendMessageHandler()}\r\n                                />\r\n                            </Fragment>\r\n                        }\r\n                    />\r\n                </div>\r\n            </FixedLayout>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { View, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol, PanelHeader, Epic, Tabbar, TabbarItem, Panel } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport './styles/index.css'\r\nimport { Icon28MessageOutline, Icon28NewsfeedOutline, Icon28UserCircleOutline } from '@vkontakte/icons';\r\nimport { Events } from './panels/events';\r\nimport { Messages } from './panels/messages';\r\nimport { Profile } from './panels/profile';\r\nimport { Chat } from './panels/chat';\r\nimport { ChatListContextProvider } from './context/chatListContext';\r\nimport { ChatContextProvider } from './context/chatContext';\r\n\r\nconst App = () => {\r\n\tconst [scheme, setScheme] = useState('bright_light')\r\n\tconst [activeStory, setActiveStory] = React.useState(\"events\")\r\n\tconst [messagesActivePanel, setMessagesActivePanel] = useState(\"messages\")\r\n\tconst [chat, setChat] = useState(null)\r\n\tconst [hasTabbar, setHasTabbar] = useState(true)\r\n\tconst onStoryChange = (e) => setActiveStory(e.currentTarget.dataset.story)\r\n\r\n\tconst openChatHandler = (chat) => {\r\n\t\tsetChat(chat)\r\n\t\tsetMessagesActivePanel(\"chat\")\r\n\t\tsetHasTabbar(false)\r\n\t}\r\n\r\n\tconst closeChatHanler = () => {\r\n\t\tsetMessagesActivePanel(\"messages\")\r\n\t\tsetHasTabbar(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ConfigProvider scheme={scheme}>\r\n\t\t\t<AdaptivityProvider>\r\n\t\t\t\t<AppRoot>\r\n\t\t\t\t\t<SplitLayout\r\n\t\t\t\t\t\theader={<PanelHeader separator={false} />}\r\n\t\t\t\t\t\tstyle={{ justifyContent: \"center\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<SplitCol\r\n\t\t\t\t\t\t\tanimate={true}\r\n\t\t\t\t\t\t\tspaced={false}\r\n\t\t\t\t\t\t\twidth={\"100%\"}\r\n\t\t\t\t\t\t\tmaxWidth={\"100%\"}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Epic\r\n\t\t\t\t\t\t\t\tactiveStory={activeStory}\r\n\t\t\t\t\t\t\t\ttabbar={hasTabbar &&\r\n\t\t\t\t\t\t\t\t\t<Tabbar>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"events\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"events\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"События\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28NewsfeedOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"messages\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"messages\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Сообщения\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28MessageOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"profile\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"profile\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Профиль\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28UserCircleOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t</Tabbar>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<View id=\"events\" activePanel=\"events\">\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"events\">\r\n\t\t\t\t\t\t\t\t\t\t<Events />\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View id=\"messages\" activePanel={messagesActivePanel}>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"messages\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatListContextProvider>\r\n\t\t\t\t\t\t\t\t\t\t\t<Messages\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChatOpen={openChatHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ChatListContextProvider>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"chat\" className=\"chatPanel\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatContextProvider chat={chat}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Chat onClose={closeChatHanler} />\r\n\t\t\t\t\t\t\t\t\t\t</ChatContextProvider>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View id=\"profile\" activePanel=\"profile\">\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"profile\">\r\n\t\t\t\t\t\t\t\t\t\t<Profile/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t</Epic>\r\n\t\t\t\t\t\t</SplitCol>\r\n\t\t\t\t\t</SplitLayout>\r\n\t\t\t\t</AppRoot>\r\n\t\t\t</AdaptivityProvider>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n"],"sourceRoot":""}