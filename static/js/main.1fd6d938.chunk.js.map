{"version":3,"sources":["context/chatContext.js","panels/events.js","context/chatListContext.js","panels/messages.js","hooks/useShortText.js","panels/profile.js","components/textSeparator.js","messageComponents/message.js","messageComponents/messageList.js","panels/chat.js","panels/chatMembersList.js","App.js","index.js"],"names":["socket","Events","style","height","icon","width","axios","require","Context","createContext","ChatListContextProvider","children","useState","chats","setChats","currentPage","setCurrentPage","totalCount","setTotalCount","limit","fetching","setFetching","endOfPage","setEndOfPage","useEffect","get","then","response","data","filter","e","findIndex","c","id","prev","headers","finally","window","addEventListener","scrollHandler","removeEventListener","length","target","documentElement","scrollHeight","scrollTop","innerHeight","Provider","value","Messages","onChatOpen","useContext","className","separator","map","before","gradientColor","calcInitialsAvatarColor","title","substring","onClick","subtitle","str","indicator","mode","Profile","to","size","src","level","sizeY","header","photos","after","textLevel","description","useChatContextProvider","ChatContextProvider","chat","messages","setMessages","members","setMembers","needScroll","setNeedScroll","newMessageCount","setNewMessageCount","openSocket","setOpenSocket","a","membersResponse","setTimeout","getMessages","WebSocket","openWebSocketHandler","close","scrollTo","scrollX","document","body","console","log","sendMessage","text","message","send","JSON","stringify","TextSeparator","Message","self","caption","hasAvatar","avatar","MessageList","isPublic","setScrollHeight","windowHeight","setWindowHeight","didResize","setDidResize","bottomRef","useRef","useLayoutEffect","current","scrollIntoView","behavior","scrollY","Math","abs","resizeHandler","marginTop","m","index","arr","Fragment","email","ref","Chat","onClose","onOpenChatMembersList","writeBarText","setWriteBarText","bottomPadding","setBottomPadding","fixedLayoutInnerElRef","status","vertical","paddingBottom","wide","onChange","onHeightChange","el","offsetHeight","updateBottomPadding","placeholder","disabled","ChatMembersList","Number","phoneNumber","username","bio","ID","App","scheme","React","activeStory","setActiveStory","messagesActivePanel","setMessagesActivePanel","setChat","hasTabbar","setHasTabbar","onStoryChange","currentTarget","dataset","story","webviewType","justifyContent","animate","spaced","maxWidth","tabbar","selected","activePanel","bridge","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1fd6d938.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\n\r\nconst Context = createContext()\r\n\r\nexport const useChatContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nlet socket\r\n\r\nexport const ChatContextProvider = ({children, chat}) => {\r\n    const [messages, setMessages] = useState([])\r\n    const [members, setMembers] = useState([]);\r\n    const [fetching, setFetching] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [totalCount, setTotalCount] = useState(0)\r\n    const [limit] = useState(30)\r\n    const [endOfPage, setEndOfPage] = useState(false)\r\n    const [needScroll, setNeedScroll] = useState(true)\r\n    const [newMessageCount, setNewMessageCount] = useState(2)\r\n    const [openSocket, setOpenSocket] = useState(false)\r\n\r\n    useEffect(async () => {\r\n        const membersResponse = await axios.get(\"https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Users\")\r\n        setMembers([...membersResponse.data.value]) \r\n        setTimeout(() => {\r\n            getMessages()\r\n        }, 500)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket = new WebSocket(\"ws://192.168.160.194:8087/hello\")\r\n        socket.addEventListener(\"opne\", openWebSocketHandler)\r\n        return () => {\r\n            socket.removeEventListener(\"opne\", openWebSocketHandler)\r\n            socket.close()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fetching && members.length > 0) {\r\n            getMessages()\r\n        }\r\n    }, [fetching])\r\n\r\n    useEffect(() => {\r\n        chat.members = members\r\n    }, [members])\r\n\r\n    const getMessages = () => {\r\n        axios\r\n            .get(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${currentPage}`)\r\n            .then(response => {\r\n                setMessages([...response.data, ...messages])\r\n                setCurrentPage(prev => prev + 1)\r\n                setTotalCount(response.headers[\"x-total-count\"])\r\n            })\r\n            .finally(() => {\r\n                setEndOfPage(false)\r\n                setFetching(false)\r\n                currentPage == 1 && window.scrollTo(window.scrollX, document.body.scrollHeight) \r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (endOfPage && messages.length < totalCount) {\r\n            setFetching(true)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    const scrollHandler = (e) => {\r\n        setNeedScroll(false)\r\n        if (e.target.documentElement.scrollTop < 100) {\r\n            setEndOfPage(true)\r\n        }\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            setNeedScroll(true)\r\n        }\r\n    }\r\n\r\n    const sendMessage = (text) => {\r\n        setNeedScroll(true)\r\n        const message = {\r\n            \"senderId\": 1,\r\n            \"chatId\": 2,\r\n            \"email\": \"test@test.test\",\r\n            \"body\": text\r\n        }\r\n        socket.send(JSON.stringify(message))\r\n        setMessages([...messages, message])\r\n        setNewMessageCount(prev => prev + 1)\r\n    }\r\n\r\n    const openWebSocketHandler = (e) => {\r\n        setOpenSocket(true)\r\n        console.log(e);\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            messages,\r\n            fetching,\r\n            members, \r\n            chat,\r\n            needScroll,\r\n            limit,\r\n            currentPage,\r\n            sendMessage,\r\n            endOfPage,\r\n            newMessageCount,\r\n            openSocket\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}","import { Icon56NewsfeedOutline } from \"@vkontakte/icons\"\r\nimport { Group, PanelHeader, PanelHeaderBack, Placeholder } from \"@vkontakte/vkui\"\r\n\r\nexport const Events = () => {\r\n    return (\r\n        <>\r\n            <PanelHeader>События</PanelHeader>\r\n            <Group style={{ height: \"1000px\" }}>\r\n                <Placeholder\r\n                    icon={<Icon56NewsfeedOutline width={56} height={56} />}\r\n                />\r\n            </Group>\r\n        </>\r\n    )\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nconst axios = require('axios');\r\n\r\nconst Context = createContext()\r\n\r\nexport const useChatListContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nexport const ChatListContextProvider = ({children}) => {\r\n\r\n    const [chats, setChats] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [totalCount, setTotalCount] = useState(0)\r\n    const [limit] = useState(15)\r\n    const [fetching, setFetching] = useState(true)\r\n    const [endOfPage, setEndOfPage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (fetching) {\r\n            axios\r\n                .get(`https://jsonplaceholder.typicode.com/posts?_limit=${limit}&_page=${currentPage}`)\r\n                .then(response => {\r\n                    setChats([...chats, ...response.data.filter(e => chats.findIndex(c => c.id == e.id) < 0)])\r\n                    setCurrentPage(prev => prev + 1)\r\n                    setTotalCount(response.headers[\"x-total-count\"])\r\n                })\r\n                .finally(() => {\r\n                    setEndOfPage(false)\r\n                    setFetching(false)\r\n                })\r\n        }\r\n    }, [fetching])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (endOfPage && chats.length < totalCount) {\r\n            setFetching(true)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    const scrollHandler = (e) => {\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            setEndOfPage(true)\r\n        }\r\n    }\r\n\r\n    const newMessageHandler = (message) => {\r\n        const index = chats.findIndex(e => e.id == message.id)\r\n        if (index > -1) {\r\n            const temp = [...chats]\r\n            temp.splice(index, 1)\r\n            setChats([message, ...temp])\r\n        } else {\r\n            setChats([message, ...chats])\r\n        };\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            chats,\r\n            fetching\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}","import { calcInitialsAvatarColor, Counter, Group, InitialsAvatar, List, PanelHeader, RichCell, SimpleCell, Spinner, Text, Title } from \"@vkontakte/vkui\"\r\nimport { useEffect } from \"react\"\r\nimport { useChatListContextProvider } from \"../context/chatListContext\"\r\nimport { useShortText } from \"../hooks/useShortText\"\r\n\r\nexport const Messages = ({onChatOpen}) => {\r\n\r\n    const { chats, fetching } = useChatListContextProvider()\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader className=\"shadowPanelHeader\" separator={false}>Сообщения</PanelHeader>\r\n            <Group>\r\n                <List>\r\n                    {\r\n                        chats.map(e => {\r\n                            return (\r\n                                <SimpleCell\r\n                                    before={\r\n                                        <InitialsAvatar gradientColor={calcInitialsAvatarColor(e.id)}>\r\n                                            {e.title.substring(0, 2)}\r\n                                        </InitialsAvatar>}\r\n                                    key={e.id}\r\n                                    onClick={() => onChatOpen(e)}\r\n                                    subtitle={\r\n                                        <>{useShortText(\"Алексей: стикер cnbrth cnbrth cnbrth cnbrt\", 25)} &#183; 2h</>\r\n                                    }\r\n                                    indicator={<Counter mode=\"primary\">10</Counter>}\r\n                                >\r\n                                    {e.title.substring(0, 10)}\r\n                                </SimpleCell>\r\n                            )\r\n                        })\r\n                    }\r\n                    {fetching && <Spinner />}\r\n                </List>\r\n            </Group>\r\n        </>\r\n    )\r\n}","export const useShortText = (str, length) => {\r\n    return str.length > length ? str.substring(0, length) + \"...\" : str\r\n}","import {\r\n    Icon24CactusOutline,\r\n    Icon24CalendarOutline,\r\n    Icon24MailOutline,\r\n    Icon24MessageOutline,\r\n    Icon24UserAddOutline} from \"@vkontakte/icons\"\r\nimport {Group, PanelHeader, Button, Gradient, Text, SimpleCell, UsersStack, MiniInfoCell} from \"@vkontakte/vkui\"\r\nimport {Header, Avatar, Title, Cell, List} from \"@vkontakte/vkui\";\r\nimport {ButtonGroup} from \"@vkontakte/vkui\";\r\nimport { Icon24ChevronCompactRight } from '@vkontakte/icons';\r\nimport { Icon24PhoneOutline } from '@vkontakte/icons';\r\n\r\n//Test commit\r\n// const [activeView, setActiveView] = useState(\"view1\")\r\n\r\nexport const Profile = () => {\r\n    let recentFriends;\r\n    let email;\r\n    return (\r\n        <>\r\n            <PanelHeader className=\"shadowPanelHeader\" separator={false}>Профиль</PanelHeader>\r\n            <Group>\r\n                <Gradient \r\n                    mode=\"tint\" \r\n                    to=\"top\"\r\n                    className=\"profileBIO\"\r\n                >\r\n                    <Avatar\r\n                        size={96}\r\n                        src={\"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\"}\r\n                    />\r\n                    <Title level=\"2\" width=\"2\" className=\"profileTitle\">\r\n                        Ваня Сакун\r\n                    </Title>\r\n                    <Text className=\"profileSubTitle\">\r\n                        Техподдержка Wargaming\r\n                    </Text>\r\n                    <ButtonGroup>\r\n                        <Button size=\"m\" sizeY=\"compact\"><Icon24UserAddOutline /></Button>\r\n                        <Button \r\n                            size=\"m\" \r\n                            sizeY=\"compact\"\r\n                            before={<Icon24MessageOutline />}\r\n                        > \r\n                            Написать\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Gradient>\r\n                <Group header={<Header mode=\"secondary\">Друзья</Header>}>\r\n                    <SimpleCell className=\"profileFriends\" \r\n                        before={\r\n                            <UsersStack\r\n                                size=\"m\"\r\n                                photos={[\r\n                                    \"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\",\r\n                                    \"https://www.ixbt.com/img/n1/news/2018/7/4/341109.png\",\r\n                                    \"https://cdni.rt.com/russian/images/2022.09/article/63231abe02e8bd743524f678.png\"\r\n                                ]}\r\n                            >\r\n                            </UsersStack>\r\n                        }\r\n                        after={\r\n                            <Icon24ChevronCompactRight width={30} height={30}/>\r\n                        }\r\n                    >\r\n                        1377 друзей\r\n                    </SimpleCell>\r\n                </Group>\r\n            </Group>\r\n            <Group header={<Header mode=\"secondary\">Информация</Header>}>\r\n                <MiniInfoCell before={<Icon24PhoneOutline/>} textLevel=\"primary\">\r\n                    +375296191617\r\n                </MiniInfoCell>\r\n                <MiniInfoCell before={<Icon24MailOutline />} textLevel=\"primary\">\r\n                    aleksandr.panev.2002@gmail.com\r\n                </MiniInfoCell>\r\n                <MiniInfoCell before={<Icon24CalendarOutline />} textLevel=\"primary\">\r\n                    2002-10-29\r\n                </MiniInfoCell>\r\n            </Group>\r\n            <Group header={<Header mode=\"secondary\">Любимые игры</Header>}>\r\n                <List>\r\n                    <Cell \r\n                        before={<Avatar src={\"https://s2-goods.ozstatic.by/2000/42/893/10/10893042_0.jpg\"}/>}\r\n                        description=\"Carcassonne\"\r\n                    >\r\n                        Каркассон\r\n                    </Cell>\r\n                    <Cell \r\n                        before={<Avatar\r\n                        src={\"https://avatars.mds.yandex.net/get-mpic/6382710/img_id8546741754982085445.jpeg/orig\"}/>}\r\n                        description=\"Monopoly\"\r\n                    >\r\n                        Монополия\r\n                    </Cell>\r\n                    <Cell \r\n                        before={<Avatar\r\n                        src={\"https://igromaster.by/upload/iblock/972/972ee18fcf89183f221bab04bcff0668.jpg\"}/>}\r\n                        description=\"Uno\"\r\n                    >\r\n                        У́но\r\n                    </Cell>\r\n                </List>\r\n            </Group>\r\n        </>\r\n    )\r\n}","import { Header } from \"@vkontakte/vkui\";\r\n\r\nexport const TextSeparator = ({text}) => {\r\n    return ( \r\n        <div className=\"textSeparator\">\r\n            <div className=\"line\"></div>\r\n            <div className=\"text\">\r\n                {text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n ","import { Avatar, calcInitialsAvatarColor, InitialsAvatar } from \"@vkontakte/vkui\"\r\n\r\nexport const Message = ({\r\n    self = false, \r\n    text,\r\n    caption = \"\",\r\n    hasAvatar = false,\r\n    avatar,\r\n    title,\r\n    id\r\n\r\n}) => {\r\n    return (\r\n        <div className={`messageBox ${self ? \"self\" : \"\"}`}>\r\n            {hasAvatar && avatar && <Avatar size={25}/>}\r\n            {hasAvatar && !avatar && \r\n                <InitialsAvatar size={25} gradientColor={calcInitialsAvatarColor(id)}>\r\n                    {title.substring(0, 2)}\r\n                </InitialsAvatar>\r\n            }\r\n            <div className={`messageTextBox ${self ? \"self\" : \"\"}`}>\r\n                {!self && <div className=\"messageTitle\">{title}</div>}\r\n                <div>{text}</div>\r\n                {caption && <div className=\"messageCaption\">{caption}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Separator, Spinner } from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\"\r\nimport { TextSeparator } from \"../components/textSeparator\";\r\nimport { useChatContextProvider } from \"../context/chatContext\";\r\nimport { Message } from \"./message\"\r\n\r\nexport const MessageList = ({ isPublic = true}) => {\r\n    const [scrollHeight, setScrollHeight] = useState(0)\r\n    const { messages, fetching, needScroll, newMessageCount, endOfPage } = useChatContextProvider()\r\n    const [windowHeight, setWindowHeight] = useState(window.innerHeight)\r\n    const [didResize, setDidResize] = useState(false)\r\n\r\n    const bottomRef = useRef(null)\r\n\r\n    useLayoutEffect(() => {\r\n        if (endOfPage) {\r\n            window.scrollTo(\r\n                window.scrollX,\r\n                document.body.scrollTop + document.documentElement.scrollHeight - scrollHeight\r\n            )\r\n        }\r\n        if(needScroll) {\r\n            bottomRef.current.scrollIntoView({ behavior: \"smooth\"})\r\n        }\r\n    }, [messages]);\r\n\r\n    useLayoutEffect(() => {\r\n        if (endOfPage) {\r\n            setScrollHeight(document.documentElement.scrollHeight)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    useEffect(() => {\r\n        if (didResize) {\r\n            if (windowHeight - window.innerHeight > 0) {\r\n                window.scrollTo(window.scrollX, window.scrollY + windowHeight - window.innerHeight)\r\n            } \r\n            if (windowHeight - window.innerHeight < 0) {\r\n                if (document.documentElement.scrollHeight - (document.documentElement.scrollTop + window.innerHeight) > Math.abs(windowHeight - window.innerHeight)) {\r\n                    window.scrollTo(window.scrollX, window.scrollY + windowHeight - window.innerHeight)\r\n                }\r\n            }\r\n            \r\n            setWindowHeight(window.innerHeight)\r\n            setDidResize(false)\r\n        }\r\n    }, [didResize])\r\n\r\n    const resizeHandler = () => {\r\n        setDidResize(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", resizeHandler)\r\n        return () => window.removeEventListener(\"resize\", resizeHandler)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {fetching && <Spinner style={{marginTop: 10}} />} \r\n           \r\n            <div className=\"messageList\">\r\n                {messages.map(((m, index, arr) => {\r\n                    return ( \r\n                        <React.Fragment key={index}>\r\n                            {arr.length - index == newMessageCount && <TextSeparator text=\"Новые сообщения\" />}\r\n                            <Message\r\n                                text={m.body}\r\n                                caption={m.id}\r\n                                hasAvatar={m.id % 2 == 1 && isPublic}\r\n                                self={m.id % 2 == 0}\r\n                                title={isPublic && m.email}\r\n                                avatar={m.avatar}\r\n                                id={m.id}\r\n                            />\r\n                            {/* {arr[index + 1] ? m.id - arr[index + 1].id == 59 && <TextSeparator text={`${m.id - 59}-${m.id - 60 + 30}`} /> : <></>} */}\r\n                        </React.Fragment>\r\n                    )\r\n                }))}\r\n            </div>\r\n            <div ref={bottomRef}></div>\r\n        </>\r\n    )\r\n}","import { calcInitialsAvatarColor, Card, Cell, FixedLayout, Group, InitialsAvatar, PanelHeader, PanelHeaderBack, PanelHeaderButton, PanelHeaderContent, Separator, WriteBar, WriteBarIcon } from \"@vkontakte/vkui\"\r\nimport { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { useChatContextProvider } from \"../context/chatContext\";\r\nimport { MessageList } from \"../messageComponents/messageList\";\r\nimport { Icon28Users3Outline } from '@vkontakte/icons';\r\n\r\nexport const Chat = ({\r\n    onClose,\r\n    onOpenChatMembersList\r\n}) => {\r\n    const [writeBarText, setWriteBarText] = useState(\"\")\r\n    const [bottomPadding, setBottomPadding] = useState(0);\r\n\r\n    const fixedLayoutInnerElRef = useRef();\r\n\r\n    const { chat, sendMessage, openSocket, members } = useChatContextProvider()\r\n\r\n    const updateBottomPadding = () => {\r\n        const el = fixedLayoutInnerElRef.current;\r\n        if (el) {\r\n            const height = el.offsetHeight;\r\n            if (height !== bottomPadding) {\r\n                setBottomPadding(height);\r\n            }\r\n        }\r\n    };\r\n\r\n    const sendMessageHandler = () => {\r\n        sendMessage(writeBarText)\r\n        setWriteBarText(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader\r\n                className=\"shadowPanelHeader\" \r\n                separator={false} \r\n                before={\r\n                    <PanelHeaderBack \r\n                        onClick={onClose}\r\n                    />}\r\n                after={members.length > 0 &&\r\n                    <PanelHeaderButton onClick={onOpenChatMembersList}>\r\n                        <Icon28Users3Outline/>\r\n                    </PanelHeaderButton>\r\n                }\r\n            >\r\n                <PanelHeaderContent\r\n                    before={\r\n                        <InitialsAvatar size={36} gradientColor={calcInitialsAvatarColor(chat.id)}>\r\n                            {chat.title.substring(0, 2)}\r\n                        </InitialsAvatar>\r\n                    }\r\n                    status={`${members.length} участников`}\r\n                >\r\n                    {chat.title.substring(0, 10)}\r\n                </PanelHeaderContent>\r\n            </PanelHeader>\r\n            <MessageList/>\r\n            <FixedLayout\r\n                vertical=\"bottom\"\r\n                style={{paddingBottom: 0}}\r\n            >\r\n                <div ref={fixedLayoutInnerElRef}>\r\n                    <Separator wide />\r\n                    <WriteBar\r\n                        value={writeBarText}\r\n                        onChange={(e) => setWriteBarText(e.target.value)}\r\n                        onHeightChange={() => updateBottomPadding()}\r\n                        placeholder=\"Сообщение\"\r\n                        after={\r\n                            <Fragment>\r\n                                <WriteBarIcon \r\n                                    mode=\"send\" \r\n                                    disabled={writeBarText.length === 0 || !openSocket}\r\n                                    onClick={() => sendMessageHandler()}\r\n                                />\r\n                            </Fragment>\r\n                        }\r\n                    />\r\n                </div>\r\n            </FixedLayout>\r\n        </>\r\n    )\r\n}","import { Avatar, calcInitialsAvatarColor, Cell, Group, Header, InitialsAvatar, List, PanelHeader, PanelHeaderBack, Separator, SimpleCell, Title } from \"@vkontakte/vkui\";\r\n\r\nexport const ChatMembersList = ({onClose, chat}) => {\r\n    console.log(chat.members);\r\n    return ( \r\n        <>\r\n            <PanelHeader \r\n                className=\"shadowPanelHeader\" \r\n                separator={false}\r\n                before={\r\n                    <PanelHeaderBack\r\n                        onClick={onClose}\r\n                    />\r\n                }\r\n            >\r\n                Участники\r\n            </PanelHeader>\r\n            <Group className=\"d-f-center\">\r\n                <InitialsAvatar size={100} gradientColor={calcInitialsAvatarColor(chat.id)}>\r\n                    {chat.title.substring(0, 2)}\r\n                </InitialsAvatar>\r\n                <Title>{chat.title.substring(0, 10)}</Title>\r\n            </Group>\r\n            <Group>\r\n                <List>\r\n                    {chat.members.map(e =>\r\n                        <SimpleCell\r\n                            before={\r\n                                <InitialsAvatar size={48} gradientColor={calcInitialsAvatarColor(Number(e.phoneNumber % 10))}>\r\n                                    {e.username.substring(0, 2)}\r\n                                </InitialsAvatar>\r\n                            }\r\n                            key={e.ID}\r\n                            subtitle={e.bio}\r\n                        >\r\n                            {e.username}\r\n                        </SimpleCell>\r\n                    )}\r\n                </List>\r\n            </Group>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { View, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol, PanelHeader, Epic, Tabbar, TabbarItem, Panel } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport './styles/index.css'\r\nimport { Icon28MessageOutline, Icon28NewsfeedOutline, Icon28UserCircleOutline } from '@vkontakte/icons';\r\nimport { Events } from './panels/events';\r\nimport { Messages } from './panels/messages';\r\nimport { Profile } from './panels/profile';\r\nimport { Chat } from './panels/chat';\r\nimport { ChatListContextProvider } from './context/chatListContext';\r\nimport { ChatContextProvider } from './context/chatContext';\r\nimport { ChatMembersList } from './panels/chatMembersList';\r\n\r\nconst App = () => {\r\n\tconst [scheme, setScheme] = useState('bright_light')\r\n\tconst [activeStory, setActiveStory] = React.useState(\"events\")\r\n\tconst [messagesActivePanel, setMessagesActivePanel] = useState(\"messages\")\r\n\tconst [chat, setChat] = useState(null)\r\n\tconst [hasTabbar, setHasTabbar] = useState(true)\r\n\tconst onStoryChange = (e) => setActiveStory(e.currentTarget.dataset.story)\r\n\r\n\tconst openChatHandler = (chat) => {\r\n\t\tsetChat(chat)\r\n\t\tsetMessagesActivePanel(\"chat\")\r\n\t\tsetHasTabbar(false)\r\n\t}\r\n\r\n\tconst openChatMembersHandler = (chat) => {\r\n\t\tsetMessagesActivePanel(\"chatMembers\")\r\n\t}\r\n\r\n\tconst closeChatHanler = () => {\r\n\t\tsetMessagesActivePanel(\"messages\")\r\n\t\tsetHasTabbar(true)\r\n\t}\r\n\r\n\tconst closeChatMembersHandler = () => {\r\n\t\tsetMessagesActivePanel(\"chat\")\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ConfigProvider scheme={scheme} webviewType=\"internal\">\r\n\t\t\t<AdaptivityProvider>\r\n\t\t\t\t<AppRoot>\r\n\t\t\t\t\t<SplitLayout\r\n\t\t\t\t\t\theader={<PanelHeader separator={false} />}\r\n\t\t\t\t\t\tstyle={{ justifyContent: \"center\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<SplitCol\r\n\t\t\t\t\t\t\tanimate={true}\r\n\t\t\t\t\t\t\tspaced={false}\r\n\t\t\t\t\t\t\twidth={\"100%\"}\r\n\t\t\t\t\t\t\tmaxWidth={\"100%\"}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Epic\r\n\t\t\t\t\t\t\t\tactiveStory={activeStory}\r\n\t\t\t\t\t\t\t\ttabbar={hasTabbar &&\r\n\t\t\t\t\t\t\t\t\t<Tabbar>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"events\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"events\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"События\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28NewsfeedOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"messages\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"messages\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Сообщения\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28MessageOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"profile\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"profile\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Профиль\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28UserCircleOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t</Tabbar>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<View id=\"events\" activePanel=\"events\">\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"events\">\r\n\t\t\t\t\t\t\t\t\t\t<Events />\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View id=\"messages\" activePanel={messagesActivePanel}>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"messages\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatListContextProvider>\r\n\t\t\t\t\t\t\t\t\t\t\t<Messages\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChatOpen={openChatHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ChatListContextProvider>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"chat\" className=\"chatPanel\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatContextProvider chat={chat}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Chat \r\n\t\t\t\t\t\t\t\t\t\t\t\tonClose={closeChatHanler} \r\n\t\t\t\t\t\t\t\t\t\t\t\tonOpenChatMembersList={openChatMembersHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ChatContextProvider>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"chatMembers\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatMembersList chat={chat} onClose={closeChatMembersHandler}/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View id=\"profile\" activePanel=\"profile\">\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"profile\">\r\n\t\t\t\t\t\t\t\t\t\t<Profile/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t</Epic>\r\n\t\t\t\t\t\t</SplitCol>\r\n\t\t\t\t\t</SplitLayout>\r\n\t\t\t\t</AppRoot>\r\n\t\t\t</AdaptivityProvider>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// if (process.env.NODE_ENV === \"development\") {\r\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n// }\r\n"],"sourceRoot":""}