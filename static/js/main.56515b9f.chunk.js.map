{"version":3,"sources":["context/chatListContext.js","context/chatContext.js","panels/events.js","hooks/useLocalStorage.js","hooks/useShortText.js","hooks/useTimeDifference.js","panels/messages.js","panels/profile.js","hooks/useTextDate.js","components/textSeparator.js","hooks/useDateComparison.js","hooks/useDateSeparatorText.js","messageComponents/message.js","messageComponents/messageList.js","panels/chat.js","panels/chatMembersList.js","components/mapEventMarker.js","panels/map.js","panels/eventInfo.js","panels/addEvent.js","App.js","panels/signIn.js","panels/signUp.js","index.js"],"names":["socket","axios","require","Events","onOpenModal","onOpenEvent","onAddEvent","useState","events","setEvents","currentPage","setCurrentPage","totalCount","setTotalCount","limit","fetching","setFetching","endOfPage","setEndOfPage","useEffect","get","then","response","data","value","prev","finally","window","addEventListener","scrollHandler","removeEventListener","length","e","target","documentElement","scrollHeight","scrollTop","innerHeight","className","separator","after","onClick","map","size","mode","level","style","marginBottom","name","descr","header","organizer","username","Date","timeStamp","toLocaleString","day","month","year","hour","minute","ID","useLocalStorage","initialValue","key","storage","localStorage","getItem","JSON","parse","setValue","setItem","stringify","Context","createContext","ChatListContextProvider","children","chats","setChats","user","openSocket","setOpenSocket","onMessage","setOnMessage","chat","setChat","console","log","filter","findIndex","c","uuid","headers","WebSocket","openWebSocketHandler","onmessage","message","close","send","isInit","userId","index","temp","splice","Provider","useShortText","str","substring","useTimeDifference","d","date","diff","now","Math","round","Messages","onChatOpen","useContext","before","gradientColor","calcInitialsAvatarColor","id","chatName","subtitle","lastMessage","sender","nickname","text","timestamp","indicator","unreadMessages","Profile","hasBack","onClose","userInfo","setUserInfo","currentUser","removeItem","location","reload","to","Number","phoneNumber","width","bio","sizeY","photos","height","textLevel","email","dateOfBirth","src","description","useChatContextProvider","ChatContextProvider","messages","setMessages","members","setMembers","needScroll","setNeedScroll","newMessageCount","setNewMessageCount","newMessage","setNewMessage","a","membersIDs","post","ids","setTimeout","getMessages","reverse","scrollTo","scrollX","document","body","chatId","senderId","sendMessage","TextSeparator","useDateComparison","d1","d2","getLocalISODate","pad","number","getFullYear","getMonth","getDate","date1","date2","useDateSeparatorText","currentDate","Message","self","caption","hasAvatar","avatar","title","MessageList","isPublic","setScrollHeight","windowHeight","setWindowHeight","didResize","setDidResize","bottomRef","useRef","useLayoutEffect","current","scrollIntoView","behavior","scrollY","abs","resizeHandler","marginTop","m","arr","Fragment","ref","Chat","onOpenChatMembersList","writeBarText","setWriteBarText","bottomPadding","setBottomPadding","fixedLayoutInnerElRef","status","vertical","paddingBottom","wide","onChange","onHeightChange","el","offsetHeight","updateBottomPadding","placeholder","disabled","ChatMembersList","onOpenProfile","MapEventMarker","event","timer","setTimer","stopPropagation","closest","classList","add","remove","onTouchEnd","clearTimeout","onTouchStart","preventDefault","querySelector","longTouch","MapPanel","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","coords_lat","coords_lng","EventInfo","eventInfo","setEventInfo","joinEvent","leaveEvent","delete","padding","address","user_ID","AddEvent","setName","setDescription","setAddress","position","setPosition","setDate","snackbar","setSnackbar","top","enableTime","disablePast","margin","center","color","transform","stretched","organizer_ID","toISOString","catch","background","fill","games","label","org","App","scheme","activeStory","setActiveStory","messagesActivePanel","setMessagesActivePanel","eventsActivePanel","setEventsActivePanel","mapActivePanel","setMapActivePanel","setEvent","hasTabbar","setHasTabbar","setUser","activeModal","setActiveModal","modalHistory","setModalHistory","selectedGames","setSelectedGames","selectedOrg","setSelectedOrg","gamers","setGamers","isMobile","useAdaptivity","viewWidth","ViewWidth","MOBILE","onStoryChange","currentTarget","dataset","story","openEventInfoHandler","eventID","closeEventInfo","modalBack","setActiveModalHandler","modalHistoryTmp","indexOf","push","gamesChipsProps","options","creatable","closeAfterSelect","orgChipsProps","modal","settlingHeight","ChipsSelect","showSelected","renderChip","rest","renderOption","option","otherProps","bottom","min","max","defaultValue","step","dayPlaceholder","monthPlaceholder","yearPlaceholder","appearance","webviewType","hasMouse","animate","spaced","maxWidth","tabbar","selected","activePanel","user_id","SignIn","props","state","password","popout","bind","onRemove","onSignIn","this","setState","showPatronym","setLoged","layout","action","onActionClick","onSignUp","WebviewType","INTERNAL","justifyContent","type","React","Component","SignUp","password1","password2","sex","setWillSignUp","onDateChange","bridge","Index","loged","willSignUp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.56515b9f.chunk.js","sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\nconst axios = require('axios');\r\n\r\nconst Context = createContext()\r\n\r\nexport const useChatListContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nlet socket\r\n\r\nexport const ChatListContextProvider = ({children}) => {\r\n\r\n    const [chats, setChats] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [totalCount, setTotalCount] = useState(0)\r\n    const [limit] = useState(3)\r\n    const [fetching, setFetching] = useState(true)\r\n    const [endOfPage, setEndOfPage] = useState(false)\r\n    const [user] = useLocalStorage(null, \"user\")\r\n    const [openSocket, setOpenSocket] = useState(false)\r\n    const [onMessage, setOnMessage] = useState(false)\r\n    const [chat, setChat] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (fetching && openSocket) {\r\n            console.log(fetching, openSocket);\r\n            axios\r\n                .get(`http://192.168.195.98:8087/api/v1/chats/sender/${user}?size=${limit}&page=${currentPage}`)\r\n                .then(response => {\r\n                    setChats([...chats, ...response.data.filter(e => chats.findIndex(c => c.uuid == e.uuid) < 0)])\r\n                    setCurrentPage(prev => prev + 1)\r\n                    setTotalCount(response.headers[\"x-total-count\"])\r\n                })\r\n                .finally(() => {\r\n                    setEndOfPage(false)\r\n                    setFetching(false)\r\n                })\r\n        }\r\n    }, [fetching, openSocket])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket = new WebSocket(\"ws://192.168.195.98:8087/chats\")\r\n        socket.addEventListener(\"open\", openWebSocketHandler)\r\n        socket.onmessage = (message) => {\r\n            setChat(JSON.parse(message.data))\r\n            setOnMessage(true)\r\n        }\r\n        return () => {\r\n            socket.removeEventListener(\"open\", openWebSocketHandler)\r\n            socket.close()\r\n        }\r\n    }, [])\r\n\r\n    const openWebSocketHandler = (e) => {\r\n        setOpenSocket(true)\r\n        socket.send(JSON.stringify({\r\n            isInit: true,\r\n            userId: user\r\n        }))\r\n        console.log(e);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (endOfPage && chats.length < totalCount) {\r\n            setFetching(true)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    const scrollHandler = (e) => {\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            setEndOfPage(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (onMessage) {\r\n            const index = chats.findIndex(e => e.uuid == chat.uuid)\r\n            if (index > -1) {\r\n                const temp = [...chats]\r\n                temp.splice(index, 1)\r\n                setChats([chat, ...temp])\r\n            } else {\r\n                setChats([chat, ...chats])\r\n            };\r\n        }\r\n    }, [onMessage])\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            chats,\r\n            fetching,\r\n            openSocket\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}","import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\n\r\nconst Context = createContext()\r\n\r\nexport const useChatContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nlet socket\r\n\r\nexport const ChatContextProvider = ({children, chat}) => {\r\n    const [messages, setMessages] = useState([])\r\n    const [members, setMembers] = useState([]);\r\n    const [fetching, setFetching] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [totalCount, setTotalCount] = useState(0)\r\n    const [limit] = useState(15)\r\n    const [endOfPage, setEndOfPage] = useState(false)\r\n    const [needScroll, setNeedScroll] = useState(true)\r\n    const [newMessageCount, setNewMessageCount] = useState(0)\r\n    const [openSocket, setOpenSocket] = useState(false)\r\n    const [user] = useLocalStorage(null, \"user\")\r\n    const [onMessage, setOnMessage] = useState(false)\r\n    const [newMessage, setNewMessage] = useState(null)\r\n\r\n\r\n    useEffect(async () => {\r\n        const membersIDs = await axios.get(`http://192.168.195.98:8087/api/v1/chats/${chat.uuid}/members`)\r\n        const members = await axios.post(\"https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/getUsersByIds\", {\r\n            ids: membersIDs.data.map(e => e.uuid)\r\n        })\r\n        setMembers(members.data.value) \r\n        setTimeout(() => {\r\n            getMessages()\r\n        }, 500)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket = new WebSocket(\"ws://192.168.195.98:8087/chat\")\r\n        socket.addEventListener(\"open\", openWebSocketHandler)\r\n        socket.onmessage = (message) => {\r\n            setNewMessage(JSON.parse(message.data))\r\n            setOnMessage(true)\r\n        }\r\n        return () => {\r\n            socket.removeEventListener(\"open\", openWebSocketHandler)\r\n            socket.close()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(onMessage) {\r\n            if(newMessage.sender.uuid != user)\r\n                setNewMessageCount(prev => prev + 1)\r\n            else \r\n                setNewMessageCount(0)\r\n            setMessages([...messages, newMessage])\r\n            setOnMessage(false)\r\n        }\r\n    }, [onMessage])\r\n\r\n    useEffect(() => {\r\n        if (fetching && members.length > 0) {\r\n            getMessages()\r\n        }\r\n    }, [fetching])\r\n\r\n    useEffect(() => {\r\n        chat.members = members\r\n    }, [members])\r\n\r\n    const getMessages = () => {\r\n        axios\r\n            .get(`http://192.168.195.98:8087/api/v1/messages/chat/${chat.uuid}?size=${limit}&page=${currentPage}`)\r\n            .then(response => {\r\n                setNewMessageCount(chat.unreadMessages)\r\n                setMessages([...response.data.reverse(), ...messages])\r\n                setCurrentPage(prev => prev + 1)\r\n                setTotalCount(response.headers[\"x-total-count\"])\r\n            })\r\n            .finally(() => {\r\n                setEndOfPage(false)\r\n                setFetching(false)\r\n                currentPage == 0 && window.scrollTo(window.scrollX, document.body.scrollHeight) \r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (endOfPage && messages.length < totalCount) {\r\n            setFetching(true)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    const scrollHandler = (e) => {\r\n        setNeedScroll(false)\r\n        if (e.target.documentElement.scrollTop < 100) {\r\n            setEndOfPage(true)\r\n        }\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            setNeedScroll(true)\r\n        }\r\n    }\r\n\r\n    const sendMessage = (text) => {\r\n        setNeedScroll(true)\r\n        const message = {\r\n            \"senderId\": user,\r\n            \"chatId\": chat.uuid,\r\n            \"body\": text\r\n        }\r\n        socket.send(JSON.stringify(message))\r\n    }\r\n\r\n    const openWebSocketHandler = (e) => {\r\n        setOpenSocket(true)\r\n        socket.send(JSON.stringify({\r\n            isInit: true,\r\n            chatId: chat.uuid,\r\n            senderId: user\r\n        }))\r\n        console.log(e);\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            messages,\r\n            fetching,\r\n            members, \r\n            chat,\r\n            needScroll,\r\n            limit,\r\n            currentPage,\r\n            sendMessage,\r\n            endOfPage,\r\n            newMessageCount,\r\n            openSocket\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}","import { Icon12Add, Icon16InfoOutline, Icon24Add, Icon24Filter, Icon24InfoCircleOutline } from \"@vkontakte/icons\";\r\nimport { Group, PanelHeader, CardGrid, Card, div, Title, Text, Caption, Button, List, Spinner, Paragraph, InfoRow, ButtonGroup, IconButton, PanelHeaderButton } from \"@vkontakte/vkui\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nexport const Events = ({onOpenModal, onOpenEvent, onAddEvent}) => {\r\n\r\n    const [events, setEvents] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [totalCount, setTotalCount] = useState(0)\r\n    const [limit] = useState(15)\r\n    const [fetching, setFetching] = useState(true)\r\n    const [endOfPage, setEndOfPage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (fetching) {\r\n            axios\r\n                .get(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events?$count=true&$orderby=timeStamp&$top=${limit}&$skip=${(currentPage - 1) * limit}&$expand=organizer($select=username)`)\r\n                .then(response => {\r\n                    setEvents([...events, ...response.data.value])\r\n                    setTotalCount(response.data[\"@odata.count\"])\r\n                    setCurrentPage(prev => prev + 1)\r\n                })\r\n                .finally(() => {\r\n                    setEndOfPage(false)\r\n                    setFetching(false)\r\n                })\r\n        }\r\n    }, [fetching])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (endOfPage && events.length < totalCount) {\r\n            setFetching(true)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    const scrollHandler = (e) => {\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            setEndOfPage(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader \r\n                className=\"shadowPanelHeader\" \r\n                separator={false}\r\n                after={\r\n                    <>\r\n                        <PanelHeaderButton onClick={() => onOpenModal(\"filter\")}><Icon24Filter /></PanelHeaderButton>\r\n                        <PanelHeaderButton onClick={onAddEvent}><Icon24Add /></PanelHeaderButton>\r\n                    </>\r\n                }\r\n            >События</PanelHeader>\r\n            <Group>\r\n                <List>\r\n                    {\r\n                        events.map(e => {\r\n                            return (\r\n                                <CardGrid size=\"l\" key={e.ID}>\r\n                                    <Card mode=\"shadow\">\r\n                                        <div className=\"eventCardInner\">\r\n                                            <Title level=\"1\" style={{ marginBottom: 5 }}>\r\n                                                {e.name}\r\n                                            </Title>\r\n                                            <Text className=\"eventDescription\">\r\n                                                {e.descr}\r\n                                            </Text>\r\n                                            <div className=\"eventBottom\">\r\n                                                <InfoRow className=\"eventBottomItem\" header=\"Организатор\">{e.organizer.username}</InfoRow>\r\n                                                <InfoRow className=\"eventBottomItem\" header=\"Дата проведения\">{\r\n                                                    new Date(e.timeStamp).toLocaleString(\"ru-RU\", {\r\n                                                        day: \"numeric\",\r\n                                                        month: \"short\",\r\n                                                        year: \"numeric\",\r\n                                                        hour: \"numeric\",\r\n                                                        minute: \"numeric\"\r\n                                                    })\r\n                                                }</InfoRow>\r\n                                            </div>\r\n                                            <IconButton onClick={() => onOpenEvent(e.ID)} className=\"eventInfoButton\"><Icon24InfoCircleOutline/></IconButton>\r\n                                        </div> \r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        })\r\n                    }\r\n                    {fetching && <Spinner />}\r\n                </List>\r\n            </Group>\r\n        </>\r\n    )\r\n\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport const useLocalStorage = (initialValue, key) => {\r\n    const getValue = () => {\r\n        const storage = localStorage.getItem(key)\r\n        if (storage) {\r\n            return JSON.parse(storage)\r\n        }\r\n        return initialValue\r\n    }\r\n\r\n    const [value, setValue] = useState(getValue)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }, [value])\r\n\r\n    return [value, setValue]\r\n}","export const useShortText = (str, length) => {\r\n    return str.length > length ? str.substring(0, length) + \"...\" : str\r\n}","export const useTimeDifference = (d) => {\r\n    const date = new Date(d)\r\n    const currentDate = Date.now()\r\n    let diff = currentDate - date\r\n    if (diff < 1000) return \"0с\"\r\n    diff = Math.round(diff / 1000)\r\n    if (diff < 60) return `${diff}с`\r\n    diff = Math.round(diff / 60)\r\n    if (diff < 60) return `${diff}мин`\r\n    diff = Math.round(diff / 60)\r\n    if (diff < 24) return `${diff}ч`\r\n    diff = Math.round(diff / 24)\r\n    if (diff < 365) return `${diff}ч`\r\n    diff = Math.round(diff / 365)\r\n    return `${diff}г`\r\n}","import { calcInitialsAvatarColor, Counter, Group, InitialsAvatar, List, PanelHeader, RichCell, SimpleCell, Spinner, Text, Title } from \"@vkontakte/vkui\"\r\nimport { useEffect } from \"react\"\r\nimport { useChatListContextProvider } from \"../context/chatListContext\"\r\nimport { useShortText } from \"../hooks/useShortText\"\r\nimport { useTimeDifference } from \"../hooks/useTimeDifference\"\r\n\r\nexport const Messages = ({onChatOpen}) => {\r\n\r\n    const { chats, fetching, openSocket } = useChatListContextProvider()\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader className=\"shadowPanelHeader\" separator={false}>Сообщения</PanelHeader>\r\n            <Group>\r\n                <List>\r\n                    {\r\n                        chats.map(e => {\r\n                            return (\r\n                                <SimpleCell\r\n                                    before={\r\n                                        <InitialsAvatar gradientColor={calcInitialsAvatarColor(e.id)}>\r\n                                            {e.chatName.substring(0, 2)}\r\n                                        </InitialsAvatar>}\r\n                                    key={e.uuid}\r\n                                    onClick={() => onChatOpen(e)}\r\n                                    subtitle={e.lastMessage.uuid &&\r\n                                        <>{useShortText(`${e.lastMessage.sender.nickname}: ${e.lastMessage.text}`, 25)} &#183; {useTimeDifference(e.lastMessage.timestamp)}</>\r\n                                    }\r\n                                    indicator={e.unreadMessages != 0 && <Counter mode=\"primary\">{e.unreadMessages}</Counter>}\r\n                                >\r\n                                    {e.unreadMessages != 0 ? useShortText(e.chatName, 23) : e.chatName}\r\n                                </SimpleCell>\r\n                            )\r\n                        })\r\n                    }\r\n                    {fetching && <Spinner />}\r\n                </List>\r\n            </Group>\r\n        </>\r\n    )\r\n}","import {\r\n    Icon24CactusOutline,\r\n    Icon24CalendarOutline,\r\n    Icon24MailOutline,\r\n    Icon24MessageOutline,\r\n    Icon24UserAddOutline,\r\n    Icon28DoorArrowLeftOutline} from \"@vkontakte/icons\"\r\nimport {Group, PanelHeader, Button, Gradient, Text, SimpleCell, UsersStack, MiniInfoCell, Spinner, calcInitialsAvatarColor, InitialsAvatar, PanelHeaderBack, PanelHeaderButton} from \"@vkontakte/vkui\"\r\nimport {Header, Avatar, Title, Cell, List} from \"@vkontakte/vkui\";\r\nimport {ButtonGroup} from \"@vkontakte/vkui\";\r\nimport { Icon24ChevronCompactRight } from '@vkontakte/icons';\r\nimport { Icon24PhoneOutline } from '@vkontakte/icons';\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useTextDate } from \"../hooks/useTextDate\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\n\r\nexport const Profile = ({user, hasBack, onClose}) => {\r\n    const [userInfo, setUserInfo] = useState(null)\r\n    const [currentUser] = useLocalStorage(null, \"user\")\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Users/${user}`)\r\n            .then(response => {\r\n                setUserInfo(response.data)\r\n            })\r\n    }, [])\r\n\r\n    const exit = () => {\r\n        localStorage.removeItem(\"user\")\r\n        location.reload()\r\n    }\r\n\r\n    return (\r\n        <>\r\n                <PanelHeader \r\n                    className=\"shadowPanelHeader\" \r\n                    separator={false}\r\n                    before={hasBack && <PanelHeaderBack onClick={onClose}/>}\r\n                    after={userInfo && currentUser == userInfo.ID && <PanelHeaderButton onClick={exit}><Icon28DoorArrowLeftOutline/></PanelHeaderButton>}\r\n                >\r\n                    Профиль\r\n                </PanelHeader>\r\n            {!userInfo && <Group><Spinner /></Group>}\r\n            {userInfo && \r\n                <>\r\n                    <Group>\r\n                        <Gradient\r\n                            mode=\"tint\"\r\n                            to=\"top\"\r\n                            className=\"profileBIO\"\r\n                        >\r\n                            <InitialsAvatar size={96} gradientColor={calcInitialsAvatarColor(Number(userInfo.phoneNumber % 10))}>\r\n                                {userInfo.username.substring(0, 2)}\r\n                            </InitialsAvatar>\r\n                            <Title level=\"2\" width=\"2\" className=\"profileTitle\">\r\n                                {userInfo.username}\r\n                            </Title>\r\n                            <Text className=\"profileSubTitle\">\r\n                                {userInfo.bio}\r\n                            </Text>\r\n                            {currentUser != userInfo.ID && \r\n                                <ButtonGroup>\r\n                                    <Button size=\"m\" sizeY=\"compact\"><Icon24UserAddOutline /></Button>\r\n                                    <Button\r\n                                        size=\"m\"\r\n                                        sizeY=\"compact\"\r\n                                        before={<Icon24MessageOutline />}\r\n                                    >\r\n                                        Написать\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            }\r\n                        </Gradient>\r\n                        <Group header={<Header mode=\"secondary\">Друзья</Header>}>\r\n                            <SimpleCell className=\"profileFriends\"\r\n                                before={\r\n                                    <UsersStack\r\n                                        size=\"m\"\r\n                                        photos={[\r\n                                            \"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\",\r\n                                            \"https://www.ixbt.com/img/n1/news/2018/7/4/341109.png\",\r\n                                            \"https://cdni.rt.com/russian/images/2022.09/article/63231abe02e8bd743524f678.png\"\r\n                                        ]}\r\n                                    >\r\n                                    </UsersStack>\r\n                                }\r\n                                after={\r\n                                    <Icon24ChevronCompactRight width={30} height={30} />\r\n                                }\r\n                            >\r\n                                1377 друзей\r\n                            </SimpleCell>\r\n                        </Group>\r\n                    </Group>\r\n                    <Group header={<Header mode=\"secondary\">Информация</Header>}>\r\n                    {console.log(userInfo.phoneNumber)}\r\n                        {userInfo.phoneNumber != \"\" && <MiniInfoCell before={<Icon24PhoneOutline />} textLevel=\"primary\">\r\n                            {userInfo.phoneNumber}\r\n                        </MiniInfoCell>}\r\n                        {userInfo.email != \"\" && <MiniInfoCell before={<Icon24MailOutline />} textLevel=\"primary\">\r\n                            {userInfo.email}\r\n                        </MiniInfoCell>}\r\n                        <MiniInfoCell before={<Icon24CalendarOutline />} textLevel=\"primary\">\r\n                            {useTextDate(userInfo.dateOfBirth)}\r\n                        </MiniInfoCell>\r\n                    </Group>\r\n                    <Group header={<Header mode=\"secondary\">Любимые игры</Header>}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Avatar src={\"https://s2-goods.ozstatic.by/2000/42/893/10/10893042_0.jpg\"} />}\r\n                                description=\"Carcassonne\"\r\n                            >\r\n                                Каркассон\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Avatar\r\n                                    src={\"https://avatars.mds.yandex.net/get-mpic/6382710/img_id8546741754982085445.jpeg/orig\"} />}\r\n                                description=\"Monopoly\"\r\n                            >\r\n                                Монополия\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Avatar\r\n                                    src={\"https://igromaster.by/upload/iblock/972/972ee18fcf89183f221bab04bcff0668.jpg\"} />}\r\n                                description=\"Uno\"\r\n                            >\r\n                                У́но\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}","export const useTextDate = (d) => {\r\n    const date = new Date(d)\r\n    return date.toLocaleString(\"ru-RU\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\"\r\n    })\r\n}","import { Header } from \"@vkontakte/vkui\";\r\n\r\nexport const TextSeparator = ({text}) => {\r\n    return ( \r\n        <div className=\"textSeparator\">\r\n            <div className=\"line\"></div>\r\n            <div className=\"text\">\r\n                {text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n ","export const useDateComparison = (d1, d2) => {\r\n    const getLocalISODate = (date) => {\r\n        function pad(number) {\r\n            if (number < 10) {\r\n                return '0' + number;\r\n            }\r\n            return number;\r\n        }\r\n\r\n        return date.getFullYear() +\r\n            '-' + pad(date.getMonth() + 1) +\r\n            '-' + pad(date.getDate())\r\n    }\r\n\r\n    const date1 = new Date(d1)\r\n    const date2 = new Date(d2)\r\n\r\n    return getLocalISODate(date1) == getLocalISODate(date2)\r\n}","export const useDateSeparatorText = (timestamp) => {\r\n    const date = new Date(timestamp)\r\n    const currentDate = new Date(Date.now())\r\n    if (date.getFullYear() == currentDate.getFullYear())\r\n        return date.toLocaleString(\"ru-RU\", { day: \"numeric\", month: \"long\" })\r\n    return date.toLocaleString(\"ru-RU\", { day: \"numeric\", month: \"long\", year: \"numeric\" })\r\n}","import { Avatar, calcInitialsAvatarColor, InitialsAvatar } from \"@vkontakte/vkui\"\r\n\r\nexport const Message = ({\r\n    self = false, \r\n    text,\r\n    caption = \"\",\r\n    hasAvatar = false,\r\n    avatar,\r\n    title,\r\n    id\r\n\r\n}) => {\r\n    return (\r\n        <div className={`messageBox ${self ? \"self\" : \"\"}`}>\r\n            {hasAvatar && avatar && <Avatar size={25}/>}\r\n            {hasAvatar && !avatar && \r\n                <InitialsAvatar size={25} gradientColor={calcInitialsAvatarColor(id)}>\r\n                    {title.substring(0, 2)}\r\n                </InitialsAvatar>\r\n            }\r\n            <div className={`messageTextBox ${self ? \"self\" : \"\"}`}>\r\n                {!self && <div className=\"messageTitle\">{title}</div>}\r\n                <div>{text}</div>\r\n                {caption && <div className=\"messageCaption\">{caption}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Separator, Spinner } from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\"\r\nimport { TextSeparator } from \"../components/textSeparator\";\r\nimport { useChatContextProvider } from \"../context/chatContext\";\r\nimport { useDateComparison } from \"../hooks/useDateComparison\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\nimport { useDateSeparatorText } from \"../hooks/useDateSeparatorText\";\r\nimport { Message } from \"./message\"\r\n\r\nexport const MessageList = ({ isPublic = true}) => {\r\n    const [scrollHeight, setScrollHeight] = useState(0)\r\n    const { messages, fetching, needScroll, newMessageCount, endOfPage } = useChatContextProvider()\r\n    const [windowHeight, setWindowHeight] = useState(window.innerHeight)\r\n    const [didResize, setDidResize] = useState(false)\r\n    const [user] = useLocalStorage(null, \"user\")\r\n\r\n    const bottomRef = useRef(null)\r\n\r\n    useLayoutEffect(() => {\r\n        if (endOfPage) {\r\n            window.scrollTo(\r\n                window.scrollX,\r\n                document.body.scrollTop + document.documentElement.scrollHeight - scrollHeight\r\n            )\r\n        }\r\n        if(needScroll) {\r\n            bottomRef.current.scrollIntoView({ behavior: \"smooth\"})\r\n        }\r\n    }, [messages]);\r\n\r\n    useLayoutEffect(() => {\r\n        if (endOfPage) {\r\n            setScrollHeight(document.documentElement.scrollHeight)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    useEffect(() => {\r\n        if (didResize) {\r\n            if (windowHeight - window.innerHeight > 0) {\r\n                window.scrollTo(window.scrollX, window.scrollY + windowHeight - window.innerHeight)\r\n            } \r\n            if (windowHeight - window.innerHeight < 0) {\r\n                if (document.documentElement.scrollHeight - (document.documentElement.scrollTop + window.innerHeight) > Math.abs(windowHeight - window.innerHeight)) {\r\n                    window.scrollTo(window.scrollX, window.scrollY + windowHeight - window.innerHeight)\r\n                }\r\n            }\r\n            \r\n            setWindowHeight(window.innerHeight)\r\n            setDidResize(false)\r\n        }\r\n    }, [didResize])\r\n\r\n    const resizeHandler = () => {\r\n        setDidResize(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", resizeHandler)\r\n        return () => window.removeEventListener(\"resize\", resizeHandler)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {fetching && <Spinner style={{marginTop: 10}} />} \r\n           \r\n            <div className=\"messageList\">\r\n                {messages.map(((m, index, arr) => {\r\n                    return ( \r\n                        <React.Fragment key={m.uuid}>\r\n                            {arr.length - index == newMessageCount && <TextSeparator text=\"Новые сообщения\" />}\r\n                            <Message\r\n                                text={m.text}\r\n                                caption={new Date(m.timestamp).toLocaleString(\"ru-RU\", {hour: \"numeric\", minute: \"numeric\"})}\r\n                                hasAvatar={m.sender.uuid != user && isPublic}\r\n                                self={m.sender.uuid == user}\r\n                                title={isPublic && m.sender.nickname}\r\n                                avatar={m.avatar}\r\n                                id={m.uuid}\r\n                            />\r\n                            {arr[index + 1] ? !useDateComparison(m.timestamp, arr[index + 1].timestamp) && <TextSeparator text={`${ useDateSeparatorText(arr[index + 1].timestamp) }`} /> : <></>}\r\n                        </React.Fragment>\r\n                    )\r\n                }))}\r\n            </div>\r\n            <div ref={bottomRef}></div>\r\n        </>\r\n    )\r\n}","import { calcInitialsAvatarColor, Card, Cell, FixedLayout, Group, InitialsAvatar, PanelHeader, PanelHeaderBack, PanelHeaderButton, PanelHeaderContent, Separator, WriteBar, WriteBarIcon } from \"@vkontakte/vkui\"\r\nimport { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { useChatContextProvider } from \"../context/chatContext\";\r\nimport { MessageList } from \"../messageComponents/messageList\";\r\nimport { Icon28Users3Outline } from '@vkontakte/icons';\r\n\r\nexport const Chat = ({\r\n    onClose,\r\n    onOpenChatMembersList\r\n}) => {\r\n    const [writeBarText, setWriteBarText] = useState(\"\")\r\n    const [bottomPadding, setBottomPadding] = useState(0);\r\n\r\n    const fixedLayoutInnerElRef = useRef();\r\n\r\n    const { chat, sendMessage, openSocket, members } = useChatContextProvider()\r\n\r\n    const updateBottomPadding = () => {\r\n        const el = fixedLayoutInnerElRef.current;\r\n        if (el) {\r\n            const height = el.offsetHeight;\r\n            if (height !== bottomPadding) {\r\n                setBottomPadding(height);\r\n            }\r\n        }\r\n    };\r\n\r\n    const sendMessageHandler = () => {\r\n        sendMessage(writeBarText)\r\n        setWriteBarText(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader\r\n                className=\"shadowPanelHeader\" \r\n                separator={false} \r\n                before={\r\n                    <PanelHeaderBack \r\n                        onClick={onClose}\r\n                    />}\r\n                after={members.length > 0 &&\r\n                    <PanelHeaderButton onClick={onOpenChatMembersList}>\r\n                        <Icon28Users3Outline/>\r\n                    </PanelHeaderButton>\r\n                }\r\n            >\r\n                <PanelHeaderContent\r\n                    before={\r\n                        <InitialsAvatar size={36} gradientColor={calcInitialsAvatarColor(chat.id)}>\r\n                            {chat.chatName.substring(0, 2)}\r\n                        </InitialsAvatar>\r\n                    }\r\n                    status={`${members.length} участников`}\r\n                >\r\n                    {chat.chatName}\r\n                </PanelHeaderContent>\r\n            </PanelHeader>\r\n            <MessageList/>\r\n            <FixedLayout\r\n                vertical=\"bottom\"\r\n                style={{paddingBottom: 0}}\r\n            >\r\n                <div ref={fixedLayoutInnerElRef}>\r\n                    <Separator wide />\r\n                    <WriteBar\r\n                        value={writeBarText}\r\n                        onChange={(e) => setWriteBarText(e.target.value)}\r\n                        onHeightChange={() => updateBottomPadding()}\r\n                        placeholder=\"Сообщение\"\r\n                        after={\r\n                            <Fragment>\r\n                                <WriteBarIcon \r\n                                    mode=\"send\" \r\n                                    disabled={writeBarText.length === 0 || !openSocket}\r\n                                    onClick={() => sendMessageHandler()}\r\n                                />\r\n                            </Fragment>\r\n                        }\r\n                    />\r\n                </div>\r\n            </FixedLayout>\r\n        </>\r\n    )\r\n}","import { Avatar, calcInitialsAvatarColor, Cell, Group, Header, InitialsAvatar, List, PanelHeader, PanelHeaderBack, Separator, SimpleCell, Title } from \"@vkontakte/vkui\";\r\n\r\nexport const ChatMembersList = ({ onClose, chat, onOpenProfile }) => {\r\n    console.log(chat);\r\n    return ( \r\n        <>\r\n            <PanelHeader \r\n                className=\"shadowPanelHeader\" \r\n                separator={false}\r\n                before={\r\n                    <PanelHeaderBack\r\n                        onClick={onClose}\r\n                    />\r\n                }\r\n            >\r\n                Участники\r\n            </PanelHeader>\r\n            <Group className=\"d-f-center\">\r\n                <InitialsAvatar size={100} gradientColor={calcInitialsAvatarColor(chat.id)}>\r\n                    {chat.chatName.substring(0, 2)}\r\n                </InitialsAvatar>\r\n                <Title>{chat.chatName}</Title>\r\n            </Group>\r\n            <Group>\r\n                <List>\r\n                    {chat.members.map(e =>\r\n                        <SimpleCell\r\n                            before={\r\n                                <InitialsAvatar size={48} gradientColor={calcInitialsAvatarColor(Number(e.phoneNumber % 10))}>\r\n                                    {e.username.substring(0, 2)}\r\n                                </InitialsAvatar>\r\n                            }\r\n                            key={e.ID}\r\n                            subtitle={e.bio}\r\n                            onClick={() => onOpenProfile(e.ID)}\r\n                        >\r\n                            {e.username}\r\n                        </SimpleCell>\r\n                    )}\r\n                </List>\r\n            </Group>\r\n        </>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Icon24Add } from '@vkontakte/icons';\r\n\r\nexport const MapEventMarker = ({ event, onOpenEvent }) => {\r\n\r\n    const [timer, setTimer] = useState(null)\r\n\r\n    const onClickHandler = (e) => {\r\n        e.stopPropagation()\r\n        e.target.closest(\".mapMarkerInner\").classList.add(\"clicked\")\r\n        setTimeout(() => {\r\n            onOpenEvent && onOpenEvent(event.ID)\r\n            e.target.closest(\".mapMarkerInner\").classList.remove(\"clicked\")\r\n        }, 100)\r\n    }\r\n\r\n    const longTouch = (e) => {\r\n        e.target.closest(\".mapMarkerInner\").querySelector(\".mapMarkerMore\").classList.add(\"touch\")\r\n        e.target.closest(\".mapMarkerInner\").querySelector(\".close\").classList.add(\"active\")\r\n    }\r\n\r\n    const onTouchStartHandler = (e) => {\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n        setTimer(setTimeout(() => longTouch(e), 700))\r\n    }\r\n\r\n    const onTouchEndHandler = (e) => {\r\n        clearTimeout(timer)\r\n    }\r\n\r\n    const close = (e) => {\r\n        e.stopPropagation()\r\n        e.target.closest(\".mapMarkerInner\").querySelector(\".mapMarkerMore\").classList.remove(\"touch\")\r\n        e.target.closest(\".mapMarkerInner\").querySelector(\".close\").classList.remove(\"active\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"mapMarkerWrapper\">\r\n            <div onClick={onClickHandler} onTouchEnd={onTouchEndHandler} onTouchStart={onTouchStartHandler} className=\"mapMarkerInner\">\r\n                <div className=\"mapMarkerInfo\">\r\n                    <div className=\"mapMarkerContent\">\r\n                        <div className=\"mapMarkerTitle\">{event.name}</div>\r\n                        <div className=\"mapMarkerText\">{new Date(event.timeStamp).toLocaleString(\"ru-RU\", {\r\n                            day: \"numeric\",\r\n                            month: \"numeric\",\r\n                            year: \"2-digit\",\r\n                            hour: \"numeric\",\r\n                            minute: \"numeric\"\r\n                        })}</div>\r\n                        <div className=\"mapMarkerMore\">{event.descr}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mapBottom\">\r\n\r\n                </div>\r\n                <div className=\"close\" onClick={close}>\r\n                    <Icon24Add width={15} height={15}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Group, PanelHeader, Spinner } from \"@vkontakte/vkui\"\r\nimport axios from \"axios\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { MapEventMarker } from \"../components/mapEventMarker\";\r\n\r\nexport const MapPanel = ({onOpenEvent}) => {\r\n\r\n    const [events, setEvents] = useState(null)\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events\")\r\n            .then(response => {\r\n                setEvents(response.data.value)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader separator={false} className=\"shadowPanelHeader\">\r\n                Карта событий\r\n            </PanelHeader>\r\n            <Group className=\"mapGroup\">\r\n                {!events && <Spinner/>}\r\n                {events && <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyBY3XkvjucuJx55bzFZMTJQnYH5JnWK8SQ\" }}\r\n                    defaultCenter={{\r\n                        lat: 53.90478949220637,\r\n                        lng: 27.54735640149058\r\n                    }}\r\n                    defaultZoom={11}\r\n                >\r\n                    {events.map(e => <MapEventMarker key={e.ID} onOpenEvent={onOpenEvent} event={e} lat={e.coords_lat} lng={e.coords_lng} />)}  \r\n                </GoogleMapReact>}\r\n            </Group>\r\n        </>\r\n    )\r\n}","import { Button, ButtonGroup, Group, MiniInfoCell, PanelHeader, PanelHeaderBack, Spinner, Text, Title } from \"@vkontakte/vkui\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { MapEventMarker } from \"../components/mapEventMarker\";\r\nimport { Icon16Crown, Icon20Add, Icon20CalendarOutline, Icon20CrownCircleFillVkDating, Icon20DoorArrowRightOutline, Icon20DoorEnterArrowRightOutline, Icon20MessageOutline, Icon20PlaceOutline, Icon20Users3Outline } from \"@vkontakte/icons\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\n\r\nexport const EventInfo = ({event, onClose}) => {\r\n    const [eventInfo, setEventInfo] = useState(null)\r\n    const [user] = useLocalStorage(null, \"user\")\r\n    const [fetching, setFetching] = useState(false)\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events/${event}?$expand=members,organizer($select=username)`)\r\n            .then(response => {\r\n                setEventInfo(response.data)\r\n            })\r\n    }, [])\r\n\r\n    const joinEvent = async () => {\r\n        setFetching(true)\r\n        await axios.post(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events/${event}/members`, {\r\n                \"user_ID\": user,\r\n                \"role\": 0\r\n            })\r\n        axios\r\n            .get(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events/${event}?$expand=members,organizer($select=username)`)\r\n            .then(response => {\r\n                setEventInfo(response.data)\r\n                setFetching(false)\r\n            })\r\n    }\r\n\r\n    const leaveEvent = async () => {\r\n        setFetching(true)\r\n        await axios.delete(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events/${event}/members/${user}`)\r\n        axios\r\n            .get(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events/${event}?$expand=members,organizer($select=username)`)\r\n            .then(response => {\r\n                setEventInfo(response.data)\r\n                setFetching(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader\r\n                separator={false}\r\n                className=\"shadowPanelHeader\"\r\n                before={\r\n                    <PanelHeaderBack onClick={onClose}/>\r\n                }\r\n            >Информация о событии</PanelHeader>\r\n            <Group>\r\n                {eventInfo && <>\r\n                    <Group style={{padding: \"0px 10px\"}}>\r\n                        <Title level=\"1\" style={{ marginBottom: 5 }}>\r\n                            {eventInfo.name}\r\n                        </Title>\r\n                        <Text className=\"eventDescription\">\r\n                            {eventInfo.descr}\r\n                        </Text>\r\n                    </Group>\r\n                    <Group style={{ padding: \"0px 10px\" }}>\r\n                        <MiniInfoCell\r\n                            before={<Icon16Crown width={20} height={20} />}\r\n                        >\r\n                            {eventInfo.organizer.username}\r\n                        </MiniInfoCell>\r\n                        <MiniInfoCell\r\n                            before={<Icon20CalendarOutline/>}\r\n                        >\r\n                            {\r\n                                new Date(eventInfo.timeStamp).toLocaleString(\"ru-RU\", {\r\n                                    day: \"numeric\",\r\n                                    month: \"long\",\r\n                                    year: \"numeric\",\r\n                                    hour: \"numeric\",\r\n                                    minute: \"numeric\"\r\n                                })\r\n                            }\r\n                        </MiniInfoCell>\r\n                        <MiniInfoCell\r\n                            before={<Icon20Users3Outline />}\r\n                        >\r\n                            {eventInfo.members.length} участников\r\n                        </MiniInfoCell>\r\n                        <MiniInfoCell\r\n                            before={<Icon20PlaceOutline />}\r\n                        >\r\n                            {eventInfo.address}\r\n                        </MiniInfoCell>\r\n                    </Group>\r\n                    <Group style={{ padding: \"0px 10px\" }}>\r\n                        <ButtonGroup className=\"eventInfoButtons\">\r\n                            {eventInfo.members.filter(e => e.user_ID == user).length == 0 && \r\n                                <Button onClick={joinEvent} before={fetching ? <Spinner size=\"small\"/> : <Icon20Add />} mode=\"outline\">Присоединиться</Button>\r\n                            }\r\n                            {eventInfo.members.filter(e => e.user_ID == user).length != 0 &&\r\n                                <Button onClick={leaveEvent} before={fetching ? <Spinner size=\"small\" /> : <Icon20DoorEnterArrowRightOutline />} mode=\"outline\">Покинуть</Button>\r\n                            }\r\n                            <Button before={<Icon20MessageOutline/>} mode=\"outline\">Чат</Button>\r\n                        </ButtonGroup>\r\n                    </Group>\r\n                    <Group className=\"eventInfoMap\" style={{ padding: \"0px 10px\" }}>\r\n                        <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: \"AIzaSyBY3XkvjucuJx55bzFZMTJQnYH5JnWK8SQ\" }}\r\n                            defaultCenter={{\r\n                                lat: eventInfo.coords_lat,\r\n                                lng: eventInfo.coords_lng\r\n                            }}\r\n                            defaultZoom={17}\r\n                        >\r\n                            <MapEventMarker event={eventInfo} lat={eventInfo.coords_lat} lng={eventInfo.coords_lng} />\r\n                        </GoogleMapReact>\r\n                    </Group>\r\n                </>}\r\n                {!eventInfo && <Spinner/>}\r\n            </Group>\r\n        </>\r\n    )\r\n}","import { Avatar, Button, Calendar, DatePicker, FormItem, FormLayout, Input, PanelHeader, PanelHeaderBack, Snackbar, Textarea } from \"@vkontakte/vkui\"\r\nimport { useState } from \"react\"\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Icon16Cancel, Icon28Place } from \"@vkontakte/icons\";\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\nimport axios from \"axios\";\r\n\r\nexport const AddEvent = ({onClose}) => {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [position, setPosition] = useState(null)\r\n    const [date, setDate] = useState(new Date);\r\n    const [user] = useLocalStorage(null, \"user\")\r\n    const [snackbar, setSnackbar] = useState(null)\r\n\r\n    const createEvent = () => {\r\n        const body = {\r\n            organizer_ID: user,\r\n            name: name,\r\n            descr: description,\r\n            coords_lat: position.lat,\r\n            coords_lng: position.lng,\r\n            address: address,\r\n            timeStamp: date.toISOString()\r\n        }\r\n        axios\r\n            .post(\"https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events\", body)\r\n            .then(response => {\r\n                onClose()\r\n            })\r\n            .catch((e) => {\r\n                setSnackbar(\r\n                    <Snackbar\r\n                        onClose={() => setSnackbar(null)}\r\n                        before={\r\n                            <Avatar\r\n                                size={24}\r\n                                style={{ background: \"var(--orange)\" }}\r\n                            >\r\n                                <Icon16Cancel fill=\"#fff\" width={14} height={14} />\r\n                            </Avatar>\r\n                        }\r\n                    >\r\n                        Не удалось создать событие\r\n                    </Snackbar>\r\n                )\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader\r\n                before={<PanelHeaderBack onClick={onClose}/>}\r\n                separator={false}\r\n                className=\"shadowPanelHeader\"\r\n            >\r\n                Создание события\r\n            </PanelHeader>\r\n            <FormLayout>\r\n                <FormItem top=\"Название\">\r\n                    <Input\r\n                        placeholder=\"Название события\"\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem top=\"Описание\">\r\n                    <Textarea\r\n                        placeholder=\"Описание события\"\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem top=\"Дата и время\">\r\n                    <Calendar\r\n                        size=\"m\"\r\n                        enableTime={true}\r\n                        disablePast={true}\r\n                        value={date}\r\n                        onChange={setDate}\r\n                        style={{margin: \"auto\"}}\r\n                    />\r\n                </FormItem>\r\n                <FormItem top=\"Адрес\">\r\n                    <Input\r\n                        placeholder=\"Адрес события\"\r\n                        value={address}\r\n                        onChange={e => setAddress(e.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem top=\"Укажите событие на карте\" style={{height: 300, marginBottom: 10}}>\r\n                    <GoogleMapReact\r\n                        bootstrapURLKeys={{ key: \"AIzaSyBY3XkvjucuJx55bzFZMTJQnYH5JnWK8SQ\" }}\r\n                        defaultCenter={{\r\n                            lat: 53.90478949220637,\r\n                            lng: 27.54735640149058\r\n                        }}\r\n                        center={position}\r\n                        defaultZoom={10}\r\n                        onClick={({lat, lng}) => setPosition({lat, lng})}\r\n                    >\r\n                        {position && <Icon28Place \r\n                            lat={position.lat} \r\n                            lng={position.lng} \r\n                            style={{ color: \"var(--orange)\", transform: \"translate(-50%, -100%)\"}}\r\n                            width={40}\r\n                            height={40}\r\n                        />}\r\n                    </GoogleMapReact>\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button\r\n                        disabled={!name || !description || !address || !position}\r\n                        size=\"m\"\r\n                        stretched\r\n                        onClick={createEvent}\r\n                    >Добавить</Button>\r\n                </FormItem>\r\n            </FormLayout>  \r\n            {snackbar}\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { View, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol, PanelHeader, Epic, Tabbar, TabbarItem, Panel, WebviewType, ModalRoot, ModalPage, ModalPageHeader, PanelHeaderClose, ViewWidth, useAdaptivity, PanelHeaderSubmit, FormLayout, FormItem, IconButton, ChipsInput, Chip, Avatar, CustomSelectOption, InitialsAvatar, calcInitialsAvatarColor, RangeSlider, DatePicker } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { Icon16Clear, Icon28MessageOutline, Icon28NewsfeedOutline, Icon28PlaceOutline, Icon28UserCircleOutline } from '@vkontakte/icons';\r\nimport { Events } from './panels/events';\r\nimport { Messages } from './panels/messages';\r\nimport { Profile } from './panels/profile';\r\nimport { Chat } from './panels/chat';\r\nimport { ChatListContextProvider } from './context/chatListContext';\r\nimport { ChatContextProvider } from './context/chatContext';\r\nimport { ChatMembersList } from './panels/chatMembersList';\r\nimport { useLocalStorage } from './hooks/useLocalStorage';\r\nimport { MapPanel } from './panels/map';\r\nimport { ChipsSelect } from \"@vkontakte/vkui/dist/unstable\";\r\nimport \"@vkontakte/vkui/dist/unstable.css\";\r\nimport { EventInfo } from './panels/eventInfo';\r\nimport { AddEvent } from './panels/addEvent';\r\n\r\nconst games = [\r\n\t{ value: 1, label: \"UNO\" },\r\n\t{ value: 2, label: \"Монополия\" },\r\n\t{ value: 3, label: \"Мир Танков\" },\r\n\t{ value: 4, label: \"Warhammer 40.000\" },\r\n\t{ value: 5, label: \"Шахматы\" },\r\n\t{ value: 6, label: \"Нарды\" },\r\n\t{ value: 7, label: \"Голодные игры\" },\r\n\t{ value: 8, label: \"Жосткая настолка для детей\" },\r\n];\r\n\r\nconst org = [\r\n\t{ value: 1, label: \"Oriery\" },\r\n\t{ value: 2, label: \"TheEvaElfie\" },\r\n\t{ value: 3, label: \"Wylsacom\" },\r\n\t{ value: 4, label: \"Китя Вислый\" },\r\n\t{ value: 5, label: \"KorbenDaIlas\" },\r\n\t{ value: 6, label: \"Стас Ай Как Просто\" },\r\n\t{ value: 7, label: \"Джо Байден\" },\r\n\t{ value: 8, label: \"iPhone 14 Pro Max\" },\r\n];\r\n\r\nconst App = () => {\r\n\tconst [scheme, setScheme] = useState('light')\r\n\tconst [activeStory, setActiveStory] = useState(\"events\")\r\n\tconst [messagesActivePanel, setMessagesActivePanel] = useState(\"messages\")\r\n\tconst [eventsActivePanel, setEventsActivePanel] = useState(\"events\")\r\n\tconst [mapActivePanel, setMapActivePanel] = useState(\"map\")\r\n\tconst [event, setEvent] = useState(null)\r\n\tconst [chat, setChat] = useState(null)\r\n\tconst [hasTabbar, setHasTabbar] = useState(true)\r\n\tconst [currentUser] = useLocalStorage(null, \"user\")\r\n\tconst [user, setUser] = useState(currentUser)\r\n\tconst [activeModal, setActiveModal] = useState(null)\r\n\tconst [modalHistory, setModalHistory] = useState([])\r\n\tconst [selectedGames, setSelectedGames] = useState([]);\r\n\tconst [selectedOrg, setSelectedOrg] = useState([])\r\n\tconst [gamers, setGamers] = useState([2, 10])\r\n\r\n\tconst { viewWidth } = useAdaptivity();\r\n\tconst isMobile = viewWidth <= ViewWidth.MOBILE;\r\n\r\n\tconst onStoryChange = (e) => {\r\n\t\tif (e.currentTarget.dataset.story == \"map\") {\r\n\t\t\tsetMapActivePanel(\"map\")\r\n\t\t}\r\n\t\tif (e.currentTarget.dataset.story == \"events\") {\r\n\t\t\tsetEventsActivePanel(\"events\")\r\n\t\t}\r\n\t\tsetActiveStory(e.currentTarget.dataset.story)\r\n\t}\r\n\r\n\tconst openChatHandler = (chat) => {\r\n\t\tsetChat(chat)\r\n\t\tsetMessagesActivePanel(\"chat\")\r\n\t\tsetHasTabbar(false)\r\n\t}\r\n\r\n\tconst openChatMembersHandler = (chat) => {\r\n\t\tsetMessagesActivePanel(\"chatMembers\")\r\n\t}\r\n\r\n\tconst closeChatHanler = () => {\r\n\t\tsetMessagesActivePanel(\"messages\")\r\n\t\tsetHasTabbar(true)\r\n\t}\r\n\r\n\tconst closeChatMembersHandler = () => {\r\n\t\tsetMessagesActivePanel(\"chat\")\r\n\t}\r\n\r\n\tconst openProfileHandler = (user_id) => {\r\n\t\tsetUser(user_id)\r\n\t\tsetActiveStory(\"profile\")\r\n\t}\r\n\r\n\tconst closeProfileHandler = () => {\r\n\t\tsetUser(currentUser)\r\n\t\tsetActiveStory(\"messages\")\r\n\t}\r\n\r\n\tconst openEventInfoHandler = (eventID) => {\r\n\t\tsetEvent(eventID)\r\n\t\tif (activeStory == \"map\") {\r\n\t\t\tsetMapActivePanel(\"eventInfo\")\r\n\t\t} else {\r\n\t\t\tsetEventsActivePanel(\"eventInfo\")\r\n\t\t}\r\n\t}\r\n\r\n\tconst closeEventInfo = () => {\r\n\t\tif (activeStory == \"map\") {\r\n\t\t\tsetMapActivePanel(\"map\")\r\n\t\t} else {\r\n\t\t\tsetEventsActivePanel(\"events\")\r\n\t\t}\r\n\t}\r\n\r\n\tconst openAddEvent = () => {\r\n\t\tsetEventsActivePanel(\"addEvent\")\r\n\t}\r\n\r\n\tconst closeAddEvent = () => {\r\n\t\tsetEventsActivePanel(\"events\")\r\n\t}\r\n\r\n\tconst modalBack = () => {\r\n\t\tsetActiveModalHandler(\r\n\t\t\tmodalHistory[modalHistory.length - 2]\r\n\t\t);\r\n\t};\r\n\r\n\tconst setActiveModalHandler = (activeModal) => {\r\n\t\tactiveModal = activeModal || null;\r\n\t\tlet modalHistoryTmp = modalHistory\r\n\t\t\t? [...modalHistory]\r\n\t\t\t: [];\r\n\r\n\t\tif (activeModal === null) {\r\n\t\t\tmodalHistoryTmp = [];\r\n\t\t} else if (modalHistoryTmp.indexOf(activeModal) !== -1) {\r\n\t\t\tmodalHistoryTmp = modalHistoryTmp.splice(\r\n\t\t\t\t0,\r\n\t\t\t\tmodalHistoryTmp.indexOf(activeModal) + 1\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tmodalHistoryTmp.push(activeModal);\r\n\t\t}\r\n\r\n\t\tsetActiveModal(activeModal)\r\n\t\tsetModalHistory(modalHistoryTmp)\r\n\t}\r\n\r\n\tconst gamesChipsProps = {\r\n\t\tvalue: selectedGames,\r\n\t\tonChange: setSelectedGames,\r\n\t\toptions: games,\r\n\t\tplaceholder: \"Не выбраны\",\r\n\t\tcreatable: false,\r\n\t\tcloseAfterSelect: false\r\n\t};\r\n\r\n\tconst orgChipsProps = {\r\n\t\tvalue: selectedOrg,\r\n\t\tonChange: setSelectedOrg,\r\n\t\toptions: org,\r\n\t\tplaceholder: \"Не выбраны\",\r\n\t\tcreatable: false,\r\n\t\tcloseAfterSelect: false\r\n\t};\r\n\r\n\tconst modal = \r\n\t\t<ModalRoot activeModal={activeModal} onClose={modalBack}>\r\n\t\t\t<ModalPage\r\n\t\t\t\tonClose={modalBack}\r\n\t\t\t\tid=\"filter\"\r\n\t\t\t\tsettlingHeight={100}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader\r\n\t\t\t\t\t\tbefore={\r\n\t\t\t\t\t\t\tisMobile && <PanelHeaderClose onClick={modalBack} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tafter={<PanelHeaderSubmit onClick={modalBack} />}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tФильтры\r\n\t\t\t\t\t</ModalPageHeader>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<FormItem top=\"Игры\">\r\n\t\t\t\t\t\t<ChipsSelect {...gamesChipsProps} />\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t<FormItem top=\"Организаторы\">\r\n\t\t\t\t\t\t<ChipsSelect\r\n\t\t\t\t\t\t\t{...orgChipsProps} \r\n\t\t\t\t\t\t\tshowSelected={false}\r\n\t\t\t\t\t\t\trenderChip={({ value, label, ...rest }) => (\r\n\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\t{...rest}\r\n\t\t\t\t\t\t\t\t\tbefore={<InitialsAvatar size={20} gradientColor={calcInitialsAvatarColor(value)} />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</Chip>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\trenderOption={({option, ...otherProps }) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<CustomSelectOption\r\n\t\t\t\t\t\t\t\t\t\tbefore={\r\n\t\t\t\t\t\t\t\t\t\t\t<InitialsAvatar size={20} gradientColor={calcInitialsAvatarColor(option.value)} />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t{...otherProps}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t<FormItem className=\"rangeSlider\" top=\"Количество игроков\" bottom={`${gamers[0]} - ${gamers[1]}`}>\r\n\t\t\t\t\t\t<RangeSlider\r\n\t\t\t\t\t\t\tmin={2}\r\n\t\t\t\t\t\t\tmax={10}\r\n\t\t\t\t\t\t\tdefaultValue={gamers}\r\n\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\tonChange={(value) => setGamers(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t<FormItem top=\"Дата проведения\">\r\n\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\tmin={{ day: 1, month: 1, year: 2022 }}\r\n\t\t\t\t\t\t\tmax={{ day: 31, month: 12, year: 2023 }}\r\n\t\t\t\t\t\t\tdayPlaceholder=\"ДД\"\r\n\t\t\t\t\t\t\tmonthPlaceholder=\"MM\"\r\n\t\t\t\t\t\t\tyearPlaceholder=\"ГГ\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</ModalPage>\r\n\t\t</ModalRoot>\r\n\r\n\treturn (\r\n\t\t<ConfigProvider appearance={scheme} webviewType=\"internal\">\r\n\t\t\t<AdaptivityProvider hasMouse={true}>\r\n\t\t\t\t<AppRoot>\r\n\t\t\t\t\t<SplitLayout\r\n\t\t\t\t\t\tmodal={modal}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<SplitCol\r\n\t\t\t\t\t\t\tanimate={true}\r\n\t\t\t\t\t\t\tspaced={false}\r\n\t\t\t\t\t\t\twidth={\"100%\"}\r\n\t\t\t\t\t\t\tmaxWidth={\"100%\"}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Epic\r\n\t\t\t\t\t\t\t\tactiveStory={activeStory}\r\n\t\t\t\t\t\t\t\ttabbar={hasTabbar &&\r\n\t\t\t\t\t\t\t\t\t<Tabbar>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"events\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"events\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"События\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28NewsfeedOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"map\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"map\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Карта\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28PlaceOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"messages\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"messages\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Сообщения\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28MessageOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"profile\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"profile\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Профиль\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28UserCircleOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t</Tabbar>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<View id=\"events\" activePanel={eventsActivePanel}>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"events\">\r\n\t\t\t\t\t\t\t\t\t\t<Events\r\n\t\t\t\t\t\t\t\t\t\t\tonOpenModal={setActiveModal}\r\n\t\t\t\t\t\t\t\t\t\t\tonOpenEvent={openEventInfoHandler}\r\n\t\t\t\t\t\t\t\t\t\t\tonAddEvent={openAddEvent}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"eventInfo\">\r\n\t\t\t\t\t\t\t\t\t\t<EventInfo onClose={closeEventInfo} event={event}/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"addEvent\">\r\n\t\t\t\t\t\t\t\t\t\t<AddEvent onClose={closeAddEvent}/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View id=\"map\" activePanel={mapActivePanel}>\r\n\t\t\t\t\t\t\t\t\t<Panel id='map'>\r\n\t\t\t\t\t\t\t\t\t\t<MapPanel onOpenEvent={openEventInfoHandler}/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"eventInfo\">\r\n\t\t\t\t\t\t\t\t\t\t<EventInfo onClose={closeEventInfo} event={event} />\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View id=\"messages\" activePanel={messagesActivePanel}>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"messages\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatListContextProvider>\r\n\t\t\t\t\t\t\t\t\t\t\t<Messages\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChatOpen={openChatHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ChatListContextProvider>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"chat\" className=\"chatPanel\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatContextProvider chat={chat}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Chat\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClose={closeChatHanler}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonOpenChatMembersList={openChatMembersHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ChatContextProvider>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"chatMembers\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatMembersList onOpenProfile={openProfileHandler} chat={chat} onClose={closeChatMembersHandler} />\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View id=\"profile\" activePanel=\"profile\">\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"profile\">\r\n\t\t\t\t\t\t\t\t\t\t<Profile hasBack={!hasTabbar} onClose={closeProfileHandler} user={user} />\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t</Epic>\r\n\t\t\t\t\t\t</SplitCol>\r\n\t\t\t\t\t</SplitLayout>\r\n\t\t\t\t</AppRoot>\r\n\t\t\t</AdaptivityProvider>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { Group, PanelHeader, View, Panel, Button, FormLayout, FormItem, Input, FormLayoutGroup, DatePicker, Select, Textarea, Checkbox, Link, ConfigProvider, AdaptivityProvider, AppRoot, SplitLayout, ScreenSpinner, Header, Separator, Snackbar, Avatar, WebviewType, } from \"@vkontakte/vkui\"\r\nimport React from \"react\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport axios from \"axios\";\r\nimport { Icon16Cancel, Icon16ErrorCircleFill } from \"@vkontakte/icons\";\r\n\r\nexport class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nickname: \"\",\r\n            password: \"\",\r\n            popout: null,\r\n            snackbar: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onRemove = this.onRemove.bind(this);\r\n        this.onSignIn = this.onSignIn.bind(this)\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onRemove(e) {\r\n        this.setState({ showPatronym: false });\r\n    }\r\n\r\n    onSignIn() {\r\n        this.setState({popout: <ScreenSpinner state=\"loading\"/>})\r\n        axios\r\n            .get(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Users?$filter=username%20eq%20%27${this.state.nickname}%27`)\r\n            .then(response => {\r\n                if (response.data.value.length > 0) {\r\n                    this.setState({ popout: <ScreenSpinner state=\"done\" /> })\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data.value[0][\"ID\"]))\r\n                    setTimeout(() => this.props.setLoged(true), 1500)\r\n                }\r\n                else {\r\n                    this.setState({ popout: <ScreenSpinner state=\"error\" /> })\r\n                    setTimeout(() => this.setState({ \r\n                        popout: null, \r\n                        snackbar: \r\n                            <Snackbar \r\n                                onClose={() => this.setState({snackbar: null})}\r\n                                layout=\"vertical\"\r\n                                before={\r\n                                    <Avatar\r\n                                        size={24}\r\n                                        style={{ background: \"var(--orange)\" }}\r\n                                    >\r\n                                        <Icon16Cancel fill=\"#fff\" width={14} height={14} />\r\n                                    </Avatar>\r\n                                }\r\n                                action=\"Зарегистрироваться\"\r\n                                onActionClick={() => this.props.onSignUp(true)}\r\n                            >\r\n                                Такого пользователя не существует\r\n                            </Snackbar> \r\n                    }), 1000)\r\n                }\r\n            })\r\n            .catch(() => {\r\n                this.setState({ popout: <ScreenSpinner state=\"error\" /> })\r\n                setTimeout(() => this.setState({ popout: null }), 1500)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { nickname, password } = this.state;\r\n\r\n        return (\r\n            <ConfigProvider webviewType={WebviewType.INTERNAL}>\r\n                <AdaptivityProvider>\r\n                    <AppRoot>\r\n                        <SplitLayout\r\n                            header={<PanelHeader separator={false} />}\r\n                            style={{ justifyContent: \"center\" }}\r\n                            popout={this.state.popout}\r\n                        >\r\n                            <View activePanel=\"new-user\">\r\n                                <Panel id=\"new-user\">\r\n                                    <PanelHeader>Авторизация</PanelHeader>\r\n                                    <Group>\r\n                                        <FormLayout>\r\n                                            <FormItem top=\"Никнейм\">\r\n                                                <Input\r\n                                                    type=\"nickname\"\r\n                                                    name=\"nickname\"\r\n                                                    value={nickname}\r\n                                                    onChange={this.onChange}\r\n                                                    placeholder=\"Введите никнейм\"\r\n                                                />\r\n                                            </FormItem>\r\n                                            <FormItem top=\"Пароль\">\r\n                                                <Input\r\n                                                    type=\"password\"\r\n                                                    name=\"password\"\r\n                                                    value={password}\r\n                                                    onChange={this.onChange}\r\n                                                    placeholder=\"Введите пароль\"\r\n                                                />\r\n                                            </FormItem>\r\n                                            <FormItem>\r\n                                                <Button \r\n                                                    onClick={this.onSignIn} \r\n                                                    size=\"l\" \r\n                                                    stretched \r\n                                                    disabled={!nickname || !password}\r\n                                                >\r\n                                                    Авторизоваться\r\n                                                </Button>\r\n                                            </FormItem>\r\n                                            <Separator/>\r\n                                            <FormItem>\r\n                                                <Header style={{ justifyContent: \"center\" }} mode=\"secondary\">Еще нет аккаунта?</Header>\r\n                                                <Button\r\n                                                    size=\"l\"\r\n                                                    stretched\r\n                                                    onClick={() => this.props.onSignUp(true)}\r\n                                                >\r\n                                                    Зарегистрироваться\r\n                                                </Button>\r\n                                            </FormItem>\r\n                                        </FormLayout>\r\n                                        {this.state.snackbar}\r\n                                    </Group>\r\n                                </Panel>\r\n                            </View>\r\n                        </SplitLayout>\r\n                    </AppRoot>\r\n                </AdaptivityProvider>\r\n            </ConfigProvider>\r\n        );\r\n    }\r\n}","import { Group, PanelHeader, View, Panel, Button, FormLayout, FormItem, Input, FormLayoutGroup, DatePicker, Select, Textarea, Checkbox, Link, ConfigProvider, AdaptivityProvider, AppRoot, SplitLayout, WebviewType, ScreenSpinner, PanelHeaderBack, } from \"@vkontakte/vkui\"\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\n\r\nexport class SignUp extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            bio: \"\",\r\n            date: { day: 1, month: 1, year: 2002 },\r\n            sex: 0,\r\n            phoneNumber: \"\",\r\n            nickname: \"\",\r\n            popout: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSignUp = this.onSignUp.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSignUp() {\r\n        this.setState({ popout: <ScreenSpinner state=\"loading\" /> })\r\n        axios\r\n            .post(\"https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Users\", {\r\n                username: this.state.nickname,\r\n                email: this.state.email,\r\n                phoneNumber: this.state.phoneNumber,\r\n                bio: this.state.bio,\r\n                dateOfBirth: new Date(this.state.date.year, this.state.date.month - 1, this.state.date.day, 3, 0, 0).toISOString().substring(0, 10)\r\n            })\r\n            .then(response => {\r\n                this.setState({ popout: <ScreenSpinner state=\"done\" /> })\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data.ID))\r\n                setTimeout(() => { this.props.setLoged(true), this.props.setWillSignUp(false) } , 1500)\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n                this.setState({ popout: <ScreenSpinner state=\"error\" /> })\r\n                setTimeout(() => this.setState({ popout: null }), 1500)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { email, password1, password2, nickname } = this.state;\r\n\r\n        return (\r\n            <ConfigProvider webviewType={WebviewType.INTERNAL}>\r\n                <AdaptivityProvider hasMouse={true}>\r\n                    <AppRoot>\r\n                        <SplitLayout\r\n                            header={<PanelHeader separator={false} />}\r\n                            style={{ justifyContent: \"center\" }}\r\n                            popout={this.state.popout}\r\n                        >\r\n                            <View activePanel=\"new-user\">\r\n                                <Panel id=\"new-user\">\r\n                                    <PanelHeader \r\n                                        className=\"shadowPanelHeader\" \r\n                                        separator={false}\r\n                                        before={\r\n                                            <PanelHeaderBack onClick={this.props.onClose}/>\r\n                                        }\r\n                                    >Регистрация</PanelHeader>\r\n                                    <Group>\r\n                                        <FormLayout>\r\n                                            <FormItem\r\n                                                top=\"E-mail\"\r\n                                            >\r\n                                                <Input\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    value={email}\r\n                                                    onChange={this.onChange}\r\n                                                />\r\n                                            </FormItem>\r\n\r\n                                            <FormLayoutGroup >\r\n                                                <FormItem top=\"Никнейм\">\r\n                                                    <Input name=\"nickname\" value={this.state.nickname} onChange={this.onChange}/>\r\n                                                </FormItem>\r\n                                            </FormLayoutGroup>\r\n\r\n                                            <FormItem top=\"Пароль\">\r\n                                                <Input\r\n                                                    type=\"password\"\r\n                                                    name=\"password1\"\r\n                                                    value={password1}\r\n                                                    onChange={this.onChange}\r\n                                                    placeholder=\"Введите пароль\"\r\n                                                />\r\n                                            </FormItem>\r\n\r\n                                            <FormItem\r\n                                                status={password1 != \"\" ?\r\n                                                    password2 != \"\" ?\r\n                                                        password1 == password2 ? \"valid\" : \"error\"\r\n                                                        : \"default\"\r\n                                                    : \"default\"}\r\n                                                bottom={\r\n                                                    password1 != \"\" ?\r\n                                                        password2 != \"\" ?\r\n                                                            password1 == password2 ? \"Пароли совпадают!\" : \"Пожалуйста, введите корректный пароль\"\r\n                                                            : \"Пароль может содержать только латинские буквы и цифры\"\r\n                                                        : \"Пароль может содержать только латинские буквы и цифры\"\r\n                                                }>\r\n                                                <Input\r\n                                                    type=\"password\"\r\n                                                    name=\"password2\"\r\n                                                    value={password2}\r\n                                                    onChange={this.onChange}\r\n                                                    placeholder=\"Повторите пароль\"\r\n                                                />\r\n                                            </FormItem>\r\n\r\n                                            <FormLayoutGroup>\r\n                                                <FormItem top=\"Номер телефона\">\r\n                                                    <Input \r\n                                                        value={this.state.phoneNumber} \r\n                                                        type=\"phone\" \r\n                                                        placeholder=\"+375290000000\"\r\n                                                        name=\"phoneNumber\"\r\n                                                        onChange={this.onChange} \r\n                                                    />\r\n                                                </FormItem>\r\n                                            </FormLayoutGroup>\r\n\r\n                                            <FormItem top=\"Дата рождения\">\r\n                                                <DatePicker\r\n                                                    min={{ day: 1, month: 1, year: 1901 }}\r\n                                                    max={{ day: 31, month: 12, year: 2022 }}\r\n                                                    dayPlaceholder=\"ДД\"\r\n                                                    monthPlaceholder=\"MM\"\r\n                                                    yearPlaceholder=\"ГГ\"\r\n                                                    defaultValue={this.state.date}\r\n                                                    onDateChange={value => this.setState({date: value})}\r\n                                                />\r\n                                            </FormItem>\r\n\r\n                                            <FormItem top=\"Пол\">\r\n                                                <Select\r\n                                                    placeholder=\"Выберите пол\"\r\n                                                    defaultValue={0}\r\n                                                    name=\"sex\"\r\n                                                    onChange={this.onChange}\r\n                                                    options={[\r\n                                                        {\r\n                                                            value: 1,\r\n                                                            label: \"Мужской\",\r\n                                                        },\r\n                                                        {\r\n                                                            value: 2,\r\n                                                            label: \"Женский\",\r\n                                                        },\r\n                                                        {\r\n                                                            value: 3,\r\n                                                            label: \"Другой\",\r\n                                                        },\r\n                                                    ]}\r\n                                                />\r\n                                            </FormItem>\r\n                                            <FormItem top=\"О себе\">\r\n                                                <Textarea name=\"bio\" onChange={this.onChange} value={this.state.bio}/>\r\n                                            </FormItem>\r\n                                            <FormItem>\r\n                                                <Button \r\n                                                    size=\"l\" \r\n                                                    stretched\r\n                                                    onClick={this.onSignUp}\r\n                                                    disabled={password1 == \"\" || password2 == \"\" || password1 != password2 || nickname == \"\"}\r\n                                                >\r\n                                                    Зарегистрироваться\r\n                                                </Button>\r\n                                            </FormItem>\r\n                                        </FormLayout>\r\n                                    </Group>\r\n                                </Panel>\r\n                            </View>\r\n                        </SplitLayout>\r\n                    </AppRoot>\r\n                </AdaptivityProvider>\r\n            </ConfigProvider>\r\n        );\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\nimport { SignIn } from \"./panels/signIn\";\r\nimport './styles/index.css'\r\nimport { SignUp } from \"./panels/signUp\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nconst Index = () => {\r\n    const [loged, setLoged] = useState(JSON.parse(localStorage.getItem(\"user\"))) \r\n    const [willSignUp, setWillSignUp] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            {loged && !willSignUp && <App/>}\r\n            {!loged && !willSignUp && <SignIn setLoged={setLoged} onSignUp={setWillSignUp}/>}\r\n            {!loged && willSignUp && <SignUp onClose={() => setWillSignUp(false)} setLoged={setLoged} setWillSignUp={setWillSignUp}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nReactDOM.render(<Index/>, document.getElementById(\"root\"));\r\n\r\n// if (process.env.NODE_ENV === \"development\") {\r\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n// }\r\n"],"sourceRoot":""}