{"version":3,"sources":["context/chatContext.js","panels/events.js","context/chatListContext.js","panels/messages.js","hooks/useShortText.js","hooks/useLocalStorage.js","panels/profile.js","hooks/useTextDate.js","components/textSeparator.js","messageComponents/message.js","messageComponents/messageList.js","panels/chat.js","panels/chatMembersList.js","components/mapEventMarker.js","panels/map.js","panels/eventInfo.js","panels/addEvent.js","App.js","panels/signIn.js","panels/signUp.js","index.js"],"names":["socket","axios","require","Events","onOpenModal","onOpenEvent","onAddEvent","useState","events","setEvents","currentPage","setCurrentPage","totalCount","setTotalCount","limit","fetching","setFetching","endOfPage","setEndOfPage","useEffect","get","then","response","data","value","prev","finally","window","addEventListener","scrollHandler","removeEventListener","length","e","target","documentElement","scrollHeight","scrollTop","innerHeight","className","separator","after","onClick","map","size","mode","level","style","marginBottom","name","descr","header","organizer","username","Date","timeStamp","toLocaleString","day","month","year","hour","minute","ID","Context","createContext","ChatListContextProvider","children","chats","setChats","filter","findIndex","c","id","headers","Provider","Messages","onChatOpen","useContext","before","gradientColor","calcInitialsAvatarColor","title","substring","subtitle","str","indicator","useLocalStorage","initialValue","key","storage","localStorage","getItem","JSON","parse","setValue","setItem","stringify","Profile","user","hasBack","onClose","userInfo","setUserInfo","currentUser","d","removeItem","location","reload","to","Number","phoneNumber","width","bio","sizeY","photos","height","console","log","textLevel","email","dateOfBirth","src","description","useChatContextProvider","ChatContextProvider","chat","messages","setMessages","members","setMembers","needScroll","setNeedScroll","newMessageCount","setNewMessageCount","openSocket","setOpenSocket","a","membersResponse","setTimeout","getMessages","WebSocket","openWebSocketHandler","close","scrollTo","scrollX","document","body","sendMessage","text","message","send","TextSeparator","Message","self","caption","hasAvatar","avatar","MessageList","isPublic","setScrollHeight","windowHeight","setWindowHeight","didResize","setDidResize","bottomRef","useRef","useLayoutEffect","current","scrollIntoView","behavior","scrollY","Math","abs","resizeHandler","marginTop","m","index","arr","Fragment","ref","Chat","onOpenChatMembersList","writeBarText","setWriteBarText","bottomPadding","setBottomPadding","fixedLayoutInnerElRef","status","vertical","paddingBottom","wide","onChange","onHeightChange","el","offsetHeight","updateBottomPadding","placeholder","disabled","ChatMembersList","onOpenProfile","MapEventMarker","event","timer","setTimer","stopPropagation","closest","classList","add","remove","onTouchEnd","clearTimeout","onTouchStart","preventDefault","querySelector","longTouch","MapPanel","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","coords_lat","coords_lng","EventInfo","eventInfo","setEventInfo","padding","address","AddEvent","setName","setDescription","setAddress","position","setPosition","date","setDate","snackbar","setSnackbar","top","enableTime","disablePast","margin","center","color","transform","stretched","organizer_ID","toISOString","post","catch","background","fill","games","label","org","App","scheme","activeStory","setActiveStory","messagesActivePanel","setMessagesActivePanel","eventsActivePanel","setEventsActivePanel","mapActivePanel","setMapActivePanel","setEvent","setChat","hasTabbar","setHasTabbar","setUser","activeModal","setActiveModal","modalHistory","setModalHistory","selectedGames","setSelectedGames","selectedOrg","setSelectedOrg","gamers","setGamers","isMobile","useAdaptivity","viewWidth","ViewWidth","MOBILE","onStoryChange","currentTarget","dataset","story","openEventInfoHandler","eventID","closeEventInfo","modalBack","setActiveModalHandler","modalHistoryTmp","indexOf","splice","push","gamesChipsProps","options","creatable","closeAfterSelect","orgChipsProps","modal","settlingHeight","ChipsSelect","showSelected","renderChip","rest","renderOption","option","otherProps","bottom","min","max","defaultValue","step","dayPlaceholder","monthPlaceholder","yearPlaceholder","appearance","webviewType","hasMouse","animate","spaced","maxWidth","tabbar","selected","activePanel","user_id","SignIn","props","state","nickname","password","popout","bind","onRemove","onSignIn","this","setState","showPatronym","setLoged","layout","action","onActionClick","onSignUp","WebviewType","INTERNAL","justifyContent","type","React","Component","SignUp","password1","password2","sex","setWillSignUp","onDateChange","bridge","Index","loged","willSignUp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0a29b4c1.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\n\r\nconst Context = createContext()\r\n\r\nexport const useChatContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nlet socket\r\n\r\nexport const ChatContextProvider = ({children, chat}) => {\r\n    const [messages, setMessages] = useState([])\r\n    const [members, setMembers] = useState([]);\r\n    const [fetching, setFetching] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [totalCount, setTotalCount] = useState(0)\r\n    const [limit] = useState(30)\r\n    const [endOfPage, setEndOfPage] = useState(false)\r\n    const [needScroll, setNeedScroll] = useState(true)\r\n    const [newMessageCount, setNewMessageCount] = useState(2)\r\n    const [openSocket, setOpenSocket] = useState(false)\r\n\r\n    useEffect(async () => {\r\n        const membersResponse = await axios.get(\"https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Users\")\r\n        setMembers([...membersResponse.data.value]) \r\n        setTimeout(() => {\r\n            getMessages()\r\n        }, 500)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket = new WebSocket(\"ws://192.168.160.194:8087/hello\")\r\n        socket.addEventListener(\"opne\", openWebSocketHandler)\r\n        return () => {\r\n            socket.removeEventListener(\"opne\", openWebSocketHandler)\r\n            socket.close()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fetching && members.length > 0) {\r\n            getMessages()\r\n        }\r\n    }, [fetching])\r\n\r\n    useEffect(() => {\r\n        chat.members = members\r\n    }, [members])\r\n\r\n    const getMessages = () => {\r\n        axios\r\n            .get(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${currentPage}`)\r\n            .then(response => {\r\n                setMessages([...response.data, ...messages])\r\n                setCurrentPage(prev => prev + 1)\r\n                setTotalCount(response.headers[\"x-total-count\"])\r\n            })\r\n            .finally(() => {\r\n                setEndOfPage(false)\r\n                setFetching(false)\r\n                currentPage == 1 && window.scrollTo(window.scrollX, document.body.scrollHeight) \r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (endOfPage && messages.length < totalCount) {\r\n            setFetching(true)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    const scrollHandler = (e) => {\r\n        setNeedScroll(false)\r\n        if (e.target.documentElement.scrollTop < 100) {\r\n            setEndOfPage(true)\r\n        }\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            setNeedScroll(true)\r\n        }\r\n    }\r\n\r\n    const sendMessage = (text) => {\r\n        setNeedScroll(true)\r\n        const message = {\r\n            \"senderId\": 1,\r\n            \"chatId\": 2,\r\n            \"email\": \"test@test.test\",\r\n            \"body\": text\r\n        }\r\n        socket.send(JSON.stringify(message))\r\n        setMessages([...messages, message])\r\n        setNewMessageCount(prev => prev + 1)\r\n    }\r\n\r\n    const openWebSocketHandler = (e) => {\r\n        setOpenSocket(true)\r\n        console.log(e);\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            messages,\r\n            fetching,\r\n            members, \r\n            chat,\r\n            needScroll,\r\n            limit,\r\n            currentPage,\r\n            sendMessage,\r\n            endOfPage,\r\n            newMessageCount,\r\n            openSocket\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}","import { Icon12Add, Icon16InfoOutline, Icon24Add, Icon24Filter, Icon24InfoCircleOutline } from \"@vkontakte/icons\";\r\nimport { Group, PanelHeader, CardGrid, Card, div, Title, Text, Caption, Button, List, Spinner, Paragraph, InfoRow, ButtonGroup, IconButton, PanelHeaderButton } from \"@vkontakte/vkui\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nexport const Events = ({onOpenModal, onOpenEvent, onAddEvent}) => {\r\n\r\n    const [events, setEvents] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [totalCount, setTotalCount] = useState(0)\r\n    const [limit] = useState(15)\r\n    const [fetching, setFetching] = useState(true)\r\n    const [endOfPage, setEndOfPage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (fetching) {\r\n            axios\r\n                .get(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events?$count=true&$orderby=timeStamp&$top=${limit}&$skip=${(currentPage - 1) * limit}&$expand=organizer($select=username)`)\r\n                .then(response => {\r\n                    setEvents([...events, ...response.data.value])\r\n                    setTotalCount(response.data[\"@odata.count\"])\r\n                    setCurrentPage(prev => prev + 1)\r\n                })\r\n                .finally(() => {\r\n                    setEndOfPage(false)\r\n                    setFetching(false)\r\n                })\r\n        }\r\n    }, [fetching])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (endOfPage && events.length < totalCount) {\r\n            setFetching(true)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    const scrollHandler = (e) => {\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            setEndOfPage(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader \r\n                className=\"shadowPanelHeader\" \r\n                separator={false}\r\n                after={\r\n                    <>\r\n                        <PanelHeaderButton onClick={() => onOpenModal(\"filter\")}><Icon24Filter /></PanelHeaderButton>\r\n                        <PanelHeaderButton onClick={onAddEvent}><Icon24Add /></PanelHeaderButton>\r\n                    </>\r\n                }\r\n            >События</PanelHeader>\r\n            <Group>\r\n                <List>\r\n                    {\r\n                        events.map(e => {\r\n                            return (\r\n                                <CardGrid size=\"l\" key={e.ID}>\r\n                                    <Card mode=\"shadow\">\r\n                                        <div className=\"eventCardInner\">\r\n                                            <Title level=\"1\" style={{ marginBottom: 5 }}>\r\n                                                {e.name}\r\n                                            </Title>\r\n                                            <Text className=\"eventDescription\">\r\n                                                {e.descr}\r\n                                            </Text>\r\n                                            <div className=\"eventBottom\">\r\n                                                <InfoRow className=\"eventBottomItem\" header=\"Организатор\">{e.organizer.username}</InfoRow>\r\n                                                <InfoRow className=\"eventBottomItem\" header=\"Дата проведения\">{\r\n                                                    new Date(e.timeStamp).toLocaleString(\"ru-RU\", {\r\n                                                        day: \"numeric\",\r\n                                                        month: \"short\",\r\n                                                        year: \"numeric\",\r\n                                                        hour: \"numeric\",\r\n                                                        minute: \"numeric\"\r\n                                                    })\r\n                                                }</InfoRow>\r\n                                            </div>\r\n                                            <IconButton onClick={() => onOpenEvent(e.ID)} className=\"eventInfoButton\"><Icon24InfoCircleOutline/></IconButton>\r\n                                        </div> \r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        })\r\n                    }\r\n                    {fetching && <Spinner />}\r\n                </List>\r\n            </Group>\r\n        </>\r\n    )\r\n\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nconst axios = require('axios');\r\n\r\nconst Context = createContext()\r\n\r\nexport const useChatListContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nexport const ChatListContextProvider = ({children}) => {\r\n\r\n    const [chats, setChats] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [totalCount, setTotalCount] = useState(0)\r\n    const [limit] = useState(15)\r\n    const [fetching, setFetching] = useState(true)\r\n    const [endOfPage, setEndOfPage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (fetching) {\r\n            axios\r\n                .get(`https://jsonplaceholder.typicode.com/posts?_limit=${limit}&_page=${currentPage}`)\r\n                .then(response => {\r\n                    setChats([...chats, ...response.data.filter(e => chats.findIndex(c => c.id == e.id) < 0)])\r\n                    setCurrentPage(prev => prev + 1)\r\n                    setTotalCount(response.headers[\"x-total-count\"])\r\n                })\r\n                .finally(() => {\r\n                    setEndOfPage(false)\r\n                    setFetching(false)\r\n                })\r\n        }\r\n    }, [fetching])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (endOfPage && chats.length < totalCount) {\r\n            setFetching(true)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    const scrollHandler = (e) => {\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            setEndOfPage(true)\r\n        }\r\n    }\r\n\r\n    const newMessageHandler = (message) => {\r\n        const index = chats.findIndex(e => e.id == message.id)\r\n        if (index > -1) {\r\n            const temp = [...chats]\r\n            temp.splice(index, 1)\r\n            setChats([message, ...temp])\r\n        } else {\r\n            setChats([message, ...chats])\r\n        };\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            chats,\r\n            fetching\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}","import { calcInitialsAvatarColor, Counter, Group, InitialsAvatar, List, PanelHeader, RichCell, SimpleCell, Spinner, Text, Title } from \"@vkontakte/vkui\"\r\nimport { useEffect } from \"react\"\r\nimport { useChatListContextProvider } from \"../context/chatListContext\"\r\nimport { useShortText } from \"../hooks/useShortText\"\r\n\r\nexport const Messages = ({onChatOpen}) => {\r\n\r\n    const { chats, fetching } = useChatListContextProvider()\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader className=\"shadowPanelHeader\" separator={false}>Сообщения</PanelHeader>\r\n            <Group>\r\n                <List>\r\n                    {\r\n                        chats.map(e => {\r\n                            return (\r\n                                <SimpleCell\r\n                                    before={\r\n                                        <InitialsAvatar gradientColor={calcInitialsAvatarColor(e.id)}>\r\n                                            {e.title.substring(0, 2)}\r\n                                        </InitialsAvatar>}\r\n                                    key={e.id}\r\n                                    onClick={() => onChatOpen(e)}\r\n                                    subtitle={\r\n                                        <>{useShortText(\"Алексей: стикер cnbrth cnbrth cnbrth cnbrt\", 25)} &#183; 2h</>\r\n                                    }\r\n                                    indicator={<Counter mode=\"primary\">10</Counter>}\r\n                                >\r\n                                    {e.title.substring(0, 10)}\r\n                                </SimpleCell>\r\n                            )\r\n                        })\r\n                    }\r\n                    {fetching && <Spinner />}\r\n                </List>\r\n            </Group>\r\n        </>\r\n    )\r\n}","export const useShortText = (str, length) => {\r\n    return str.length > length ? str.substring(0, length) + \"...\" : str\r\n}","import { useEffect, useState } from \"react\"\r\n\r\nexport const useLocalStorage = (initialValue, key) => {\r\n    const getValue = () => {\r\n        const storage = localStorage.getItem(key)\r\n        if (storage) {\r\n            return JSON.parse(storage)\r\n        }\r\n        return initialValue\r\n    }\r\n\r\n    const [value, setValue] = useState(getValue)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }, [value])\r\n\r\n    return [value, setValue]\r\n}","import {\r\n    Icon24CactusOutline,\r\n    Icon24CalendarOutline,\r\n    Icon24MailOutline,\r\n    Icon24MessageOutline,\r\n    Icon24UserAddOutline,\r\n    Icon28DoorArrowLeftOutline} from \"@vkontakte/icons\"\r\nimport {Group, PanelHeader, Button, Gradient, Text, SimpleCell, UsersStack, MiniInfoCell, Spinner, calcInitialsAvatarColor, InitialsAvatar, PanelHeaderBack, PanelHeaderButton} from \"@vkontakte/vkui\"\r\nimport {Header, Avatar, Title, Cell, List} from \"@vkontakte/vkui\";\r\nimport {ButtonGroup} from \"@vkontakte/vkui\";\r\nimport { Icon24ChevronCompactRight } from '@vkontakte/icons';\r\nimport { Icon24PhoneOutline } from '@vkontakte/icons';\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useTextDate } from \"../hooks/useTextDate\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\n\r\nexport const Profile = ({user, hasBack, onClose}) => {\r\n    const [userInfo, setUserInfo] = useState(null)\r\n    const [currentUser] = useLocalStorage(null, \"user\")\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Users/${user}`)\r\n            .then(response => {\r\n                setUserInfo(response.data)\r\n            })\r\n    }, [])\r\n\r\n    const exit = () => {\r\n        localStorage.removeItem(\"user\")\r\n        location.reload()\r\n    }\r\n\r\n    return (\r\n        <>\r\n                <PanelHeader \r\n                    className=\"shadowPanelHeader\" \r\n                    separator={false}\r\n                    before={hasBack && <PanelHeaderBack onClick={onClose}/>}\r\n                    after={userInfo && currentUser == userInfo.ID && <PanelHeaderButton onClick={exit}><Icon28DoorArrowLeftOutline/></PanelHeaderButton>}\r\n                >\r\n                    Профиль\r\n                </PanelHeader>\r\n            {!userInfo && <Group><Spinner /></Group>}\r\n            {userInfo && \r\n                <>\r\n                    <Group>\r\n                        <Gradient\r\n                            mode=\"tint\"\r\n                            to=\"top\"\r\n                            className=\"profileBIO\"\r\n                        >\r\n                            <InitialsAvatar size={96} gradientColor={calcInitialsAvatarColor(Number(userInfo.phoneNumber % 10))}>\r\n                                {userInfo.username.substring(0, 2)}\r\n                            </InitialsAvatar>\r\n                            <Title level=\"2\" width=\"2\" className=\"profileTitle\">\r\n                                {userInfo.username}\r\n                            </Title>\r\n                            <Text className=\"profileSubTitle\">\r\n                                {userInfo.bio}\r\n                            </Text>\r\n                            {currentUser != userInfo.ID && \r\n                                <ButtonGroup>\r\n                                    <Button size=\"m\" sizeY=\"compact\"><Icon24UserAddOutline /></Button>\r\n                                    <Button\r\n                                        size=\"m\"\r\n                                        sizeY=\"compact\"\r\n                                        before={<Icon24MessageOutline />}\r\n                                    >\r\n                                        Написать\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            }\r\n                        </Gradient>\r\n                        <Group header={<Header mode=\"secondary\">Друзья</Header>}>\r\n                            <SimpleCell className=\"profileFriends\"\r\n                                before={\r\n                                    <UsersStack\r\n                                        size=\"m\"\r\n                                        photos={[\r\n                                            \"https://www.iphones.ru/wp-content/uploads/2021/09/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA-%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0-2021-09-07-%D0%B2-19.48.05.jpg\",\r\n                                            \"https://www.ixbt.com/img/n1/news/2018/7/4/341109.png\",\r\n                                            \"https://cdni.rt.com/russian/images/2022.09/article/63231abe02e8bd743524f678.png\"\r\n                                        ]}\r\n                                    >\r\n                                    </UsersStack>\r\n                                }\r\n                                after={\r\n                                    <Icon24ChevronCompactRight width={30} height={30} />\r\n                                }\r\n                            >\r\n                                1377 друзей\r\n                            </SimpleCell>\r\n                        </Group>\r\n                    </Group>\r\n                    <Group header={<Header mode=\"secondary\">Информация</Header>}>\r\n                    {console.log(userInfo.phoneNumber)}\r\n                        {userInfo.phoneNumber != \"\" && <MiniInfoCell before={<Icon24PhoneOutline />} textLevel=\"primary\">\r\n                            {userInfo.phoneNumber}\r\n                        </MiniInfoCell>}\r\n                        {userInfo.email != \"\" && <MiniInfoCell before={<Icon24MailOutline />} textLevel=\"primary\">\r\n                            {userInfo.email}\r\n                        </MiniInfoCell>}\r\n                        <MiniInfoCell before={<Icon24CalendarOutline />} textLevel=\"primary\">\r\n                            {useTextDate(userInfo.dateOfBirth)}\r\n                        </MiniInfoCell>\r\n                    </Group>\r\n                    <Group header={<Header mode=\"secondary\">Любимые игры</Header>}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Avatar src={\"https://s2-goods.ozstatic.by/2000/42/893/10/10893042_0.jpg\"} />}\r\n                                description=\"Carcassonne\"\r\n                            >\r\n                                Каркассон\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Avatar\r\n                                    src={\"https://avatars.mds.yandex.net/get-mpic/6382710/img_id8546741754982085445.jpeg/orig\"} />}\r\n                                description=\"Monopoly\"\r\n                            >\r\n                                Монополия\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Avatar\r\n                                    src={\"https://igromaster.by/upload/iblock/972/972ee18fcf89183f221bab04bcff0668.jpg\"} />}\r\n                                description=\"Uno\"\r\n                            >\r\n                                У́но\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}","export const useTextDate = (d) => {\r\n    const date = new Date(d)\r\n    return date.toLocaleString(\"ru-RU\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\"\r\n    })\r\n}","import { Header } from \"@vkontakte/vkui\";\r\n\r\nexport const TextSeparator = ({text}) => {\r\n    return ( \r\n        <div className=\"textSeparator\">\r\n            <div className=\"line\"></div>\r\n            <div className=\"text\">\r\n                {text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n ","import { Avatar, calcInitialsAvatarColor, InitialsAvatar } from \"@vkontakte/vkui\"\r\n\r\nexport const Message = ({\r\n    self = false, \r\n    text,\r\n    caption = \"\",\r\n    hasAvatar = false,\r\n    avatar,\r\n    title,\r\n    id\r\n\r\n}) => {\r\n    return (\r\n        <div className={`messageBox ${self ? \"self\" : \"\"}`}>\r\n            {hasAvatar && avatar && <Avatar size={25}/>}\r\n            {hasAvatar && !avatar && \r\n                <InitialsAvatar size={25} gradientColor={calcInitialsAvatarColor(id)}>\r\n                    {title.substring(0, 2)}\r\n                </InitialsAvatar>\r\n            }\r\n            <div className={`messageTextBox ${self ? \"self\" : \"\"}`}>\r\n                {!self && <div className=\"messageTitle\">{title}</div>}\r\n                <div>{text}</div>\r\n                {caption && <div className=\"messageCaption\">{caption}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Separator, Spinner } from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\"\r\nimport { TextSeparator } from \"../components/textSeparator\";\r\nimport { useChatContextProvider } from \"../context/chatContext\";\r\nimport { Message } from \"./message\"\r\n\r\nexport const MessageList = ({ isPublic = true}) => {\r\n    const [scrollHeight, setScrollHeight] = useState(0)\r\n    const { messages, fetching, needScroll, newMessageCount, endOfPage } = useChatContextProvider()\r\n    const [windowHeight, setWindowHeight] = useState(window.innerHeight)\r\n    const [didResize, setDidResize] = useState(false)\r\n\r\n    const bottomRef = useRef(null)\r\n\r\n    useLayoutEffect(() => {\r\n        if (endOfPage) {\r\n            window.scrollTo(\r\n                window.scrollX,\r\n                document.body.scrollTop + document.documentElement.scrollHeight - scrollHeight\r\n            )\r\n        }\r\n        if(needScroll) {\r\n            bottomRef.current.scrollIntoView({ behavior: \"smooth\"})\r\n        }\r\n    }, [messages]);\r\n\r\n    useLayoutEffect(() => {\r\n        if (endOfPage) {\r\n            setScrollHeight(document.documentElement.scrollHeight)\r\n        }\r\n    }, [endOfPage])\r\n\r\n    useEffect(() => {\r\n        if (didResize) {\r\n            if (windowHeight - window.innerHeight > 0) {\r\n                window.scrollTo(window.scrollX, window.scrollY + windowHeight - window.innerHeight)\r\n            } \r\n            if (windowHeight - window.innerHeight < 0) {\r\n                if (document.documentElement.scrollHeight - (document.documentElement.scrollTop + window.innerHeight) > Math.abs(windowHeight - window.innerHeight)) {\r\n                    window.scrollTo(window.scrollX, window.scrollY + windowHeight - window.innerHeight)\r\n                }\r\n            }\r\n            \r\n            setWindowHeight(window.innerHeight)\r\n            setDidResize(false)\r\n        }\r\n    }, [didResize])\r\n\r\n    const resizeHandler = () => {\r\n        setDidResize(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", resizeHandler)\r\n        return () => window.removeEventListener(\"resize\", resizeHandler)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {fetching && <Spinner style={{marginTop: 10}} />} \r\n           \r\n            <div className=\"messageList\">\r\n                {messages.map(((m, index, arr) => {\r\n                    return ( \r\n                        <React.Fragment key={index}>\r\n                            {arr.length - index == newMessageCount && <TextSeparator text=\"Новые сообщения\" />}\r\n                            <Message\r\n                                text={m.body}\r\n                                caption={m.id}\r\n                                hasAvatar={m.id % 2 == 1 && isPublic}\r\n                                self={m.id % 2 == 0}\r\n                                title={isPublic && m.email}\r\n                                avatar={m.avatar}\r\n                                id={m.id}\r\n                            />\r\n                            {/* {arr[index + 1] ? m.id - arr[index + 1].id == 59 && <TextSeparator text={`${m.id - 59}-${m.id - 60 + 30}`} /> : <></>} */}\r\n                        </React.Fragment>\r\n                    )\r\n                }))}\r\n            </div>\r\n            <div ref={bottomRef}></div>\r\n        </>\r\n    )\r\n}","import { calcInitialsAvatarColor, Card, Cell, FixedLayout, Group, InitialsAvatar, PanelHeader, PanelHeaderBack, PanelHeaderButton, PanelHeaderContent, Separator, WriteBar, WriteBarIcon } from \"@vkontakte/vkui\"\r\nimport { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { useChatContextProvider } from \"../context/chatContext\";\r\nimport { MessageList } from \"../messageComponents/messageList\";\r\nimport { Icon28Users3Outline } from '@vkontakte/icons';\r\n\r\nexport const Chat = ({\r\n    onClose,\r\n    onOpenChatMembersList\r\n}) => {\r\n    const [writeBarText, setWriteBarText] = useState(\"\")\r\n    const [bottomPadding, setBottomPadding] = useState(0);\r\n\r\n    const fixedLayoutInnerElRef = useRef();\r\n\r\n    const { chat, sendMessage, openSocket, members } = useChatContextProvider()\r\n\r\n    const updateBottomPadding = () => {\r\n        const el = fixedLayoutInnerElRef.current;\r\n        if (el) {\r\n            const height = el.offsetHeight;\r\n            if (height !== bottomPadding) {\r\n                setBottomPadding(height);\r\n            }\r\n        }\r\n    };\r\n\r\n    const sendMessageHandler = () => {\r\n        sendMessage(writeBarText)\r\n        setWriteBarText(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader\r\n                className=\"shadowPanelHeader\" \r\n                separator={false} \r\n                before={\r\n                    <PanelHeaderBack \r\n                        onClick={onClose}\r\n                    />}\r\n                after={members.length > 0 &&\r\n                    <PanelHeaderButton onClick={onOpenChatMembersList}>\r\n                        <Icon28Users3Outline/>\r\n                    </PanelHeaderButton>\r\n                }\r\n            >\r\n                <PanelHeaderContent\r\n                    before={\r\n                        <InitialsAvatar size={36} gradientColor={calcInitialsAvatarColor(chat.id)}>\r\n                            {chat.title.substring(0, 2)}\r\n                        </InitialsAvatar>\r\n                    }\r\n                    status={`${members.length} участников`}\r\n                >\r\n                    {chat.title.substring(0, 10)}\r\n                </PanelHeaderContent>\r\n            </PanelHeader>\r\n            <MessageList/>\r\n            <FixedLayout\r\n                vertical=\"bottom\"\r\n                style={{paddingBottom: 0}}\r\n            >\r\n                <div ref={fixedLayoutInnerElRef}>\r\n                    <Separator wide />\r\n                    <WriteBar\r\n                        value={writeBarText}\r\n                        onChange={(e) => setWriteBarText(e.target.value)}\r\n                        onHeightChange={() => updateBottomPadding()}\r\n                        placeholder=\"Сообщение\"\r\n                        after={\r\n                            <Fragment>\r\n                                <WriteBarIcon \r\n                                    mode=\"send\" \r\n                                    disabled={writeBarText.length === 0 || !openSocket}\r\n                                    onClick={() => sendMessageHandler()}\r\n                                />\r\n                            </Fragment>\r\n                        }\r\n                    />\r\n                </div>\r\n            </FixedLayout>\r\n        </>\r\n    )\r\n}","import { Avatar, calcInitialsAvatarColor, Cell, Group, Header, InitialsAvatar, List, PanelHeader, PanelHeaderBack, Separator, SimpleCell, Title } from \"@vkontakte/vkui\";\r\n\r\nexport const ChatMembersList = ({ onClose, chat, onOpenProfile }) => {\r\n    return ( \r\n        <>\r\n            <PanelHeader \r\n                className=\"shadowPanelHeader\" \r\n                separator={false}\r\n                before={\r\n                    <PanelHeaderBack\r\n                        onClick={onClose}\r\n                    />\r\n                }\r\n            >\r\n                Участники\r\n            </PanelHeader>\r\n            <Group className=\"d-f-center\">\r\n                <InitialsAvatar size={100} gradientColor={calcInitialsAvatarColor(chat.id)}>\r\n                    {chat.title.substring(0, 2)}\r\n                </InitialsAvatar>\r\n                <Title>{chat.title.substring(0, 10)}</Title>\r\n            </Group>\r\n            <Group>\r\n                <List>\r\n                    {chat.members.map(e =>\r\n                        <SimpleCell\r\n                            before={\r\n                                <InitialsAvatar size={48} gradientColor={calcInitialsAvatarColor(Number(e.phoneNumber % 10))}>\r\n                                    {e.username.substring(0, 2)}\r\n                                </InitialsAvatar>\r\n                            }\r\n                            key={e.ID}\r\n                            subtitle={e.bio}\r\n                            onClick={() => onOpenProfile(e.ID)}\r\n                        >\r\n                            {e.username}\r\n                        </SimpleCell>\r\n                    )}\r\n                </List>\r\n            </Group>\r\n        </>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Icon24Add } from '@vkontakte/icons';\r\n\r\nexport const MapEventMarker = ({ event, onOpenEvent }) => {\r\n\r\n    const [timer, setTimer] = useState(null)\r\n\r\n    const onClickHandler = (e) => {\r\n        e.stopPropagation()\r\n        e.target.closest(\".mapMarkerInner\").classList.add(\"clicked\")\r\n        setTimeout(() => {\r\n            onOpenEvent && onOpenEvent(event.ID)\r\n            e.target.closest(\".mapMarkerInner\").classList.remove(\"clicked\")\r\n        }, 100)\r\n    }\r\n\r\n    const longTouch = (e) => {\r\n        e.target.closest(\".mapMarkerInner\").querySelector(\".mapMarkerMore\").classList.add(\"touch\")\r\n        e.target.closest(\".mapMarkerInner\").querySelector(\".close\").classList.add(\"active\")\r\n    }\r\n\r\n    const onTouchStartHandler = (e) => {\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n        setTimer(setTimeout(() => longTouch(e), 700))\r\n    }\r\n\r\n    const onTouchEndHandler = (e) => {\r\n        clearTimeout(timer)\r\n    }\r\n\r\n    const close = (e) => {\r\n        e.stopPropagation()\r\n        e.target.closest(\".mapMarkerInner\").querySelector(\".mapMarkerMore\").classList.remove(\"touch\")\r\n        e.target.closest(\".mapMarkerInner\").querySelector(\".close\").classList.remove(\"active\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"mapMarkerWrapper\">\r\n            <div onClick={onClickHandler} onTouchEnd={onTouchEndHandler} onTouchStart={onTouchStartHandler} className=\"mapMarkerInner\">\r\n                <div className=\"mapMarkerInfo\">\r\n                    <div className=\"mapMarkerContent\">\r\n                        <div className=\"mapMarkerTitle\">{event.name}</div>\r\n                        <div className=\"mapMarkerText\">{new Date(event.timeStamp).toLocaleString(\"ru-RU\", {\r\n                            day: \"numeric\",\r\n                            month: \"numeric\",\r\n                            year: \"2-digit\",\r\n                            hour: \"numeric\",\r\n                            minute: \"numeric\"\r\n                        })}</div>\r\n                        <div className=\"mapMarkerMore\">{event.descr}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mapBottom\">\r\n\r\n                </div>\r\n                <div className=\"close\" onClick={close}>\r\n                    <Icon24Add width={15} height={15}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Group, PanelHeader, Spinner } from \"@vkontakte/vkui\"\r\nimport axios from \"axios\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { MapEventMarker } from \"../components/mapEventMarker\";\r\n\r\nexport const MapPanel = ({onOpenEvent}) => {\r\n\r\n    const [events, setEvents] = useState(null)\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events\")\r\n            .then(response => {\r\n                setEvents(response.data.value)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader separator={false} className=\"shadowPanelHeader\">\r\n                Карта событий\r\n            </PanelHeader>\r\n            <Group className=\"mapGroup\">\r\n                {!events && <Spinner/>}\r\n                {events && <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyBY3XkvjucuJx55bzFZMTJQnYH5JnWK8SQ\" }}\r\n                    defaultCenter={{\r\n                        lat: 53.90478949220637,\r\n                        lng: 27.54735640149058\r\n                    }}\r\n                    defaultZoom={11}\r\n                >\r\n                    {events.map(e => <MapEventMarker onOpenEvent={onOpenEvent} event={e} lat={e.coords_lat} lng={e.coords_lng} />)}  \r\n                </GoogleMapReact>}\r\n            </Group>\r\n        </>\r\n    )\r\n}","import { Button, ButtonGroup, Group, MiniInfoCell, PanelHeader, PanelHeaderBack, Spinner, Text, Title } from \"@vkontakte/vkui\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { MapEventMarker } from \"../components/mapEventMarker\";\r\nimport { Icon16Crown, Icon20Add, Icon20CalendarOutline, Icon20CrownCircleFillVkDating, Icon20MessageOutline, Icon20PlaceOutline, Icon20Users3Outline } from \"@vkontakte/icons\";\r\n\r\nexport const EventInfo = ({event, onClose}) => {\r\n    const [eventInfo, setEventInfo] = useState(null)\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events/${event}?$expand=members,organizer($select=username)`)\r\n            .then(response => {\r\n                setEventInfo(response.data)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader\r\n                separator={false}\r\n                className=\"shadowPanelHeader\"\r\n                before={\r\n                    <PanelHeaderBack onClick={onClose}/>\r\n                }\r\n            >Информация о событии</PanelHeader>\r\n            <Group>\r\n                {eventInfo && <>\r\n                    <Group style={{padding: \"0px 10px\"}}>\r\n                        <Title level=\"1\" style={{ marginBottom: 5 }}>\r\n                            {eventInfo.name}\r\n                        </Title>\r\n                        <Text className=\"eventDescription\">\r\n                            {eventInfo.descr}\r\n                        </Text>\r\n                    </Group>\r\n                    <Group style={{ padding: \"0px 10px\" }}>\r\n                        <MiniInfoCell\r\n                            before={<Icon16Crown width={20} height={20} />}\r\n                        >\r\n                            {eventInfo.organizer.username}\r\n                        </MiniInfoCell>\r\n                        <MiniInfoCell\r\n                            before={<Icon20CalendarOutline/>}\r\n                        >\r\n                            {\r\n                                new Date(eventInfo.timeStamp).toLocaleString(\"ru-RU\", {\r\n                                    day: \"numeric\",\r\n                                    month: \"long\",\r\n                                    year: \"numeric\",\r\n                                    hour: \"numeric\",\r\n                                    minute: \"numeric\"\r\n                                })\r\n                            }\r\n                        </MiniInfoCell>\r\n                        <MiniInfoCell\r\n                            before={<Icon20Users3Outline />}\r\n                        >\r\n                            {eventInfo.members.length} участников\r\n                        </MiniInfoCell>\r\n                        <MiniInfoCell\r\n                            before={<Icon20PlaceOutline />}\r\n                        >\r\n                            {eventInfo.address}\r\n                        </MiniInfoCell>\r\n                    </Group>\r\n                    <Group style={{ padding: \"0px 10px\" }}>\r\n                        <ButtonGroup className=\"eventInfoButtons\">\r\n                            <Button before={<Icon20Add/>} mode=\"outline\">Присоединиться</Button>\r\n                            <Button before={<Icon20MessageOutline/>} mode=\"outline\">Чат</Button>\r\n                        </ButtonGroup>\r\n                    </Group>\r\n                    <Group className=\"eventInfoMap\" style={{ padding: \"0px 10px\" }}>\r\n                        <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: \"AIzaSyBY3XkvjucuJx55bzFZMTJQnYH5JnWK8SQ\" }}\r\n                            defaultCenter={{\r\n                                lat: eventInfo.coords_lat,\r\n                                lng: eventInfo.coords_lng\r\n                            }}\r\n                            defaultZoom={17}\r\n                        >\r\n                            <MapEventMarker event={eventInfo} lat={eventInfo.coords_lat} lng={eventInfo.coords_lng} />\r\n                        </GoogleMapReact>\r\n                    </Group>\r\n                </>}\r\n                {!eventInfo && <Spinner/>}\r\n            </Group>\r\n        </>\r\n    )\r\n}","import { Avatar, Button, Calendar, DatePicker, FormItem, FormLayout, Input, PanelHeader, PanelHeaderBack, Snackbar, Textarea } from \"@vkontakte/vkui\"\r\nimport { useState } from \"react\"\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Icon16Cancel, Icon28Place } from \"@vkontakte/icons\";\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\nimport axios from \"axios\";\r\n\r\nexport const AddEvent = ({onClose}) => {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [position, setPosition] = useState(null)\r\n    const [date, setDate] = useState(new Date);\r\n    const [user] = useLocalStorage(null, \"user\")\r\n    const [snackbar, setSnackbar] = useState(null)\r\n\r\n    const createEvent = () => {\r\n        const body = {\r\n            organizer_ID: user,\r\n            name: name,\r\n            descr: description,\r\n            coords_lat: position.lat,\r\n            coords_lng: position.lng,\r\n            address: address,\r\n            timeStamp: date.toISOString()\r\n        }\r\n        axios\r\n            .post(\"https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Events\", body)\r\n            .then(response => {\r\n                onClose()\r\n            })\r\n            .catch((e) => {\r\n                setSnackbar(\r\n                    <Snackbar\r\n                        onClose={() => setSnackbar(null)}\r\n                        before={\r\n                            <Avatar\r\n                                size={24}\r\n                                style={{ background: \"var(--orange)\" }}\r\n                            >\r\n                                <Icon16Cancel fill=\"#fff\" width={14} height={14} />\r\n                            </Avatar>\r\n                        }\r\n                    >\r\n                        Не удалось создать событие\r\n                    </Snackbar>\r\n                )\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader\r\n                before={<PanelHeaderBack onClick={onClose}/>}\r\n                separator={false}\r\n                className=\"shadowPanelHeader\"\r\n            >\r\n                Создание события\r\n            </PanelHeader>\r\n            <FormLayout>\r\n                <FormItem top=\"Название\">\r\n                    <Input\r\n                        placeholder=\"Название события\"\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem top=\"Описание\">\r\n                    <Textarea\r\n                        placeholder=\"Описание события\"\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem top=\"Дата и время\">\r\n                    <Calendar\r\n                        size=\"m\"\r\n                        enableTime={true}\r\n                        disablePast={true}\r\n                        value={date}\r\n                        onChange={setDate}\r\n                        style={{margin: \"auto\"}}\r\n                    />\r\n                </FormItem>\r\n                <FormItem top=\"Адрес\">\r\n                    <Input\r\n                        placeholder=\"Адрес события\"\r\n                        value={address}\r\n                        onChange={e => setAddress(e.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem top=\"Укажите событие на карте\" style={{height: 300, marginBottom: 10}}>\r\n                    <GoogleMapReact\r\n                        bootstrapURLKeys={{ key: \"AIzaSyBY3XkvjucuJx55bzFZMTJQnYH5JnWK8SQ\" }}\r\n                        defaultCenter={{\r\n                            lat: 53.90478949220637,\r\n                            lng: 27.54735640149058\r\n                        }}\r\n                        center={position}\r\n                        defaultZoom={10}\r\n                        onClick={({lat, lng}) => setPosition({lat, lng})}\r\n                    >\r\n                        {position && <Icon28Place \r\n                            lat={position.lat} \r\n                            lng={position.lng} \r\n                            style={{ color: \"var(--orange)\", transform: \"translate(-50%, -100%)\"}}\r\n                            width={40}\r\n                            height={40}\r\n                        />}\r\n                    </GoogleMapReact>\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button\r\n                        disabled={!name || !description || !address || !position}\r\n                        size=\"m\"\r\n                        stretched\r\n                        onClick={createEvent}\r\n                    >Добавить</Button>\r\n                </FormItem>\r\n            </FormLayout>  \r\n            {snackbar}\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { View, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol, PanelHeader, Epic, Tabbar, TabbarItem, Panel, WebviewType, ModalRoot, ModalPage, ModalPageHeader, PanelHeaderClose, ViewWidth, useAdaptivity, PanelHeaderSubmit, FormLayout, FormItem, IconButton, ChipsInput, Chip, Avatar, CustomSelectOption, InitialsAvatar, calcInitialsAvatarColor, RangeSlider, DatePicker } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { Icon16Clear, Icon28MessageOutline, Icon28NewsfeedOutline, Icon28PlaceOutline, Icon28UserCircleOutline } from '@vkontakte/icons';\r\nimport { Events } from './panels/events';\r\nimport { Messages } from './panels/messages';\r\nimport { Profile } from './panels/profile';\r\nimport { Chat } from './panels/chat';\r\nimport { ChatListContextProvider } from './context/chatListContext';\r\nimport { ChatContextProvider } from './context/chatContext';\r\nimport { ChatMembersList } from './panels/chatMembersList';\r\nimport { useLocalStorage } from './hooks/useLocalStorage';\r\nimport { MapPanel } from './panels/map';\r\nimport { ChipsSelect } from \"@vkontakte/vkui/dist/unstable\";\r\nimport \"@vkontakte/vkui/dist/unstable.css\";\r\nimport { EventInfo } from './panels/eventInfo';\r\nimport { AddEvent } from './panels/addEvent';\r\n\r\nconst games = [\r\n\t{ value: 1, label: \"UNO\" },\r\n\t{ value: 2, label: \"Монополия\" },\r\n\t{ value: 3, label: \"Мир Танков\" },\r\n\t{ value: 4, label: \"Warhammer 40.000\" },\r\n\t{ value: 5, label: \"Шахматы\" },\r\n\t{ value: 6, label: \"Нарды\" },\r\n\t{ value: 7, label: \"Голодные игры\" },\r\n\t{ value: 8, label: \"Жосткая настолка для детей\" },\r\n];\r\n\r\nconst org = [\r\n\t{ value: 1, label: \"Oriery\" },\r\n\t{ value: 2, label: \"TheEvaElfie\" },\r\n\t{ value: 3, label: \"Wylsacom\" },\r\n\t{ value: 4, label: \"Китя Вислый\" },\r\n\t{ value: 5, label: \"KorbenDaIlas\" },\r\n\t{ value: 6, label: \"Стас Ай Как Просто\" },\r\n\t{ value: 7, label: \"Джо Байден\" },\r\n\t{ value: 8, label: \"iPhone 14 Pro Max\" },\r\n];\r\n\r\nconst App = () => {\r\n\tconst [scheme, setScheme] = useState('light')\r\n\tconst [activeStory, setActiveStory] = useState(\"events\")\r\n\tconst [messagesActivePanel, setMessagesActivePanel] = useState(\"messages\")\r\n\tconst [eventsActivePanel, setEventsActivePanel] = useState(\"events\")\r\n\tconst [mapActivePanel, setMapActivePanel] = useState(\"map\")\r\n\tconst [event, setEvent] = useState(null)\r\n\tconst [chat, setChat] = useState(null)\r\n\tconst [hasTabbar, setHasTabbar] = useState(true)\r\n\tconst [currentUser] = useLocalStorage(null, \"user\")\r\n\tconst [user, setUser] = useState(currentUser)\r\n\tconst [activeModal, setActiveModal] = useState(null)\r\n\tconst [modalHistory, setModalHistory] = useState([])\r\n\tconst [selectedGames, setSelectedGames] = useState([]);\r\n\tconst [selectedOrg, setSelectedOrg] = useState([])\r\n\tconst [gamers, setGamers] = useState([2, 10])\r\n\r\n\tconst { viewWidth } = useAdaptivity();\r\n\tconst isMobile = viewWidth <= ViewWidth.MOBILE;\r\n\r\n\tconst onStoryChange = (e) => {\r\n\t\tif (e.currentTarget.dataset.story == \"map\") {\r\n\t\t\tsetMapActivePanel(\"map\")\r\n\t\t}\r\n\t\tif (e.currentTarget.dataset.story == \"events\") {\r\n\t\t\tsetEventsActivePanel(\"events\")\r\n\t\t}\r\n\t\tsetActiveStory(e.currentTarget.dataset.story)\r\n\t}\r\n\r\n\tconst openChatHandler = (chat) => {\r\n\t\tsetChat(chat)\r\n\t\tsetMessagesActivePanel(\"chat\")\r\n\t\tsetHasTabbar(false)\r\n\t}\r\n\r\n\tconst openChatMembersHandler = (chat) => {\r\n\t\tsetMessagesActivePanel(\"chatMembers\")\r\n\t}\r\n\r\n\tconst closeChatHanler = () => {\r\n\t\tsetMessagesActivePanel(\"messages\")\r\n\t\tsetHasTabbar(true)\r\n\t}\r\n\r\n\tconst closeChatMembersHandler = () => {\r\n\t\tsetMessagesActivePanel(\"chat\")\r\n\t}\r\n\r\n\tconst openProfileHandler = (user_id) => {\r\n\t\tsetUser(user_id)\r\n\t\tsetActiveStory(\"profile\")\r\n\t}\r\n\r\n\tconst closeProfileHandler = () => {\r\n\t\tsetUser(currentUser)\r\n\t\tsetActiveStory(\"messages\")\r\n\t}\r\n\r\n\tconst openEventInfoHandler = (eventID) => {\r\n\t\tsetEvent(eventID)\r\n\t\tif (activeStory == \"map\") {\r\n\t\t\tsetMapActivePanel(\"eventInfo\")\r\n\t\t} else {\r\n\t\t\tsetEventsActivePanel(\"eventInfo\")\r\n\t\t}\r\n\t}\r\n\r\n\tconst closeEventInfo = () => {\r\n\t\tif (activeStory == \"map\") {\r\n\t\t\tsetMapActivePanel(\"map\")\r\n\t\t} else {\r\n\t\t\tsetEventsActivePanel(\"events\")\r\n\t\t}\r\n\t}\r\n\r\n\tconst openAddEvent = () => {\r\n\t\tsetEventsActivePanel(\"addEvent\")\r\n\t}\r\n\r\n\tconst closeAddEvent = () => {\r\n\t\tsetEventsActivePanel(\"events\")\r\n\t}\r\n\r\n\tconst modalBack = () => {\r\n\t\tsetActiveModalHandler(\r\n\t\t\tmodalHistory[modalHistory.length - 2]\r\n\t\t);\r\n\t};\r\n\r\n\tconst setActiveModalHandler = (activeModal) => {\r\n\t\tactiveModal = activeModal || null;\r\n\t\tlet modalHistoryTmp = modalHistory\r\n\t\t\t? [...modalHistory]\r\n\t\t\t: [];\r\n\r\n\t\tif (activeModal === null) {\r\n\t\t\tmodalHistoryTmp = [];\r\n\t\t} else if (modalHistoryTmp.indexOf(activeModal) !== -1) {\r\n\t\t\tmodalHistoryTmp = modalHistoryTmp.splice(\r\n\t\t\t\t0,\r\n\t\t\t\tmodalHistoryTmp.indexOf(activeModal) + 1\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tmodalHistoryTmp.push(activeModal);\r\n\t\t}\r\n\r\n\t\tsetActiveModal(activeModal)\r\n\t\tsetModalHistory(modalHistoryTmp)\r\n\t}\r\n\r\n\tconst gamesChipsProps = {\r\n\t\tvalue: selectedGames,\r\n\t\tonChange: setSelectedGames,\r\n\t\toptions: games,\r\n\t\tplaceholder: \"Не выбраны\",\r\n\t\tcreatable: false,\r\n\t\tcloseAfterSelect: false\r\n\t};\r\n\r\n\tconst orgChipsProps = {\r\n\t\tvalue: selectedOrg,\r\n\t\tonChange: setSelectedOrg,\r\n\t\toptions: org,\r\n\t\tplaceholder: \"Не выбраны\",\r\n\t\tcreatable: false,\r\n\t\tcloseAfterSelect: false\r\n\t};\r\n\r\n\tconst modal = \r\n\t\t<ModalRoot activeModal={activeModal} onClose={modalBack}>\r\n\t\t\t<ModalPage\r\n\t\t\t\tonClose={modalBack}\r\n\t\t\t\tid=\"filter\"\r\n\t\t\t\tsettlingHeight={100}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader\r\n\t\t\t\t\t\tbefore={\r\n\t\t\t\t\t\t\tisMobile && <PanelHeaderClose onClick={modalBack} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tafter={<PanelHeaderSubmit onClick={modalBack} />}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tФильтры\r\n\t\t\t\t\t</ModalPageHeader>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<FormItem top=\"Игры\">\r\n\t\t\t\t\t\t<ChipsSelect {...gamesChipsProps} />\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t<FormItem top=\"Организаторы\">\r\n\t\t\t\t\t\t<ChipsSelect\r\n\t\t\t\t\t\t\t{...orgChipsProps} \r\n\t\t\t\t\t\t\tshowSelected={false}\r\n\t\t\t\t\t\t\trenderChip={({ value, label, ...rest }) => (\r\n\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\t{...rest}\r\n\t\t\t\t\t\t\t\t\tbefore={<InitialsAvatar size={20} gradientColor={calcInitialsAvatarColor(value)} />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</Chip>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\trenderOption={({option, ...otherProps }) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<CustomSelectOption\r\n\t\t\t\t\t\t\t\t\t\tbefore={\r\n\t\t\t\t\t\t\t\t\t\t\t<InitialsAvatar size={20} gradientColor={calcInitialsAvatarColor(option.value)} />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t{...otherProps}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t<FormItem className=\"rangeSlider\" top=\"Количество игроков\" bottom={`${gamers[0]} - ${gamers[1]}`}>\r\n\t\t\t\t\t\t<RangeSlider\r\n\t\t\t\t\t\t\tmin={2}\r\n\t\t\t\t\t\t\tmax={10}\r\n\t\t\t\t\t\t\tdefaultValue={gamers}\r\n\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\tonChange={(value) => setGamers(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t<FormItem top=\"Дата проведения\">\r\n\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\tmin={{ day: 1, month: 1, year: 2022 }}\r\n\t\t\t\t\t\t\tmax={{ day: 31, month: 12, year: 2023 }}\r\n\t\t\t\t\t\t\tdayPlaceholder=\"ДД\"\r\n\t\t\t\t\t\t\tmonthPlaceholder=\"MM\"\r\n\t\t\t\t\t\t\tyearPlaceholder=\"ГГ\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</ModalPage>\r\n\t\t</ModalRoot>\r\n\r\n\treturn (\r\n\t\t<ConfigProvider appearance={scheme} webviewType=\"internal\">\r\n\t\t\t<AdaptivityProvider hasMouse={true}>\r\n\t\t\t\t<AppRoot>\r\n\t\t\t\t\t<SplitLayout\r\n\t\t\t\t\t\tmodal={modal}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<SplitCol\r\n\t\t\t\t\t\t\tanimate={true}\r\n\t\t\t\t\t\t\tspaced={false}\r\n\t\t\t\t\t\t\twidth={\"100%\"}\r\n\t\t\t\t\t\t\tmaxWidth={\"100%\"}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Epic\r\n\t\t\t\t\t\t\t\tactiveStory={activeStory}\r\n\t\t\t\t\t\t\t\ttabbar={hasTabbar &&\r\n\t\t\t\t\t\t\t\t\t<Tabbar>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"events\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"events\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"События\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28NewsfeedOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"map\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"map\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Карта\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28PlaceOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"messages\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"messages\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Сообщения\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28MessageOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={activeStory === \"profile\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-story=\"profile\"\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Профиль\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon28UserCircleOutline />\r\n\t\t\t\t\t\t\t\t\t\t</TabbarItem>\r\n\t\t\t\t\t\t\t\t\t</Tabbar>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<View id=\"events\" activePanel={eventsActivePanel}>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"events\">\r\n\t\t\t\t\t\t\t\t\t\t<Events\r\n\t\t\t\t\t\t\t\t\t\t\tonOpenModal={setActiveModal}\r\n\t\t\t\t\t\t\t\t\t\t\tonOpenEvent={openEventInfoHandler}\r\n\t\t\t\t\t\t\t\t\t\t\tonAddEvent={openAddEvent}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"eventInfo\">\r\n\t\t\t\t\t\t\t\t\t\t<EventInfo onClose={closeEventInfo} event={event}/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"addEvent\">\r\n\t\t\t\t\t\t\t\t\t\t<AddEvent onClose={closeAddEvent}/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View id=\"map\" activePanel={mapActivePanel}>\r\n\t\t\t\t\t\t\t\t\t<Panel id='map'>\r\n\t\t\t\t\t\t\t\t\t\t<MapPanel onOpenEvent={openEventInfoHandler}/>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"eventInfo\">\r\n\t\t\t\t\t\t\t\t\t\t<EventInfo onClose={closeEventInfo} event={event} />\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View id=\"messages\" activePanel={messagesActivePanel}>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"messages\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatListContextProvider>\r\n\t\t\t\t\t\t\t\t\t\t\t<Messages\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChatOpen={openChatHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ChatListContextProvider>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"chat\" className=\"chatPanel\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatContextProvider chat={chat}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Chat\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClose={closeChatHanler}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonOpenChatMembersList={openChatMembersHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ChatContextProvider>\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"chatMembers\">\r\n\t\t\t\t\t\t\t\t\t\t<ChatMembersList onOpenProfile={openProfileHandler} chat={chat} onClose={closeChatMembersHandler} />\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View id=\"profile\" activePanel=\"profile\">\r\n\t\t\t\t\t\t\t\t\t<Panel id=\"profile\">\r\n\t\t\t\t\t\t\t\t\t\t<Profile hasBack={!hasTabbar} onClose={closeProfileHandler} user={user} />\r\n\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t</Epic>\r\n\t\t\t\t\t\t</SplitCol>\r\n\t\t\t\t\t</SplitLayout>\r\n\t\t\t\t</AppRoot>\r\n\t\t\t</AdaptivityProvider>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { Group, PanelHeader, View, Panel, Button, FormLayout, FormItem, Input, FormLayoutGroup, DatePicker, Select, Textarea, Checkbox, Link, ConfigProvider, AdaptivityProvider, AppRoot, SplitLayout, ScreenSpinner, Header, Separator, Snackbar, Avatar, WebviewType, } from \"@vkontakte/vkui\"\r\nimport React from \"react\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport axios from \"axios\";\r\nimport { Icon16Cancel, Icon16ErrorCircleFill } from \"@vkontakte/icons\";\r\n\r\nexport class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nickname: \"\",\r\n            password: \"\",\r\n            popout: null,\r\n            snackbar: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onRemove = this.onRemove.bind(this);\r\n        this.onSignIn = this.onSignIn.bind(this)\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onRemove(e) {\r\n        this.setState({ showPatronym: false });\r\n    }\r\n\r\n    onSignIn() {\r\n        this.setState({popout: <ScreenSpinner state=\"loading\"/>})\r\n        axios\r\n            .get(`https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Users?$filter=username%20eq%20%27${this.state.nickname}%27`)\r\n            .then(response => {\r\n                if (response.data.value.length > 0) {\r\n                    this.setState({ popout: <ScreenSpinner state=\"done\" /> })\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data.value[0][\"ID\"]))\r\n                    setTimeout(() => this.props.setLoged(true), 1500)\r\n                }\r\n                else {\r\n                    this.setState({ popout: <ScreenSpinner state=\"error\" /> })\r\n                    setTimeout(() => this.setState({ \r\n                        popout: null, \r\n                        snackbar: \r\n                            <Snackbar \r\n                                onClose={() => this.setState({snackbar: null})}\r\n                                layout=\"vertical\"\r\n                                before={\r\n                                    <Avatar\r\n                                        size={24}\r\n                                        style={{ background: \"var(--orange)\" }}\r\n                                    >\r\n                                        <Icon16Cancel fill=\"#fff\" width={14} height={14} />\r\n                                    </Avatar>\r\n                                }\r\n                                action=\"Зарегистрироваться\"\r\n                                onActionClick={() => this.props.onSignUp(true)}\r\n                            >\r\n                                Такого пользователя не существует\r\n                            </Snackbar> \r\n                    }), 1000)\r\n                }\r\n            })\r\n            .catch(() => {\r\n                this.setState({ popout: <ScreenSpinner state=\"error\" /> })\r\n                setTimeout(() => this.setState({ popout: null }), 1500)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { nickname, password } = this.state;\r\n\r\n        return (\r\n            <ConfigProvider webviewType={WebviewType.INTERNAL}>\r\n                <AdaptivityProvider>\r\n                    <AppRoot>\r\n                        <SplitLayout\r\n                            header={<PanelHeader separator={false} />}\r\n                            style={{ justifyContent: \"center\" }}\r\n                            popout={this.state.popout}\r\n                        >\r\n                            <View activePanel=\"new-user\">\r\n                                <Panel id=\"new-user\">\r\n                                    <PanelHeader>Авторизация</PanelHeader>\r\n                                    <Group>\r\n                                        <FormLayout>\r\n                                            <FormItem top=\"Никнейм\">\r\n                                                <Input\r\n                                                    type=\"nickname\"\r\n                                                    name=\"nickname\"\r\n                                                    value={nickname}\r\n                                                    onChange={this.onChange}\r\n                                                    placeholder=\"Введите никнейм\"\r\n                                                />\r\n                                            </FormItem>\r\n                                            <FormItem top=\"Пароль\">\r\n                                                <Input\r\n                                                    type=\"password\"\r\n                                                    name=\"password\"\r\n                                                    value={password}\r\n                                                    onChange={this.onChange}\r\n                                                    placeholder=\"Введите пароль\"\r\n                                                />\r\n                                            </FormItem>\r\n                                            <FormItem>\r\n                                                <Button \r\n                                                    onClick={this.onSignIn} \r\n                                                    size=\"l\" \r\n                                                    stretched \r\n                                                    disabled={!nickname || !password}\r\n                                                >\r\n                                                    Авторизоваться\r\n                                                </Button>\r\n                                            </FormItem>\r\n                                            <Separator/>\r\n                                            <FormItem>\r\n                                                <Header style={{ justifyContent: \"center\" }} mode=\"secondary\">Еще нет аккаунта?</Header>\r\n                                                <Button\r\n                                                    size=\"l\"\r\n                                                    stretched\r\n                                                    onClick={() => this.props.onSignUp(true)}\r\n                                                >\r\n                                                    Зарегистрироваться\r\n                                                </Button>\r\n                                            </FormItem>\r\n                                        </FormLayout>\r\n                                        {this.state.snackbar}\r\n                                    </Group>\r\n                                </Panel>\r\n                            </View>\r\n                        </SplitLayout>\r\n                    </AppRoot>\r\n                </AdaptivityProvider>\r\n            </ConfigProvider>\r\n        );\r\n    }\r\n}","import { Group, PanelHeader, View, Panel, Button, FormLayout, FormItem, Input, FormLayoutGroup, DatePicker, Select, Textarea, Checkbox, Link, ConfigProvider, AdaptivityProvider, AppRoot, SplitLayout, WebviewType, ScreenSpinner, PanelHeaderBack, } from \"@vkontakte/vkui\"\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\n\r\nexport class SignUp extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            bio: \"\",\r\n            date: { day: 1, month: 1, year: 2002 },\r\n            sex: 0,\r\n            phoneNumber: \"\",\r\n            nickname: \"\",\r\n            popout: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSignUp = this.onSignUp.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSignUp() {\r\n        this.setState({ popout: <ScreenSpinner state=\"loading\" /> })\r\n        axios\r\n            .post(\"https://b451dbd8trial-dev-dice.cfapps.us10.hana.ondemand.com/main/Users\", {\r\n                username: this.state.nickname,\r\n                email: this.state.email,\r\n                phoneNumber: this.state.phoneNumber,\r\n                bio: this.state.bio,\r\n                dateOfBirth: new Date(this.state.date.year, this.state.date.month - 1, this.state.date.day, 3, 0, 0).toISOString().substring(0, 10)\r\n            })\r\n            .then(response => {\r\n                this.setState({ popout: <ScreenSpinner state=\"done\" /> })\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data.ID))\r\n                setTimeout(() => { this.props.setLoged(true), this.props.setWillSignUp(false) } , 1500)\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n                this.setState({ popout: <ScreenSpinner state=\"error\" /> })\r\n                setTimeout(() => this.setState({ popout: null }), 1500)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { email, password1, password2, nickname } = this.state;\r\n\r\n        return (\r\n            <ConfigProvider webviewType={WebviewType.INTERNAL}>\r\n                <AdaptivityProvider hasMouse={true}>\r\n                    <AppRoot>\r\n                        <SplitLayout\r\n                            header={<PanelHeader separator={false} />}\r\n                            style={{ justifyContent: \"center\" }}\r\n                            popout={this.state.popout}\r\n                        >\r\n                            <View activePanel=\"new-user\">\r\n                                <Panel id=\"new-user\">\r\n                                    <PanelHeader \r\n                                        className=\"shadowPanelHeader\" \r\n                                        separator={false}\r\n                                        before={\r\n                                            <PanelHeaderBack onClick={this.props.onClose}/>\r\n                                        }\r\n                                    >Регистрация</PanelHeader>\r\n                                    <Group>\r\n                                        <FormLayout>\r\n                                            <FormItem\r\n                                                top=\"E-mail\"\r\n                                            >\r\n                                                <Input\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    value={email}\r\n                                                    onChange={this.onChange}\r\n                                                />\r\n                                            </FormItem>\r\n\r\n                                            <FormLayoutGroup >\r\n                                                <FormItem top=\"Никнейм\">\r\n                                                    <Input name=\"nickname\" value={this.state.nickname} onChange={this.onChange}/>\r\n                                                </FormItem>\r\n                                            </FormLayoutGroup>\r\n\r\n                                            <FormItem top=\"Пароль\">\r\n                                                <Input\r\n                                                    type=\"password\"\r\n                                                    name=\"password1\"\r\n                                                    value={password1}\r\n                                                    onChange={this.onChange}\r\n                                                    placeholder=\"Введите пароль\"\r\n                                                />\r\n                                            </FormItem>\r\n\r\n                                            <FormItem\r\n                                                status={password1 != \"\" ?\r\n                                                    password2 != \"\" ?\r\n                                                        password1 == password2 ? \"valid\" : \"error\"\r\n                                                        : \"default\"\r\n                                                    : \"default\"}\r\n                                                bottom={\r\n                                                    password1 != \"\" ?\r\n                                                        password2 != \"\" ?\r\n                                                            password1 == password2 ? \"Пароли совпадают!\" : \"Пожалуйста, введите корректный пароль\"\r\n                                                            : \"Пароль может содержать только латинские буквы и цифры\"\r\n                                                        : \"Пароль может содержать только латинские буквы и цифры\"\r\n                                                }>\r\n                                                <Input\r\n                                                    type=\"password\"\r\n                                                    name=\"password2\"\r\n                                                    value={password2}\r\n                                                    onChange={this.onChange}\r\n                                                    placeholder=\"Повторите пароль\"\r\n                                                />\r\n                                            </FormItem>\r\n\r\n                                            <FormLayoutGroup>\r\n                                                <FormItem top=\"Номер телефона\">\r\n                                                    <Input \r\n                                                        value={this.state.phoneNumber} \r\n                                                        type=\"phone\" \r\n                                                        placeholder=\"+375290000000\"\r\n                                                        name=\"phoneNumber\"\r\n                                                        onChange={this.onChange} \r\n                                                    />\r\n                                                </FormItem>\r\n                                            </FormLayoutGroup>\r\n\r\n                                            <FormItem top=\"Дата рождения\">\r\n                                                <DatePicker\r\n                                                    min={{ day: 1, month: 1, year: 1901 }}\r\n                                                    max={{ day: 31, month: 12, year: 2022 }}\r\n                                                    dayPlaceholder=\"ДД\"\r\n                                                    monthPlaceholder=\"MM\"\r\n                                                    yearPlaceholder=\"ГГ\"\r\n                                                    defaultValue={this.state.date}\r\n                                                    onDateChange={value => this.setState({date: value})}\r\n                                                />\r\n                                            </FormItem>\r\n\r\n                                            <FormItem top=\"Пол\">\r\n                                                <Select\r\n                                                    placeholder=\"Выберите пол\"\r\n                                                    defaultValue={0}\r\n                                                    name=\"sex\"\r\n                                                    onChange={this.onChange}\r\n                                                    options={[\r\n                                                        {\r\n                                                            value: 1,\r\n                                                            label: \"Мужской\",\r\n                                                        },\r\n                                                        {\r\n                                                            value: 2,\r\n                                                            label: \"Женский\",\r\n                                                        },\r\n                                                        {\r\n                                                            value: 3,\r\n                                                            label: \"Другой\",\r\n                                                        },\r\n                                                    ]}\r\n                                                />\r\n                                            </FormItem>\r\n                                            <FormItem top=\"О себе\">\r\n                                                <Textarea name=\"bio\" onChange={this.onChange} value={this.state.bio}/>\r\n                                            </FormItem>\r\n                                            <FormItem>\r\n                                                <Button \r\n                                                    size=\"l\" \r\n                                                    stretched\r\n                                                    onClick={this.onSignUp}\r\n                                                    disabled={password1 == \"\" || password2 == \"\" || password1 != password2 || nickname == \"\"}\r\n                                                >\r\n                                                    Зарегистрироваться\r\n                                                </Button>\r\n                                            </FormItem>\r\n                                        </FormLayout>\r\n                                    </Group>\r\n                                </Panel>\r\n                            </View>\r\n                        </SplitLayout>\r\n                    </AppRoot>\r\n                </AdaptivityProvider>\r\n            </ConfigProvider>\r\n        );\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\nimport { SignIn } from \"./panels/signIn\";\r\nimport './styles/index.css'\r\nimport { SignUp } from \"./panels/signUp\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nconst Index = () => {\r\n    const [loged, setLoged] = useState(JSON.parse(localStorage.getItem(\"user\"))) \r\n    const [willSignUp, setWillSignUp] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            {loged && !willSignUp && <App/>}\r\n            {!loged && !willSignUp && <SignIn setLoged={setLoged} onSignUp={setWillSignUp}/>}\r\n            {!loged && willSignUp && <SignUp onClose={() => setWillSignUp(false)} setLoged={setLoged} setWillSignUp={setWillSignUp}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nReactDOM.render(<Index/>, document.getElementById(\"root\"));\r\n\r\n// if (process.env.NODE_ENV === \"development\") {\r\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n// }\r\n"],"sourceRoot":""}